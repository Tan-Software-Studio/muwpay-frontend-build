{"version":3,"file":"static/js/340.adf3c6f5.chunk.js","mappings":"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","sources":["../../src/Layout.ts","../node_modules/@solana/buffer-layout/node_modules/buffer/index.js","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@solana/web3.js/node_modules/buffer/index.js","../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/@noble/hashes/src/cryptoBrowser.ts","../node_modules/@noble/hashes/src/_sha2.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/sha512.ts","../node_modules/@noble/ed25519/lib/esm/index.js","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/@noble/hashes/src/sha3.ts","../node_modules/@noble/hashes/src/hmac.ts","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@solana/web3.js/src/utils/ed25519.ts","../node_modules/@solana/web3.js/src/utils/to-buffer.ts","../node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/web3.js/src/account.ts","../node_modules/@solana/web3.js/src/transaction/constants.ts","../node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../node_modules/@solana/web3.js/src/message/account-keys.ts","../node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../node_modules/@solana/web3.js/src/utils/assert.ts","../node_modules/@solana/web3.js/src/transaction/legacy.ts","../node_modules/@solana/web3.js/src/message/compiled-keys.ts","../node_modules/@solana/web3.js/src/message/legacy.ts","../node_modules/@solana/web3.js/src/message/v0.ts","../node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../node_modules/@solana/web3.js/src/utils/sleep.ts","../node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/web3.js/src/utils/bigint.ts","../node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/web3.js/src/programs/system.ts","../node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","../node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@solana/web3.js/src/rpc-websocket.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../node_modules/@solana/web3.js/src/account-data.ts","../node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../node_modules/@solana/web3.js/src/programs/compute-budget.ts","../node_modules/@solana/web3.js/src/programs/ed25519.ts","../node_modules/@solana/web3.js/src/utils/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/stake.ts","../node_modules/@solana/web3.js/src/programs/vote.ts","../node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@solana/web3.js/src/index.ts","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../../src/classes.ts","../../src/error-constants.ts","../../src/errors.ts","../../src/index.ts","../../src/utils.ts","../node_modules/base-x/src/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/bs58/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  // Cleanup internal state. Not '.clean' because instance is not usable after that.\n  // Clean usually resets instance to initial state, but it is not possible for keyed hashes if key is consumed into state.\n  // NOTE: if digest is not consumed by user, user need manually call '.destroy' if zeroing is required\n  abstract destroy(): void;\n  // Unsafe because doesn't check if \"to\" is correct. Can be used as clone() if no opts passed.\n  // Why cloneInto instead of clone? Mostly performance (same as _digestInto), but also has nice property: it reuses instance\n  // which means all internal buffers is overwritten, which also causes overwrite buffer which used for digest (in some cases).\n  // We don't provide any guarantees about cleanup (it is impossible to!), so should be enough for now.\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto.web) {\n    return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n  } else if (crypto.node) {\n    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n  } else {\n    throw new Error(\"The environment doesn't have randomBytes function\");\n  }\n}\n","// Global symbol available in browsers only\ndeclare const self: Record<string, any> | undefined;\nexport const crypto: { node?: any; web?: any } = {\n  node: undefined,\n  web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _8n = BigInt(8);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.BASE;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        let p = this.multiplyUnsafe(CURVE.l / _2n).double();\n        if (CURVE.l % _2n)\n            p = p.add(this);\n        return p.equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(ExtendedPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    assert.number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    assert.exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    assert.exists(this, false);\n    assert.bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    assert.number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    assert.output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructorWithOpts<Keccak, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: \"utf8\" | \"hex\" }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, Buffer.from(signature));\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, Buffer.from(signature));\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, Buffer.from(signature));\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import { SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<SolflareWallet> {\n  protected getProviderHandlers(injectedProvider: SolflareWallet): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider, SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: SolflareWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolletHandlers } from \"./providerHandlers\";\n\nexport class SolletInjectedProvider extends BaseInjectedProvider<SolletWallet> {\n  protected getProviderHandlers(injectedProvider: SolletWallet): IProviderHandlers {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\nimport { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolletHandlers = (injectedProvider: SolletWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  providerHandlers.signMessage = async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n    const { signature } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n  providerHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return providerHandlers;\n};\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n",null,null,null,null,null,"'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["_get","require","_getPrototypeOf","_assertThisInitialized","_createForOfIteratorHelper","_inherits","_createSuper","_classCallCheck","_createClass","buffer_1","checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","Buffer","from","buffer","byteOffset","length","Layout","span","property","Number","isInteger","key","value","offset","RangeError","rv","Object","create","constructor","prototype","assign","values","nameWithProperty","name","lo","ExternalLayout","_Layout","_super","apply","arguments","Error","GreedyCount","_ExternalLayout","_super2","_this","elementSpan","undefined","call","rem","Math","floor","src","OffsetLayout","_ExternalLayout2","_super3","layout","_this2","UInt","UIntBE","decode","encode","_Layout2","_super4","_this3","readUIntLE","writeUIntLE","_Layout3","_super5","_this4","readUIntBE","writeUIntBE","Int","_Layout4","_super6","_this5","readIntLE","writeIntLE","IntBE","_Layout5","_super7","_this6","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","_Layout6","_super8","readUInt32LE","split","writeUInt32LE","NearUInt64BE","_Layout7","_super9","readUInt32BE","writeUInt32BE","NearInt64","_Layout8","_super10","readInt32LE","writeInt32LE","NearInt64BE","_Layout9","_super11","readInt32BE","writeInt32BE","Float","_Layout10","_super12","readFloatLE","writeFloatLE","FloatBE","_Layout11","_super13","readFloatBE","writeFloatBE","Double","_Layout12","_super14","readDoubleLE","writeDoubleLE","DoubleBE","_Layout13","_super15","readDoubleBE","writeDoubleBE","Sequence","_Layout14","_super16","elementLayout","count","_this7","isCount","idx","getSpan","i","push","elo","reduce","v","Structure","_Layout15","_super17","fields","decodePrefixes","_this8","Array","isArray","acc","_step","_iterator","s","n","done","fd","err","e","f","fsp","_step2","dest","makeDestinationObject","_iterator2","_step3","firstOffset","lastOffset","lastWrote","_iterator3","fv","_step4","_iterator4","shift","_step5","_iterator5","_step6","_iterator6","UnionDiscriminator","UnionLayoutDiscriminator","_UnionDiscriminator","_super18","_this9","Union","_Layout16","_super19","discr","defaultLayout","_this10","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","_Layout17","_super20","union","_this11","fromArray","fixBitwiseResult","BitStructure","_Layout18","_super21","word","msb","_this12","_packedSetValue","_packedGetValue","_step7","_iterator7","_step8","_iterator8","bits","bf","BitField","Boolean","_step9","_iterator9","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","_BitField","_super22","Blob","_Layout19","_super23","_this13","slice","srcBuffer","write","toString","CString","_Layout20","_super24","String","srcb","copy","UTF8","_Layout21","_super25","maxSpan","_this14","Constant","_Layout22","_super26","_this15","exports","base64","ieee754","customInspectSymbol","Symbol","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","byteLength","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","len","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","c","hi","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","_Base","NodeError","writable","configurable","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","module","assert","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","index","parseHexByte","lowerBound","r","parseBase","move","num","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","w","off","_strip","limbLen","limbPow","total","mod","imuln","_iaddn","_move","clone","_expand","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toBuffer","toArrayLike","smallMulTo","self","k","ncarry","rword","maxJ","ArrayType","reqLength","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","isSafeInteger","_len","lengths","_key","bool","hash","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","u32","crypto","Uint32Array","createView","DataView","rotr","padStart","toBytes","TextEncoder","Hash","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","SHA2","_Hash","padOffset","isLE","view","take","process","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","state","digestInto","destroy","to","_to","_toConsumableArray","U32_MASK64","fromBig","u64","lst","le","Ah","Al","_fromBig","_ref","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","_u64$split","map","_u64$split2","_slicedToArray","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","_SHA","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","_u64$add","All","_u64$add2","_u64$add3","_u64$add4","_u64$add5","_u64$add6","_u64$add7","_u64$add8","_u64$add9","SHA512_224","_SHA2","SHA512_256","_SHA3","SHA384","_SHA4","sha512","_0n","_1n","_2n","_8n","CU_O","CURVE","freeze","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","X2Z1","Y1Z2","Y2Z1","x1y1","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","affinePoint","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","windowSize","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","constTimeNegate","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","is0","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","condition","item","assertRstPoint","RistrettoPoint","ep","_this$ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","numberTo32BytesLE","bytesToHex","toRawBytes","toHex","two","subtract","multiply","r0","Ns","_uvRatio","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","hex","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","R2","emsg","equalBytes","u1_2","u2_2","_invertSqrt2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","_uvRatio2","isXOdd","_fromPrivateKey","_asyncToGenerator","_regeneratorRuntime","mark","_callee","privateKey","wrap","_context","getExtendedPublicKey","abrupt","sent","point","stop","_x2","Signature","assertValidity","u8","fromHex","concatBytes","arrays","every","result","pad","hexes","uint8a","hexToBytes","hexByte","byte","isNaN","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","modulo","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","adjustBytes25519","checkPrivateKey","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","_x3","_getExtendedPublicKey","_callee3","_context3","t0","utils","t1","getExtendedPublicKeySync","prepareVerification","sig","publicKey","SB","pub","finishVerification","kA","sync","getPublicKey","sign","_getExtendedPublicKey2","R","verify","_prepareVerification","_setWindowSize","node","nodeCrypto","web","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","_sha","_callee2","_args2","_context2","subtle","createHash","precompute","cached","sha512Sync","defineProperties","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","SHA224","sha256","toFailures","StructError","_TypeError","failure","failures","rest","_objectWithoutProperties","_excluded","path","join","_cached","_wrapNativeSuper","isIterable","isObject","iterator","print","JSON","stringify","toFailure","context","struct","branch","_result","refinement","_result$message","_objectSpread","finish","_marked","run","options","_options$path","_options$branch","_options$coerce","coerce","_options$mask","valid","_failure","_step3$value","ts","coercer","schema","validator","entries","Map","Set","t2","refiner","t3","Struct","props","_props$coercer","_props$entries","validate","is","tuples","tuple","_input$next","shiftIterator","_context4","define","Element","_step9$value","_context7","boolean","Class","literal","constant","description","never","nullable","optional","record","Key","Value","_context13","keys","Elements","Never","_context15","_i","_keys","_context16","Structs","_step18","_iterator18","_run","_toArray","_step19","_iterator19","unknown","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state32","idx1","idx0","B0","B1","Th","Tl","curH","curL","keccakP","keccak","bufferOut","writeInto","xofInto","gen","keccak_256","genShake","hashCons","opts","wrapConstructorWithOpts","dkLen","HMAC","iHash","oHash","getPrototypeOf","hmac","_3n","beta","divNearest","endo","POW_2_128","c1","c2","k1","k2","k1neg","k2neg","fieldLen","groupLen","hashLen","compressedLen","uncompressedLen","weierstrass","x3","USE_ENDOMORPHISM","ShaError","_Error","assertJacPoint","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","_endo$splitScalar","k1p","k2p","fake","_endo$splitScalar2","_this$wNAF","f1p","_this$wNAF2","f2p","_this$wNAF3","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","rt","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","signature","recovery","_normalizeSignature","normalizeSignature","truncateHash","radj","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toDERRawBytes","toCompactHex","hexToNumber","_parseDERSignature","_parseDERInt","_parseDERInt2","rBytesLeft","parseDERSignature","fromDER","_sha256Sync","_hmacSha256Sync","numTo32b","truncateOnly","bits2int_2","HmacDrbg","qByteLen","counter","_len2","_key2","hmacSha256","_len3","_key3","_reseed","seed","_args","checkSync","hmacSync","_generate","sl","incr","kmdToSig","kBytes","lowS","kinv","normalizeS","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","_Object$assign","canonical","der","recovered","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","minLen","_callee4","_len4","messages","_key4","_args4","forEach","_hmacSha","_callee5","_len5","_key5","ckey","createHmac","_args5","_context5","importKey","_x9","sha256Sync","hmacSha256Sync","taggedHash","_taggedHash","_callee6","tagP","tagH","_len6","_key6","_args6","_context6","_x10","taggedHashSync","_len7","_key7","_JacobianPoint","ed25519","_ed25519$utils","generateKeypair","privateScalar","secretKey","isOnCurve","_unused","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_Struct2","_Symbol$toStringTag2","_bn","isPublicKeyData","decoded","bs58","toBase58","zeroPad","_createWithSeed","fromPublicKey","programId","publicKeyBytes","seeds","_createProgramAddress","createProgramAddressSync","_x4","_x5","address","nonce","seedsWithNonce","_findProgramAddress","findProgramAddressSync","_x6","_x7","pubkeyData","toStringTag","default","kind","PACKET_DATA_SIZE","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","_Error2","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","_Error3","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","field","decodeLength","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","_ref3","writableNonSigners","_ref5","readonlyNonSigners","_ref7","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","_ref9","_ref11","_ref13","_ref15","lookupTable","_this$drainKeysFoundI","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","_this$drainKeysFoundI2","writableIndexes","drainedWritableKeys","_this$drainKeysFoundI3","_this$drainKeysFoundI4","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","_loop","_step2$value","lookupTableIndex","findIndex","entry","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","numSignedAccounts","has","isProgramId","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","_compiledKeys$getMess","compile","payerKey","getMessageComponents","_compiledKeys$getMess2","compileInstructions","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","_loop2","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","_step10","_iterator10","encodedWritableIndexesLength","encodedReadonlyIndexesLength","_step11","compiledKeys","lookupTableAccounts","_iterator11","extractResult","extractTableLookup","_accountKeysFromLooku","_accountKeysFromLooku2","_extractResult","addressTableLookup","_extractResult$","_compiledKeys$getMess3","_compiledKeys$getMess4","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","_ref17","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","_ref18","items","warn","programIds","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","_uniqueMetas$splice","payerMeta","unshift","_step12","_iterator12","_loop3","signedKeys","unsignedKeys","_ref19","compileMessage","pair","_compile","_getEstimatedFee","connection","getFeeForMessage","_x8","seen","uniqueSigners","_i4","_signers","signer","_partialSign","_i5","_signers2","_addSignature","sigpair","requireAllSignatures","_verifySignatures","serializeMessage","_step13","_iterator13","_step13$value","config","verifySignatures","_serialize","signatureCount","transactionLength","wireTransaction","_ref20","keyObj","populate","sigPubkeyPair","some","isAccountSigner","isAccountWritable","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","_x11","_x12","_sendAndConfirmTransaction","_callee106","sendOptions","status","nonceAccountPubkey","_context106","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","confirmTransaction","abortSignal","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","_encodeDecode","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","chunkSize","_load","program","balanceNeeded","programInfo","dataLayout","transactions","_data","_transaction","_dataLayout","_data2","_transaction2","getMinimumBalanceForRentExemption","getAccountInfo","executable","owner","transfer","bytesLengthPadding","_rpcEndpoint","all","_x13","_x14","_x15","_x16","_x17","objToString","objKeys","isArrayProp","propVal","toStr","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","SendTransactionError","_Error4","logs","SolanaJSONRPCError","_Error5","_ref21","customMessage","fetchImpl","globalThis","fetch","RpcWebSocketClient","_RpcWebSocketCommonCl","generate_request_id","url","rpc","createRpc","autoconnect","max_reconnects","reconnect","reconnect_interval","underlyingSocket","socket","_this$underlyingSocke","_get2","readyState","reject","_this$underlyingSocke2","_get3","RpcWebSocketCommonClient","AddressLookupTableAccount","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetInflationRateResult","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","httpAgent","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","_matches","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","customFetch","fetchWithMiddleware","_ref22","info","init","modifiedFetchArgs","modifiedInfo","modifiedInit","_x18","_x19","clientBrowser","RpcClient","_ref23","_callee7","request","callback","too_many_requests_retries","waitTime","text","method","body","agent","headers","log","statusText","ok","_x20","_x21","createRpcClient","client","createRpcRequest","requests","batch","methodName","createRpcBatchRequest","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_getBalanceAndContext","_callee8","_extractCommitmentFro","unsafeRes","_context8","_buildArgs","_x22","_x23","_getBalance","_callee9","_context9","getBalanceAndContext","then","catch","_x24","_x25","_getBlockTime","_callee10","_context10","_x26","_getMinimumLedgerSlot","_callee11","_context11","_getFirstAvailableBlock","_callee12","_context12","_getSupply","_callee13","configArg","_x27","_getTokenSupply","_callee14","tokenMintAddress","_context14","_x28","_x29","_getTokenAccountBalance","_callee15","tokenAddress","_x30","_x31","_getTokenAccountsByOwner","_callee16","ownerAddress","_extractCommitmentFro2","_x32","_x33","_x34","_getParsedTokenAccountsByOwner","_callee17","_context17","_x35","_x36","_x37","_getLargestAccounts","_callee18","_context18","_x38","_getTokenLargestAccounts","_callee19","mintAddress","_context19","_x39","_x40","_getAccountInfoAndContext","_callee20","_extractCommitmentFro3","_context20","_x41","_x42","_getParsedAccountInfo","_callee21","_extractCommitmentFro4","_context21","_x43","_x44","_getAccountInfo","_callee22","_context22","getAccountInfoAndContext","_x45","_x46","_getMultipleParsedAccounts","_callee23","publicKeys","rawConfig","_extractCommitmentFro5","_context23","_x47","_x48","_getMultipleAccountsInfoAndContext","_callee24","_extractCommitmentFro6","_context24","_x49","_x50","_getMultipleAccountsInfo","_callee25","_context25","getMultipleAccountsInfoAndContext","_x51","_x52","_getStakeActivation","_callee26","_extractCommitmentFro7","_context26","_x53","_x54","_x55","_getProgramAccounts","_callee27","configOrCommitment","_extractCommitmentFro8","_ref24","configWithoutEncoding","_context27","_excluded2","_x56","_x57","_getParsedProgramAccounts","_callee28","_extractCommitmentFro9","_context28","_x58","_x59","_confirmTransaction","_callee29","strategy","rawSignature","_config$abortSignal","decodedSignature","_context29","aborted","reason","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","_x60","_x61","signal","addEventListener","_ref25","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","abortConfirmation","removeSignatureListener","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","_callee30","_context30","getSignatureStatus","_confirmTransactionUsingBlockHeightExceedanceStrategy","_callee33","_ref27","_ref27$strategy","expiryPromise","_this$getTransactionC","cancellationPromise","outcome","_this16","_context33","checkBlockHeight","_ref28","_callee31","_context31","getBlockHeight","_callee32","currentBlockHeight","_context32","BLOCKHEIGHT_EXCEEDED","getTransactionConfirmationPromise","getCancellationPromise","race","_x62","_confirmTransactionUsingDurableNonceStrategy","_callee36","_ref30","_ref30$strategy","_this$getTransactionC2","_signatureStatus","signatureStatus","_outcome$slotInWhichN","commitmentForStatus","_this17","_context36","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","_ref31","_callee34","_yield$_this17$getNon","_context34","getNonceAndContext","_callee35","_context35","NONCE_INVALID","slotInWhichNonceDidAdvance","_x63","_confirmTransactionUsingLegacyTimeoutStrategy","_callee37","_ref33","timeoutId","_this$getTransactionC3","_this18","_context37","timeoutMs","TIMED_OUT","clearTimeout","_x64","_getClusterNodes","_callee38","_context38","_getVoteAccounts","_callee39","_context39","_x65","_getSlot","_callee40","_extractCommitmentFro10","_context40","_x66","_getSlotLeader","_callee41","_extractCommitmentFro11","_context41","_x67","_getSlotLeaders","_callee42","startSlot","_context42","_x68","_x69","_getSignatureStatus","_callee43","_yield$this$getSignat","_context43","getSignatureStatuses","_x70","_x71","_getSignatureStatuses","_callee44","_context44","_x72","_x73","_getTransactionCount","_callee45","_extractCommitmentFro12","_context45","_x74","_getTotalSupply","_callee46","_context46","getSupply","excludeNonCirculatingAccountsList","_x75","_getInflationGovernor","_callee47","_context47","_x76","_getInflationReward","_callee48","_extractCommitmentFro13","_context48","_x77","_x78","_x79","_getInflationRate","_callee49","_context49","_getEpochInfo","_callee50","_extractCommitmentFro14","_context50","_x80","_getEpochSchedule","_callee51","epochSchedule","_context51","_getLeaderSchedule","_callee52","_context52","_getMinimumBalanceForRentExemption","_callee53","_context53","_x81","_x82","_getRecentBlockhashAndContext","_callee54","_context54","_x83","_getRecentPerformanceSamples","_callee55","_context55","_x84","_getFeeCalculatorForBlockhash","_callee56","_res$result","_context56","_x85","_x86","_getFeeForMessage","_callee57","wireMessage","_context57","_x87","_x88","_getRecentBlockhash","_callee58","_context58","getRecentBlockhashAndContext","_x89","_getLatestBlockhash","_callee59","_context59","getLatestBlockhashAndContext","_x90","_getLatestBlockhashAndContext","_callee60","_extractCommitmentFro15","_context60","_x91","_getVersion","_callee61","_context61","_getGenesisHash","_callee62","_context62","_getBlock","_callee63","_extractCommitmentFro16","_res","_res2","_context63","_buildArgsAtLeastConfirmed","transactionDetails","_ref34","_x92","_x93","_getParsedBlock","_callee64","_extractCommitmentFro17","_res3","_res4","_context64","_x94","_x95","_getBlockHeight","_callee65","_extractCommitmentFro18","_context65","_x96","_getBlockProduction","_callee66","extra","_context66","_excluded3","_x97","_getTransaction","_callee67","_extractCommitmentFro19","_context67","_x98","_x99","_getParsedTransaction","_callee68","_extractCommitmentFro20","_context68","_x100","_x101","_getParsedTransactions","_callee69","_extractCommitmentFro21","_this19","_context69","_x102","_x103","_getTransactions","_callee70","_extractCommitmentFro22","_this20","_context70","_x104","_x105","_getConfirmedBlock","_callee71","block","_context71","_ref35","_ref36","_x106","_x107","_getBlocks","_callee72","endSlot","_context72","_x108","_x109","_x110","_getBlockSignatures","_callee73","_context73","_x111","_x112","_getConfirmedBlockSignatures","_callee74","_context74","_x113","_x114","_getConfirmedTransaction","_callee75","_context75","_x115","_x116","_getParsedConfirmedTransaction","_callee76","_context76","_x117","_x118","_getParsedConfirmedTransactions","_callee77","_this21","_context77","_x119","_x120","_getConfirmedSignaturesForAddress","_callee78","firstAvailableBlock","highestConfirmedRoot","_block","confirmedSignatureInfo","_context78","getFirstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","before","getConfirmedSignaturesForAddress2","_x121","_x122","_x123","_getConfirmedSignaturesForAddress2","_callee79","_context79","_x124","_x125","_x126","_getSignaturesForAddress","_callee80","_context80","_x127","_x128","_x129","_getAddressLookupTable","_callee81","_yield$this$getAccoun","accountInfo","_context81","_x130","_x131","_getNonceAndContext","_callee82","_yield$this$getAccoun2","_context82","fromAccountData","_x132","_x133","_getNonce","_callee83","_context83","_x134","_x135","_requestAirdrop","_callee84","_context84","_x136","_x137","_blockhashWithExpiryBlockHeight2","_callee85","disableCache","timeSinceFetch","expired","_context85","Date","now","_pollNewBlockhash","_x138","_pollNewBlockhash2","_callee86","startTime","cachedLatestBlockhash","cachedBlockhash","_context86","getLatestBlockhash","MS_PER_SLOT","_getStakeMinimumDelegation","_callee87","_extractCommitmentFro23","_context87","_x139","_simulateTransaction","_callee88","transactionOrMessage","configOrSigners","includeAccounts","_wireTransaction","_encodedTransaction","_config","_args89","_unsafeRes","_res5","originalTx","_transaction3","_transaction4","_signature3","encodedTransaction","traceIndent","logTrace","_context88","_blockhashWithExpiryBlockHeight","nonProgramIds","sigVerify","_x140","_x141","_x142","_sendTransaction","_callee89","signersOrOptions","_wireTransaction2","_signature4","_context89","sendRawTransaction","_x143","_x144","_x145","_sendRawTransaction","_callee90","rawTransaction","_context90","sendEncodedTransaction","_x146","_x147","_sendEncodedTransaction","_callee91","_context91","_x148","_x149","_this22","setInterval","_callee92","_context92","notify","_updateSubscriptions","_this23","MAX_SAFE_INTEGER","clearInterval","_ref38","_ref39","_setSubscription","nextSubscription","_this$_subscriptionsB","prevState","stateChangeCallbacks","cb","_unused3","clientSubscriptionId","_this$_subscriptionSt","_this24","_updateSubscriptions2","_callee96","activeWebSocketGeneration","isCurrentConnectionStillActive","_this25","_context96","close","connect","_ref40","_callee95","_context95","callbacks","serverSubscriptionId","_callee93","_context93","_callee94","unsubscribeMethod","_context94","_x150","callbackArgs","notification","_create","_handleServerNotification","subscriptionConfig","_this26","fastStableStringify$1","existingSubscription","_callee97","_context97","_makeSubscription","_removeAccountChangeListener","_callee98","_context98","_unsubscribeClientSubscription","_x151","_create2","accountId","filters","_removeProgramAccountChangeListener","_callee99","_context99","_x152","mentions","_removeOnLogsListener","_callee100","_context100","_x153","_create3","_create4","_removeSlotChangeListener","_callee101","_context101","_x154","_create5","_removeSlotUpdateListener","_callee102","_context102","_x155","_unsubscribeClientSubscription2","_callee103","subscriptionName","dispose","_context103","_x156","_x157","override","_create6","_this27","_err","_this28","_options$commitment","_excluded4","_removeSignatureListener","_callee104","_context104","_x158","_create7","_removeRootChangeListener","_callee105","_context105","_x159","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","_PublicKey$findProgra","recentSlot","_PublicKey$findProgra2","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","secp256k1","_len8","msgs","_key8","ecdsaSign","privKey","_initSigArgs","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","_params$instructionIn","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","_ecdsaSign","_ecdsaSign2","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","lockup","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteInit","voteAuthorizeWithSeedArgs","VoteProgram","Voter","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","createChainIdMiddleware","chainId","req","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","getAccounts","createAsyncMiddleware","_ref2","createRequestAccountsMiddleware","requestAccounts","_ref4","createGenericJRPCMiddleware","targetMethod","handler","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","_BaseProvider","_createSuper$6","chainConfig","_objectSpread$3","chainNamespace","CHAIN_NAMESPACES","_switchChain","_setupProvider","injectedProvider","engine","solanaMiddleware","configMiddleware","injectedProviderProxy","provider","JRPCEngine","getProviderHandlers","getInjectedProviderProxy","providerFromEngine","updateProviderEngineProxy","lookupNetwork","_lookupNetwork","BaseProvider","getBaseProviderHandlers","_requestAccounts","_getAccounts","_getPrivateKey","ethErrors","_getSecretKey","_signTransaction","_signMessage","sigData","display","_signAllTransactions","_req$params","_req$params2","_signAndSendTransaction","txRes","createInjectedProviderProxyMiddleware","_next","_objectSpread$2","PhantomInjectedProvider","_BaseInjectedProvider","_createSuper$5","SlopeInjectedProxyProvider","_createSuper$4","getProviderEngineProxy","_yield$injectedProvid","_yield$injectedProvid2","txMessage","_yield$injectedProvid3","addSignature","_yield$injectedProvid4","conn","_data$signatures","allTxns","unsignedTx","_yield$injectedProvid5","getSlopeHandlers","SolflareInjectedProvider","_createSuper$3","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","_createSuper$2","getSolletHandlers","getTorusHandlers","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","_createSuper$1","_objectSpread$1","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","emit","_setupEngine","_handleInjectedProviderUpdate","configure","setupProvider","_getProviderHandlers","keyPairGenerator","keyPair","partialSign","signedMsg","nacl","_providerEngineProxy","_req$params6","txns","tx","SolanaPrivateKeyProvider","_enable","_createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","_updateAccount","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","_addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","displayName","blockExplorer","switchSolanaChain","_switchSolanaChain","switchChain","_ref6","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","_updatePrivatekey","updateAccount","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","_yield$this$provider$","signedTransaction","signedTransactions","_request","fast_safe_stringify_1","EthereumRpcError","serialized","stringifyReplacer","EthereumProviderError","_EthereumRpcError","isValidEthProviderCode","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","parse","invalidRequest","methodNotFound","invalidParams","internal","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","standard","classes_1","utils_1","error_constants_1","getEthJsonRpcError","_parseOpts","parseOpts","_parseOpts2","getMessageFromCode","getEthProviderError","_parseOpts3","_parseOpts4","errorCodes","server","custom","errors_1","FALLBACK_ERROR_CODE","FALLBACK_MESSAGE","FALLBACK_ERROR","fallbackMessage","codeString","hasKey","errorValues","isJsonRpcServerError","JSON_RPC_SERVER_ERROR_MESSAGE","isValidCode","assignOriginalError","_ref$fallbackError","fallbackError","_ref$shouldIncludeSta","shouldIncludeStack","_error","originalError","_a","_b","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","reversed","__createBinding","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","maybeResize","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","_structSchema$values$","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","_structSchema$values$2","fieldValue","basex","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError","_interopRequireDefault","_regenerator","_asyncToGenerator2","_typeof2","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_eventemitter","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","timeout","ws_opts","send","promise","_login","resp","_listMethods","_subscribe","event","_unsubscribe","listeners","EventEmitter","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","listener","rnds8","rng","msCrypto","REGEX","byteToHex","rnds","random","inRange","ToDictionary","end_of_stream","Stream","tokens","endOfStream","prepend","token","pop","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}