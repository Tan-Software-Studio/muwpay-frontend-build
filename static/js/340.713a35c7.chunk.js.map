{"version":3,"file":"static/js/340.713a35c7.chunk.js","mappings":";mLAsIA,MAAAA,EAAAC,EAAA,OAYA,SAAgBC,EAAgBC,GAC9B,KAAMA,aAAaC,YACjB,MAAM,IAAIC,UAAU,yBAExB,CAKA,SAAgBC,EAAmBH,GAEjC,OADAD,EAAgBC,GACTH,EAAAO,OAAOC,KAAKL,EAAEM,OAAQN,EAAEO,WAAYP,EAAEQ,OAC/C,CAkBA,MAAsBC,EAKpBC,YAAYC,EAAcC,GACxB,IAAKC,OAAOC,UAAUH,GACpB,MAAM,IAAIT,UAAU,2BAYtB,KAAKS,KAAOA,EAUZ,KAAKC,SAAWA,CAClB,CAiBAG,wBACE,MAAO,EACT,CAwDAC,QAAQhB,EAAgBiB,GACtB,GAAI,EAAI,KAAKN,KACX,MAAM,IAAIO,WAAW,sBAEvB,OAAO,KAAKP,IACd,CAkBAQ,UAAUP,GACR,MAAMQ,EAAKC,OAAOC,OAAO,KAAKZ,YAAYa,WAG1C,OAFAF,OAAOG,OAAOJ,EAAI,MAClBA,EAAGR,SAAWA,EACPQ,CACT,CAsBAK,UAAUC,GAEV,EAQF,SAAgBC,EAAiBC,EAAcC,GAC7C,OAAIA,EAAGjB,SACEgB,EAAO,IAAMC,EAAGjB,SAAW,IAE7BgB,CACT,CAkFA,MAAsBE,UAAuBrB,EAY3CsB,UACE,MAAM,IAAIC,MAAM,6BAClB,EAkBF,MAAaC,UAAoBH,EAG/BpB,cAA8C,IAAlCwB,EAAWC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGvB,EAAiBuB,UAAA3B,OAAA,EAAA2B,UAAA,QAAAC,EAC5C,IAAMvB,OAAOC,UAAUoB,IAAkB,GAAKA,EAC5C,MAAM,IAAIhC,UAAU,4CAEtB,OAAO,EAAGU,GAKV,KAAKsB,YAAcA,CACrB,CAGAH,UACE,OAAO,CACT,CAGAM,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7BpC,EAAgBC,GAChB,MAAMsC,EAAMtC,EAAEQ,OAASS,EACvB,OAAOsB,KAAKC,MAAMF,EAAM,KAAKJ,YAC/B,CAGAO,OAAOC,EAAa1C,EAAeiB,GACjC,OAAO,CACT,EAuBF,MAAa0B,UAAqBb,EAGhCpB,YAAYkC,GAAqD,IAA7B3B,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGvB,EAAiBuB,UAAA3B,OAAA,EAAA2B,UAAA,QAAAC,EAC/D,KAAMQ,aAAkBnC,GACtB,MAAM,IAAIP,UAAU,2BAGtB,IAAKW,OAAOC,UAAUG,GACpB,MAAM,IAAIf,UAAU,uCAGtB,MAAM0C,EAAOjC,KAAMC,GAAYgC,EAAOhC,UAGtC,KAAKgC,OAASA,EAQd,KAAK3B,OAASA,CAChB,CAGAc,UACE,OAAS,KAAKa,kBAAkBC,GACpB,KAAKD,kBAAkBE,CACrC,CAGAT,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAO,KAAKS,OAAOP,OAAOrC,EAAGiB,EAAS,KAAKA,OAC7C,CAGAwB,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC1C,OAAO,KAAKS,OAAOH,OAAOC,EAAK1C,EAAGiB,EAAS,KAAKA,OAClD,EAmBF,MAAa4B,UAAapC,EACxBC,YAAYC,EAAcC,GAExB,GADA,MAAMD,EAAMC,GACR,EAAI,KAAKD,KACX,MAAM,IAAIO,WAAW,+BAEzB,CAGAmB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAOhC,EAAmBH,GAAG+C,WAAW9B,EAAQ,KAAKN,KACvD,CAGA8B,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE1C,OADAhC,EAAmBH,GAAGgD,YAAYN,EAAKzB,EAAQ,KAAKN,MAC7C,KAAKA,IACd,EAmBF,MAAamC,UAAerC,EAC1BC,YAAYC,EAAcC,GAExB,GADA,MAAMD,EAAMC,GACR,EAAI,KAAKD,KACX,MAAM,IAAIO,WAAW,+BAEzB,CAGAmB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAOhC,EAAmBH,GAAGiD,WAAWhC,EAAQ,KAAKN,KACvD,CAGA8B,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE1C,OADAhC,EAAmBH,GAAGkD,YAAYR,EAAKzB,EAAQ,KAAKN,MAC7C,KAAKA,IACd,EAmBF,MAAawC,UAAY1C,EACvBC,YAAYC,EAAcC,GAExB,GADA,MAAMD,EAAMC,GACR,EAAI,KAAKD,KACX,MAAM,IAAIO,WAAW,+BAEzB,CAGAmB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAOhC,EAAmBH,GAAGoD,UAAUnC,EAAQ,KAAKN,KACtD,CAGA8B,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE1C,OADAhC,EAAmBH,GAAGqD,WAAWX,EAAKzB,EAAQ,KAAKN,MAC5C,KAAKA,IACd,EAmBF,MAAa2C,UAAc7C,EACzBC,YAAYC,EAAcC,GAExB,GADA,MAAMD,EAAMC,GACR,EAAI,KAAKD,KACX,MAAM,IAAIO,WAAW,+BAEzB,CAGAmB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAOhC,EAAmBH,GAAGuD,UAAUtC,EAAQ,KAAKN,KACtD,CAGA8B,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE1C,OADAhC,EAAmBH,GAAGwD,WAAWd,EAAKzB,EAAQ,KAAKN,MAC5C,KAAKA,IACd,EAGF,MAAM8C,EAAQlB,KAAKmB,IAAI,EAAG,IAI1B,SAASC,EAAYjB,GACnB,MAAMkB,EAAOrB,KAAKC,MAAME,EAAMe,GAE9B,MAAO,CAACG,OAAMC,KADDnB,EAAOkB,EAAOH,EAE7B,CAEA,SAASK,EAAaF,EAAcC,GAClC,OAAOD,EAAOH,EAAQI,CACxB,CAaA,MAAaE,UAAmBtD,EAC9BC,YAAYE,GACV,MAAM,EAAGA,EACX,CAGAyB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,MAAM7B,EAASH,EAAmBH,GAC5B6D,EAAOvD,EAAO0D,aAAa/C,GAEjC,OAAO6C,EADMxD,EAAO0D,aAAa/C,EAAS,GAChB4C,EAC5B,CAGApB,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC1C,MAAM8B,EAAQN,EAAYjB,GACpBpC,EAASH,EAAmBH,GAGlC,OAFAM,EAAO4D,cAAcD,EAAMJ,KAAM5C,GACjCX,EAAO4D,cAAcD,EAAML,KAAM3C,EAAS,GACnC,CACT,EAcF,MAAakD,UAAqB1D,EAChCC,YAAYE,GACV,MAAM,EAAGA,EACX,CAGAyB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,MAAM7B,EAASH,EAAmBH,GAGlC,OAAO8D,EAFMxD,EAAO8D,aAAanD,GACpBX,EAAO8D,aAAanD,EAAS,GAE5C,CAGAwB,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC1C,MAAM8B,EAAQN,EAAYjB,GACpBpC,EAASH,EAAmBH,GAGlC,OAFAM,EAAO+D,cAAcJ,EAAML,KAAM3C,GACjCX,EAAO+D,cAAcJ,EAAMJ,KAAM5C,EAAS,GACnC,CACT,EAcF,MAAaqD,UAAkB7D,EAC7BC,YAAYE,GACV,MAAM,EAAGA,EACX,CAGAyB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,MAAM7B,EAASH,EAAmBH,GAC5B6D,EAAOvD,EAAO0D,aAAa/C,GAEjC,OAAO6C,EADMxD,EAAOiE,YAAYtD,EAAS,GACf4C,EAC5B,CAGApB,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC1C,MAAM8B,EAAQN,EAAYjB,GACpBpC,EAASH,EAAmBH,GAGlC,OAFAM,EAAO4D,cAAcD,EAAMJ,KAAM5C,GACjCX,EAAOkE,aAAaP,EAAML,KAAM3C,EAAS,GAClC,CACT,EAcF,MAAawD,UAAoBhE,EAC/BC,YAAYE,GACV,MAAM,EAAGA,EACX,CAGAyB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,MAAM7B,EAASH,EAAmBH,GAGlC,OAAO8D,EAFMxD,EAAOoE,YAAYzD,GACnBX,EAAO8D,aAAanD,EAAS,GAE5C,CAGAwB,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC1C,MAAM8B,EAAQN,EAAYjB,GACpBpC,EAASH,EAAmBH,GAGlC,OAFAM,EAAOqE,aAAaV,EAAML,KAAM3C,GAChCX,EAAO+D,cAAcJ,EAAMJ,KAAM5C,EAAS,GACnC,CACT,EAaF,MAAa2D,UAAcnE,EACzBC,YAAYE,GACV,MAAM,EAAGA,EACX,CAGAyB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAOhC,EAAmBH,GAAG6E,YAAY5D,EAC3C,CAGAwB,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE1C,OADAhC,EAAmBH,GAAG8E,aAAapC,EAAKzB,GACjC,CACT,EAaF,MAAa8D,UAAgBtE,EAC3BC,YAAYE,GACV,MAAM,EAAGA,EACX,CAGAyB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAOhC,EAAmBH,GAAGgF,YAAY/D,EAC3C,CAGAwB,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE1C,OADAhC,EAAmBH,GAAGiF,aAAavC,EAAKzB,GACjC,CACT,EAaF,MAAaiE,UAAezE,EAC1BC,YAAYE,GACV,MAAM,EAAGA,EACX,CAGAyB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAOhC,EAAmBH,GAAGmF,aAAalE,EAC5C,CAGAwB,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE1C,OADAhC,EAAmBH,GAAGoF,cAAc1C,EAAKzB,GAClC,CACT,EAaF,MAAaoE,UAAiB5E,EAC5BC,YAAYE,GACV,MAAM,EAAGA,EACX,CAGAyB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,OAAOhC,EAAmBH,GAAGsF,aAAarE,EAC5C,CAGAwB,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE1C,OADAhC,EAAmBH,GAAGuF,cAAc7C,EAAKzB,GAClC,CACT,EAoBF,MAAauE,UAAoB/E,EAI/BC,YAAY+E,EAA0BC,EAAgC9E,GACpE,KAAM6E,aAAyBhF,GAC7B,MAAM,IAAIP,UAAU,kCAEtB,KAAQwF,aAAiB5D,GAAmB4D,EAAM3D,WACxClB,OAAOC,UAAU4E,IAAW,GAAKA,GACzC,MAAM,IAAIxF,UAAU,4EAGtB,IAAIS,GAAQ,IACL+E,aAAiB5D,IAChB,EAAI2D,EAAc9E,OACxBA,EAAO+E,EAAQD,EAAc9E,MAG/B,MAAMA,EAAMC,GAGZ,KAAK6E,cAAgBA,EAOrB,KAAKC,MAAQA,CACf,CAGA1E,QAAQhB,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC9B,GAAI,GAAK,KAAKxB,KACZ,OAAO,KAAKA,KAEd,IAAIA,EAAO,EACP+E,EAAQ,KAAKA,MAIjB,GAHIA,aAAiB5D,IACnB4D,EAAQA,EAAMrD,OAAOrC,EAAGiB,IAEtB,EAAI,KAAKwE,cAAc9E,KACzBA,EAAO+E,EAAQ,KAAKD,cAAc9E,SAC7B,CACL,IAAIgF,EAAM,EACV,KAAOA,EAAMD,GACX/E,GAAQ,KAAK8E,cAAczE,QAAQhB,EAAGiB,EAASN,KAC7CgF,EAGN,OAAOhF,CACT,CAGA0B,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,MAAMf,EAAU,GAChB,IAAIwE,EAAI,EACJF,EAAQ,KAAKA,MAIjB,IAHIA,aAAiB5D,IACnB4D,EAAQA,EAAMrD,OAAOrC,EAAGiB,IAEnB2E,EAAIF,GACTtE,EAAGyE,KAAK,KAAKJ,cAAcpD,OAAOrC,EAAGiB,IACrCA,GAAU,KAAKwE,cAAczE,QAAQhB,EAAGiB,GACxC2E,GAAK,EAEP,OAAOxE,CACT,CAYAqB,OAAOC,EAAU1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACvC,MAAM2D,EAAM,KAAKL,cACX9E,EAAe+B,EAAIqD,QAAO,CAACpF,EAAMqF,IAC9BrF,EAAOmF,EAAIrD,OAAOuD,EAAGhG,EAAGiB,EAASN,IACvC,GAIH,OAHI,KAAK+E,iBAAiB5D,GACxB,KAAK4D,MAAMjD,OAAOC,EAAIlC,OAAQR,EAAGiB,GAE5BN,CACT,EAmCF,MAAasF,UAAqBxF,EAIhCC,YAAYwF,EAA8BtF,EAAmBuF,GAC3D,IAAMC,MAAMC,QAAQH,KACXA,EAAOH,QAAO,CAACO,EAAKN,IAAMM,GAAQN,aAAavF,IAAS,GAC/D,MAAM,IAAIP,UAAU,4CAEjB,mBAAqBU,QAClBwB,IAAc+D,IACpBA,EAAiBvF,EACjBA,OAAWwB,GAIb,IAAK,MAAMmE,KAAML,EACf,GAAK,EAAIK,EAAG5F,WACJyB,IAAcmE,EAAG3F,SACvB,MAAM,IAAIoB,MAAM,wDAIpB,IAAIrB,GAAQ,EACZ,IACEA,EAAOuF,EAAOH,QAAO,CAACpF,EAAM4F,IAAO5F,EAAO4F,EAAGvF,WAAW,GACxD,MAAOwF,GACP,CAEF,MAAM7F,EAAMC,GAYZ,KAAKsF,OAASA,EAWd,KAAKC,iBAAmBA,CAC1B,CAGAnF,QAAQhB,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC9B,GAAI,GAAK,KAAKxB,KACZ,OAAO,KAAKA,KAEd,IAAIA,EAAO,EACX,IACEA,EAAO,KAAKuF,OAAOH,QAAO,CAACpF,EAAM4F,KAC/B,MAAME,EAAMF,EAAGvF,QAAQhB,EAAGiB,GAE1B,OADAA,GAAUwF,EACH9F,EAAO8F,CAAG,GAChB,GACH,MAAOD,GACP,MAAM,IAAItF,WAAW,sBAEvB,OAAOP,CACT,CAGA0B,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7BpC,EAAgBC,GAChB,MAAM0G,EAAO,KAAK3F,wBAClB,IAAK,MAAMwF,KAAM,KAAKL,OAKpB,QAJI9D,IAAcmE,EAAG3F,WACnB8F,EAAKH,EAAG3F,UAAuB2F,EAAGlE,OAAOrC,EAAGiB,IAE9CA,GAAUsF,EAAGvF,QAAQhB,EAAGiB,GACpB,KAAKkF,gBACDnG,EAAEQ,SAAWS,EACnB,MAGJ,OAAOyF,CACT,CAOAjE,OAAOC,EAAQ1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrC,MAAMwE,EAAc1F,EACpB,IAAI2F,EAAa,EACbC,EAAY,EAChB,IAAK,MAAMN,KAAM,KAAKL,OAAQ,CAC5B,IAAIvF,EAAO4F,EAAG5F,KAEd,GADAkG,EAAa,EAAIlG,EAAQA,EAAO,OAC5ByB,IAAcmE,EAAG3F,SAAU,CAC7B,MAAMkG,EAAKpE,EAAI6D,EAAG3F,eACdwB,IAAc0E,IAChBD,EAAYN,EAAG9D,OAAOqE,EAAI9G,EAAGiB,GACzB,EAAIN,IAGNA,EAAO4F,EAAGvF,QAAQhB,EAAGiB,KAI3B2F,EAAa3F,EACbA,GAAUN,EAMZ,OAAQiG,EAAaC,EAAaF,CACpC,CAGAlF,UAAUC,GACR,MAAMgF,EAAO,KAAK3F,wBAClB,IAAK,MAAMwF,KAAM,KAAKL,YACf9D,IAAcmE,EAAG3F,UACd,EAAIc,EAAOlB,SACjBkG,EAAKH,EAAG3F,UAAYc,EAAOqF,SAG/B,OAAOL,CACT,CAUAM,UAAUpG,GACR,GAAI,kBAAoBA,EACtB,MAAM,IAAIV,UAAU,2BAEtB,IAAK,MAAMqG,KAAM,KAAKL,OACpB,GAAIK,EAAG3F,WAAaA,EAClB,OAAO2F,CAIb,CAaAU,SAASrG,GACP,GAAI,kBAAoBA,EACtB,MAAM,IAAIV,UAAU,2BAEtB,IAAIe,EAAS,EACb,IAAK,MAAMsF,KAAM,KAAKL,OAAQ,CAC5B,GAAIK,EAAG3F,WAAaA,EAClB,OAAOK,EAEL,EAAIsF,EAAG5F,KACTM,GAAU,EACD,GAAKA,IACdA,GAAUsF,EAAG5F,MAInB,EAiBF,MAAauG,EAEXxG,YAAYE,GAKV,KAAKA,SAAWA,CAClB,CAMAyB,OAAOrC,EAAgBiB,GACrB,MAAM,IAAIe,MAAM,iCAClB,CAMAS,OAAOC,EAAQ1C,EAAeiB,GAC5B,MAAM,IAAIe,MAAM,iCAClB,EAoBF,MAAamF,UAAiCD,EAE5CxG,YAAYkC,EAAwBhC,GAClC,KAAOgC,aAAkBd,GAChBc,EAAOb,WACd,MAAM,IAAI7B,UAAU,qDAGtB,MAAMU,GAAYgC,EAAOhC,UAAY,WAIrC,KAAKgC,OAASA,CAChB,CAGAP,OAAOrC,EAAeiB,GACpB,OAAO,KAAK2B,OAAOP,OAAOrC,EAAGiB,EAC/B,CAGAwB,OAAOC,EAAa1C,EAAeiB,GACjC,OAAO,KAAK2B,OAAOH,OAAOC,EAAK1C,EAAGiB,EACpC,EA8DF,MAAamG,UAAc3G,EAYzBC,YACI2G,EACAC,EACA1G,GAEF,IAAI2G,EACJ,GAAKF,aAAiBxE,GACdwE,aAAiBvE,EACvByE,EAAgB,IAAIJ,EAAyB,IAAIxE,EAAa0E,SACzD,GAAKA,aAAiBvF,GACfuF,EAAMtF,UAClBwF,EAAgB,IAAIJ,EAAyBE,OACxC,MAAMA,aAAiBH,GAC5B,MAAM,IAAIhH,UAAU,oEAGpBqH,EAAgBF,EAKlB,QAHIjF,IAAckF,IAChBA,EAAgB,QAEX,OAASA,GACNA,aAAyB7G,GACjC,MAAM,IAAIP,UAAU,0CAEtB,GAAI,OAASoH,EAAe,CAC1B,GAAI,EAAIA,EAAc3G,KACpB,MAAM,IAAIqB,MAAM,8CAEdI,IAAckF,EAAc1G,WAC9B0G,EAAgBA,EAAcnG,UAAU,YAQ5C,IAAIR,GAAQ,EACR2G,IACF3G,EAAO2G,EAAc3G,KAChB,GAAKA,IAAW0G,aAAiBxE,GAC9BwE,aAAiBvE,KACvBnC,GAAS4G,EAA2C3E,OAAOjC,OAG/D,MAAMA,EAAMC,GAUZ,KAAK2G,cAAgBA,EAOrB,KAAKC,wBAA2BH,aAAiBxE,GACzCwE,aAAiBvE,EASzB,KAAKwE,cAAgBA,EAYrB,KAAKG,SAAW,GAGhB,IAAIC,EAAwB,KAAKC,wBAAwBC,KAAK,MAe9D,KAAKC,iBAAmB,SAASnF,GAC/B,OAAOgF,EAAsBhF,EAC/B,EAeA,KAAKoF,uBAAyB,SAASC,GACrCL,EAAwBK,EAAIH,KAAK,KACnC,CACF,CAGA5G,QAAQhB,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC9B,GAAI,GAAK,KAAKxB,KACZ,OAAO,KAAKA,KAKd,MAAMqH,EAAM,KAAKC,WAAWjI,EAAGiB,GAC/B,IAAK+G,EACH,MAAM,IAAIhG,MAAM,qDAElB,OAAOgG,EAAIhH,QAAQhB,EAAGiB,EACxB,CA+BA0G,wBAAwBjF,GACtB,GAAIrB,OAAOE,UAAU2G,eAAeC,KAAKzF,EAAK,KAAK6E,cAAc3G,UAAW,CAC1E,GAAI,KAAK0G,eAAiB,KAAKA,cAAc1G,UACtCS,OAAOE,UAAU2G,eAAeC,KAAKzF,EAAK,KAAK4E,cAAc1G,UAClE,OAEF,MAAMoH,EAAM,KAAKP,SAAS/E,EAAI,KAAK6E,cAAc3G,WACjD,GAAIoH,KACMA,EAAIpF,QACFoF,EAAIpH,UAAYS,OAAOE,UAAU2G,eAAeC,KAAKzF,EAAKsF,EAAIpH,WACxE,OAAOoH,OAGT,IAAK,MAAMI,KAAO,KAAKX,SAAU,CAC/B,MAAMO,EAAM,KAAKP,SAASW,GAC1B,GAAIJ,EAAIpH,UAAYS,OAAOE,UAAU2G,eAAeC,KAAKzF,EAAKsF,EAAIpH,UAChE,OAAOoH,EAIb,MAAM,IAAIhG,MAAM,8BAClB,CAQAK,OAAOrC,GAAyB,IAC1B0G,EADgBzF,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE7B,MAAMkG,EAAM,KAAKd,cACXF,EAAQgB,EAAIhG,OAAOrC,EAAGiB,GACtBqH,EAAM,KAAKb,SAASJ,GAC1B,QAAIjF,IAAckG,EAAK,CACrB,MAAMhB,EAAgB,KAAKA,cAC3B,IAAIiB,EAAgB,EAChB,KAAKf,0BACPe,EAAiBF,EAAiCzF,OAAOjC,MAE3D+F,EAAO,KAAK3F,wBACZ2F,EAAK2B,EAAIzH,UAAYyG,EAGrBX,EAAKY,EAAe1G,UAAa0G,EAAejF,OAAOrC,EAAGiB,EAASsH,QAEnE7B,EAAO4B,EAAIjG,OAAOrC,EAAGiB,GAEvB,OAAOyF,CACT,CAQAjE,OAAOC,EAAmB1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAChD,MAAM6F,EAAM,KAAKH,iBAAiBnF,GAClC,QAAIN,IAAc4F,EAAK,CACrB,MAAMK,EAAM,KAAKd,cAGXe,EAAM,KAAKhB,cACjB,IAAIiB,EAAgB,EAOpB,OANI,KAAKf,0BACPe,EAAiBF,EAAiCzF,OAAOjC,MAE3D0H,EAAI5F,OAAOC,EAAI2F,EAAIzH,UAAWZ,EAAGiB,GAG1BsH,EAAgBD,EAAI7F,OAAOC,EAAI4F,EAAI1H,UAAYZ,EAAGiB,EAASsH,GAEpE,OAAOP,EAAIvF,OAAOC,EAAK1C,EAAGiB,EAC5B,CAeAuH,WAAWC,EAAiB7F,EAA8BhC,GACxD,MAAMQ,EAAK,IAAIsH,EAAc,KAAMD,EAAS7F,EAAQhC,GAEpD,OADA,KAAK6G,SAASgB,GAAWrH,EAClBA,CACT,CAgBA6G,WAAWU,GAAmC,IACxCF,EAD8BxH,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAO3C,OAJEsG,EADEE,aAAc1I,WACN,KAAKsH,cAAclF,OAAOsG,EAAI1H,GAE9B0H,EAEL,KAAKlB,SAASgB,EACvB,EAgCF,MAAaC,UAAsBjI,EAOjCC,YAAYkI,EAAcH,EAAiB7F,EAAqChC,GAC9E,KAAMgI,aAAiBxB,GACrB,MAAM,IAAIlH,UAAU,yBAEtB,IAAMW,OAAOC,UAAU2H,IAAc,EAAIA,EACvC,MAAM,IAAIvI,UAAU,4CAOtB,GALK,kBAAoB0C,QACjBR,IAAcxB,IACpBA,EAAWgC,EACXA,EAAS,MAEPA,EAAQ,CACV,KAAMA,aAAkBnC,GACtB,MAAM,IAAIP,UAAU,2BAEtB,GAAK,OAAS0I,EAAMtB,eACZ,GAAK1E,EAAOjC,MACZiC,EAAOjC,KAAOiI,EAAMtB,cAAc3G,KACxC,MAAM,IAAIqB,MAAM,iDAElB,GAAI,kBAAoBpB,EACtB,MAAM,IAAIV,UAAU,uCAGxB,IAAIS,EAAOiI,EAAMjI,KACb,EAAIiI,EAAMjI,OACZA,EAAOiC,EAASA,EAAOjC,KAAO,EACzB,GAAKA,GAASiI,EAAMpB,0BACvB7G,GAASiI,EAAMrB,cAA2C3E,OAAOjC,OAGrE,MAAMA,EAAMC,GAGZ,KAAKgI,MAAQA,EAKb,KAAKH,QAAUA,EAMf,KAAK7F,OAASA,GAAU,IAC1B,CAGA5B,QAAQhB,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC9B,GAAI,GAAK,KAAKxB,KAGZ,OAAO,KAAKA,KAEd,IAAI4H,EAAgB,EAChB,KAAKK,MAAMpB,0BACbe,EAAiB,KAAKK,MAAMrB,cAA2C3E,OAAOjC,MAGhF,IAAIA,EAAO,EAIX,OAHI,KAAKiC,SACPjC,EAAO,KAAKiC,OAAO5B,QAAQhB,EAAGiB,EAASsH,IAElCA,EAAgB5H,CACzB,CAGA0B,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,MAAMuE,EAAO,KAAK3F,wBAClB,GAAI,OAAS,KAAK6H,MAAMX,WAAWjI,EAAGiB,GACpC,MAAM,IAAIe,MAAM,oBAElB,IAAIuG,EAAgB,EAWpB,OAVI,KAAKK,MAAMpB,0BACbe,EAAiB,KAAKK,MAAMrB,cAA2C3E,OAAOjC,MAE5E,KAAKiC,OACP8D,EAAK,KAAK9F,UAAY,KAAKgC,OAAOP,OAAOrC,EAAGiB,EAASsH,GAC5C,KAAK3H,SACd8F,EAAK,KAAK9F,WAAY,EACb,KAAKgI,MAAMpB,0BACpBd,EAAK,KAAKkC,MAAMrB,cAAc3G,UAAY,KAAK6H,SAE1C/B,CACT,CAGAjE,OAAOC,EAAmB1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC5CoG,EAAgB,EAIpB,GAHI,KAAKK,MAAMpB,0BACbe,EAAiB,KAAKK,MAAMrB,cAA2C3E,OAAOjC,MAE5E,KAAKiC,SACAvB,OAAOE,UAAU2G,eAAeC,KAAKzF,EAAK,KAAK9B,UACtD,MAAM,IAAIV,UAAU,0BAA4B,KAAKU,UAEvD,KAAKgI,MAAMrB,cAAc9E,OAAO,KAAKgG,QAASzI,EAAGiB,GACjD,IAAIN,EAAO4H,EACX,GAAI,KAAK3F,SACP,KAAKA,OAAOH,OAAOC,EAAI,KAAK9B,UAAWZ,EAAGiB,EAASsH,GACnD5H,GAAQ,KAAKiC,OAAO5B,QAAQhB,EAAGiB,EAASsH,GACnC,GAAK,KAAKK,MAAMjI,MACbA,EAAO,KAAKiI,MAAMjI,MACxB,MAAM,IAAIqB,MAAM,6CAGpB,OAAOrB,CACT,CAIAc,UAAUC,GACR,GAAI,KAAKkB,OACP,OAAO,KAAKA,OAAOnB,UAAUC,EAGjC,EASF,SAASmH,EAAiB7C,GAIxB,OAHI,EAAIA,IACNA,GAAK,YAEAA,CACT,CAiCA,MAAa8C,UAAqBrI,EAQhCC,YAAYqI,EAAqBC,EAAuBpI,GACtD,KAAOmI,aAAgBlG,GACbkG,aAAgBjG,GACxB,MAAM,IAAI5C,UAAU,wCAOtB,GALK,kBAAoB8I,QACjB5G,IAAcxB,IACpBA,EAAWoI,EACXA,GAAM,GAEJ,EAAID,EAAKpI,KACX,MAAM,IAAIO,WAAW,8BAEvB,MAAM6H,EAAKpI,KAAMC,GAKjB,KAAKmI,KAAOA,EASZ,KAAKC,MAAQA,EAQb,KAAK9C,OAAS,GAKd,IAAI+C,EAAQ,EACZ,KAAKC,gBAAkB,SAASlD,GAE9B,OADAiD,EAAQJ,EAAiB7C,GAClB,IACT,EACA,KAAKmD,gBAAkB,WACrB,OAAOF,CACT,CACF,CAGA5G,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,MAAMuE,EAAO,KAAK3F,wBACZkI,EAAQ,KAAKF,KAAK1G,OAAOrC,EAAGiB,GAClC,KAAKiI,gBAAgBD,GACrB,IAAK,MAAM1C,KAAM,KAAKL,YAChB9D,IAAcmE,EAAG3F,WACnB8F,EAAKH,EAAG3F,UAAY2F,EAAGlE,OAAOrC,IAGlC,OAAO0G,CACT,CAOAjE,OAAOC,EAAmB1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAChD,MAAM8G,EAAQ,KAAKF,KAAK1G,OAAOrC,EAAGiB,GAClC,KAAKiI,gBAAgBD,GACrB,IAAK,MAAM1C,KAAM,KAAKL,OACpB,QAAI9D,IAAcmE,EAAG3F,SAAU,CAC7B,MAAMkG,EAAKpE,EAAI6D,EAAG3F,eACdwB,IAAc0E,GAChBP,EAAG9D,OAAOqE,GAIhB,OAAO,KAAKiC,KAAKtG,OAAO,KAAK0G,kBAAmBnJ,EAAGiB,EACrD,CAWAmI,SAASC,EAAczI,GACrB,MAAM0I,EAAK,IAAIC,EAAS,KAAMF,EAAMzI,GAEpC,OADA,KAAKsF,OAAOL,KAAKyD,GACVA,CACT,CAWAE,WAAW5I,GAET,MAAM0I,EAAK,IAAIG,EAAQ,KAAM7I,GAE7B,OADA,KAAKsF,OAAOL,KAAKyD,GACVA,CACT,CAUAI,SAAS9I,GACP,GAAI,kBAAoBA,EACtB,MAAM,IAAIV,UAAU,2BAEtB,IAAK,MAAMqG,KAAM,KAAKL,OACpB,GAAIK,EAAG3F,WAAaA,EAClB,OAAO2F,CAIb,EAuBF,MAAagD,EAOX7I,YAAYiJ,EAAyBN,EAAczI,GACjD,KAAM+I,aAAqBb,GACzB,MAAM,IAAI5I,UAAU,oCAEtB,IAAMW,OAAOC,UAAUuI,IAAW,GAAKA,EACrC,MAAM,IAAInJ,UAAU,iCAEtB,MAAM0J,EAAY,EAAID,EAAUhJ,KAC1BkJ,EAAWF,EAAUzD,OAAOH,QAAO,CAAC+D,EAAKvD,IAAOuD,EAAMvD,EAAG8C,MAAM,GACrE,GAAKA,EAAOQ,EAAYD,EACtB,MAAM,IAAI5H,MAAM,sCACG4H,EAAYC,GAAY,OACzBD,EAAY,YAKhC,KAAKD,UAAYA,EAGjB,KAAKN,KAAOA,EAOZ,KAAKU,WAAa,GAAKV,GAAQ,EAC3B,KAAOA,IACT,KAAKU,UAAY,YAMnB,KAAKC,MAAQH,EACT,KAAKF,UAAUX,MACjB,KAAKgB,MAAQJ,EAAYC,EAAWR,GAKtC,KAAKY,SAAWpB,EAAiB,KAAKkB,WAAa,KAAKC,OAYxD,KAAKpJ,SAAWA,CAClB,CAIAyB,OAAOrC,EAAgBiB,GAIrB,OAFkB4H,EADL,KAAKc,UAAUR,kBACc,KAAKc,YACnB,KAAKD,KAEnC,CAOAvH,OAAOwG,GACL,GAAI,kBAAoBA,IAChBpI,OAAOC,UAAUmI,IACjBA,IAAUJ,EAAiBI,EAAQ,KAAKc,WAC9C,MAAM,IAAI7J,UAAUyB,EAAiB,kBAAmB,MAClC,wCAA0C,KAAKoI,WAEvE,MAAMhB,EAAO,KAAKY,UAAUR,kBACtBe,EAAYrB,EAAiBI,GAAS,KAAKe,OACjD,KAAKL,UAAUT,gBAAgBL,EAAiBE,GAAQ,KAAKkB,UAC5BC,EACnC,EAoBF,MAAaT,UAAgBF,EAC3B7I,YAAYiJ,EAAyB/I,GACnC,MAAM+I,EAAW,EAAG/I,EACtB,CAKAyB,OAAOrC,EAAgBiB,GACrB,QAAS,MAAMoB,OAAOrC,EAAGiB,EAC3B,CAGAwB,OAAOwG,GACD,mBAAqBA,IAEvBA,GAASA,GAEX,MAAMxG,OAAOwG,EACf,EAkBF,MAAakB,UAAa1J,EAExBC,YAAYF,EAAiCI,GAC3C,KAAQJ,aAAkBsB,GAAmBtB,EAAOuB,WAC1ClB,OAAOC,UAAUN,IAAY,GAAKA,GAC1C,MAAM,IAAIN,UAAU,yEAItB,IAAIS,GAAQ,EACNH,aAAkBsB,IACtBnB,EAAOH,GAET,MAAMG,EAAMC,GAOZ,KAAKJ,OAASA,CAChB,CAGAQ,QAAQhB,EAAeiB,GACrB,IAAIN,EAAO,KAAKA,KAIhB,OAHI,EAAIA,IACNA,EAAQ,KAAKH,OAA0B6B,OAAOrC,EAAGiB,IAE5CN,CACT,CAGA0B,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzBxB,EAAO,KAAKA,KAIhB,OAHI,EAAIA,IACNA,EAAQ,KAAKH,OAA0B6B,OAAOrC,EAAGiB,IAE5Cd,EAAmBH,GAAGoK,MAAMnJ,EAAQA,EAASN,EACtD,CAOA8B,OAAOC,EAAiB1C,EAAeiB,GACrC,IAAIN,EAAO,KAAKH,OAIhB,GAHI,KAAKA,kBAAkBsB,IACzBnB,EAAO+B,EAAIlC,UAEPkC,aAAezC,YAAcU,IAAS+B,EAAIlC,QAC9C,MAAM,IAAIN,UAAUyB,EAAiB,cAAe,MAC9B,qBAAuBhB,EAAO,uBAEtD,GAAKM,EAASN,EAAQX,EAAEQ,OACtB,MAAM,IAAIU,WAAW,gCAEvB,MAAMmJ,EAAYlK,EAAmBuC,GAKrC,OAJAvC,EAAmBH,GAAGsK,MAAMD,EAAUE,SAAS,OAAQtJ,EAAQN,EAAM,OACjE,KAAKH,kBAAkBsB,GACzB,KAAKtB,OAAOiC,OAAO9B,EAAMX,EAAGiB,GAEvBN,CACT,EAgBF,MAAa6J,UAAgB/J,EAC3BC,YAAYE,GACV,OAAO,EAAGA,EACZ,CAGAI,QAAQhB,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC9BpC,EAAgBC,GAChB,IAAI2F,EAAM1E,EACV,KAAQ0E,EAAM3F,EAAEQ,QAAY,IAAMR,EAAE2F,IAClCA,GAAO,EAET,OAAO,EAAIA,EAAM1E,CACnB,CAGAoB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,MAAMxB,EAAO,KAAKK,QAAQhB,EAAGiB,GAC7B,OAAOd,EAAmBH,GAAGoK,MAAMnJ,EAAQA,EAASN,EAAO,GAAG4J,SAAS,QACzE,CAGA9H,OAAOC,EAAa1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAItC,kBAAoBO,IACtBA,EAAM+H,OAAO/H,IAEf,MAAMgI,EAAO7K,EAAAO,OAAOC,KAAKqC,EAAK,QACxB/B,EAAO+J,EAAKlK,OAClB,GAAKS,EAASN,EAAQX,EAAEQ,OACtB,MAAM,IAAIU,WAAW,4BAEvB,MAAMZ,EAASH,EAAmBH,GAGlC,OAFA0K,EAAKC,KAAKrK,EAAQW,GAClBX,EAAOW,EAASN,GAAQ,EACjBA,EAAO,CAChB,EAsBF,MAAaiK,UAAanK,EAExBC,YAAYmK,EAA2BjK,GAKrC,GAJK,kBAAoBiK,QAAazI,IAAcxB,IAClDA,EAAWiK,EACXA,OAAUzI,QAERA,IAAcyI,EAChBA,GAAW,OACN,IAAKhK,OAAOC,UAAU+J,GAC3B,MAAM,IAAI3K,UAAU,8BAGtB,OAAO,EAAGU,GAUV,KAAKiK,QAAUA,CACjB,CAGA7J,QAAQhB,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAE9B,OADApC,EAAgBC,GACTA,EAAEQ,OAASS,CACpB,CAGAoB,OAAOrC,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC7B,MAAMxB,EAAO,KAAKK,QAAQhB,EAAGiB,GAC7B,GAAK,GAAK,KAAK4J,SACP,KAAKA,QAAUlK,EACrB,MAAM,IAAIO,WAAW,+BAEvB,OAAOf,EAAmBH,GAAGoK,MAAMnJ,EAAQA,EAASN,GAAM4J,SAAS,QACrE,CAGA9H,OAAOC,EAA4B1C,GAAyB,IAAViB,EAAMkB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAIrD,kBAAoBO,IACtBA,EAAM+H,OAAO/H,IAEf,MAAMgI,EAAO7K,EAAAO,OAAOC,KAAKqC,EAAK,QACxB/B,EAAO+J,EAAKlK,OAClB,GAAK,GAAK,KAAKqK,SACP,KAAKA,QAAUlK,EACrB,MAAM,IAAIO,WAAW,+BAEvB,GAAKD,EAASN,EAAQX,EAAEQ,OACtB,MAAM,IAAIU,WAAW,4BAGvB,OADAwJ,EAAKC,KAAKxK,EAAmBH,GAAIiB,GAC1BN,CACT,EAsBF,MAAamK,UAAoBrK,EAE/BC,YAAYuI,EAAUrI,GACpB,MAAM,EAAGA,GAWT,KAAKqI,MAAQA,CACf,CAGA5G,OAAOrC,EAAgBiB,GACrB,OAAO,KAAKgI,KACd,CAGAxG,OAAOC,EAAQ1C,EAAgBiB,GAE7B,OAAO,CACT,EAOW8J,EAAAA,GAAU,CAACnI,EAAwB3B,EAAiBL,IAC7D,IAAI+B,EAAaC,EAAQ3B,EAAQL,GAIxBmK,EAAAA,GAAOnK,GAA4B,IAAIiC,EAAK,EAAGjC,GAI/CmK,EAAAA,GAAQnK,GAA4B,IAAIiC,EAAK,EAAGjC,GAQhDmK,EAAAA,GAAQnK,GAA4B,IAAIiC,EAAK,EAAGjC,GAYhDmK,EAAAA,GAASnK,GAAkC,IAAImD,EAAWnD,GAoD1DmK,EAAAA,GAASnK,GAAiC,IAAI0D,EAAU1D,GAuCxDmK,EAAAA,GAAU,CAAI7E,EAA8BtF,EAAmBuF,IACxE,IAAIF,EAAaC,EAAQtF,EAAUuF,GAO1B4E,EAAAA,GAAO,CAAItF,EAA0BC,EAAgC9E,IAC9E,IAAI4E,EAAYC,EAAeC,EAAO9E,GAY7BmK,EAAAA,GAAQ,CAACvK,EAAiCI,IAA4B,IAAIuJ,EAAK3J,EAAQI,iCChkFpG,MAAMoK,EAASlL,EAAQ,MACjBmL,EAAUnL,EAAQ,OAClBoL,EACe,oBAAXC,QAAkD,oBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENJ,EAAQ3K,OAASA,EACjB2K,EAAQK,WAyTR,SAAqB5K,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAOJ,EAAOiL,OAAO7K,EACvB,EA7TAuK,EAAQO,kBAAoB,GAE5B,MAAMC,EAAe,WAwDrB,SAASC,EAAchL,GACrB,GAAIA,EAAS+K,EACX,MAAM,IAAIrK,WAAW,cAAgBV,EAAS,kCAGhD,MAAMiL,EAAM,IAAIxL,WAAWO,GAE3B,OADAa,OAAOqK,eAAeD,EAAKrL,EAAOmB,WAC3BkK,CACT,CAYA,SAASrL,EAAQuL,EAAKC,EAAkBpL,GAEtC,GAAmB,kBAARmL,EAAkB,CAC3B,GAAgC,kBAArBC,EACT,MAAM,IAAI1L,UACR,sEAGJ,OAAO2L,EAAYF,EACrB,CACA,OAAOtL,EAAKsL,EAAKC,EAAkBpL,EACrC,CAIA,SAASH,EAAM4I,EAAO2C,EAAkBpL,GACtC,GAAqB,kBAAVyI,EACT,OAqHJ,SAAqB6C,EAAQC,GACH,kBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAK3L,EAAO4L,WAAWD,GACrB,MAAM,IAAI7L,UAAU,qBAAuB6L,GAG7C,MAAMvL,EAAwC,EAA/ByL,EAAWH,EAAQC,GAClC,IAAIN,EAAMD,EAAahL,GAEvB,MAAM0L,EAAST,EAAInB,MAAMwB,EAAQC,GAE7BG,IAAW1L,IAIbiL,EAAMA,EAAIrB,MAAM,EAAG8B,IAGrB,OAAOT,CACT,CA3IWU,CAAWlD,EAAO2C,GAG3B,GAAIQ,YAAYC,OAAOpD,GACrB,OAkJJ,SAAwBqD,GACtB,GAAIC,EAAWD,EAAWrM,YAAa,CACrC,MAAM0K,EAAO,IAAI1K,WAAWqM,GAC5B,OAAOE,EAAgB7B,EAAKrK,OAAQqK,EAAKpK,WAAYoK,EAAKsB,WAC5D,CACA,OAAOQ,EAAcH,EACvB,CAxJWI,CAAczD,GAGvB,GAAa,MAATA,EACF,MAAM,IAAI/I,UACR,yHACiD+I,GAIrD,GAAIsD,EAAWtD,EAAOmD,cACjBnD,GAASsD,EAAWtD,EAAM3I,OAAQ8L,aACrC,OAAOI,EAAgBvD,EAAO2C,EAAkBpL,GAGlD,GAAiC,qBAAtBmM,oBACNJ,EAAWtD,EAAO0D,oBAClB1D,GAASsD,EAAWtD,EAAM3I,OAAQqM,oBACrC,OAAOH,EAAgBvD,EAAO2C,EAAkBpL,GAGlD,GAAqB,kBAAVyI,EACT,MAAM,IAAI/I,UACR,yEAIJ,MAAM0M,EAAU3D,EAAM2D,SAAW3D,EAAM2D,UACvC,GAAe,MAAXA,GAAmBA,IAAY3D,EACjC,OAAO7I,EAAOC,KAAKuM,EAAShB,EAAkBpL,GAGhD,MAAMR,EAkJR,SAAqB6M,GACnB,GAAIzM,EAAO0M,SAASD,GAAM,CACxB,MAAME,EAA4B,EAAtBC,EAAQH,EAAIrM,QAClBiL,EAAMD,EAAauB,GAEzB,OAAmB,IAAftB,EAAIjL,QAIRqM,EAAIlC,KAAKc,EAAK,EAAG,EAAGsB,GAHXtB,CAKX,CAEA,QAAmBrJ,IAAfyK,EAAIrM,OACN,MAA0B,kBAAfqM,EAAIrM,QAAuByM,EAAYJ,EAAIrM,QAC7CgL,EAAa,GAEfiB,EAAcI,GAGvB,GAAiB,WAAbA,EAAIK,MAAqB9G,MAAMC,QAAQwG,EAAIM,MAC7C,OAAOV,EAAcI,EAAIM,KAE7B,CAzKYC,CAAWnE,GACrB,GAAIjJ,EAAG,OAAOA,EAEd,GAAsB,qBAAXmL,QAAgD,MAAtBA,OAAOkC,aACH,oBAA9BpE,EAAMkC,OAAOkC,aACtB,OAAOjN,EAAOC,KAAK4I,EAAMkC,OAAOkC,aAAa,UAAWzB,EAAkBpL,GAG5E,MAAM,IAAIN,UACR,yHACiD+I,EAErD,CAmBA,SAASqE,EAAYC,GACnB,GAAoB,kBAATA,EACT,MAAM,IAAIrN,UAAU,0CACf,GAAIqN,EAAO,EAChB,MAAM,IAAIrM,WAAW,cAAgBqM,EAAO,iCAEhD,CA0BA,SAAS1B,EAAa0B,GAEpB,OADAD,EAAWC,GACJ/B,EAAa+B,EAAO,EAAI,EAAoB,EAAhBP,EAAQO,GAC7C,CAuCA,SAASd,EAAee,GACtB,MAAMhN,EAASgN,EAAMhN,OAAS,EAAI,EAA4B,EAAxBwM,EAAQQ,EAAMhN,QAC9CiL,EAAMD,EAAahL,GACzB,IAAK,IAAIoF,EAAI,EAAGA,EAAIpF,EAAQoF,GAAK,EAC/B6F,EAAI7F,GAAgB,IAAX4H,EAAM5H,GAEjB,OAAO6F,CACT,CAUA,SAASe,EAAiBgB,EAAOjN,EAAYC,GAC3C,GAAID,EAAa,GAAKiN,EAAMvB,WAAa1L,EACvC,MAAM,IAAIW,WAAW,wCAGvB,GAAIsM,EAAMvB,WAAa1L,GAAcC,GAAU,GAC7C,MAAM,IAAIU,WAAW,wCAGvB,IAAIuK,EAYJ,OAVEA,OADiBrJ,IAAf7B,QAAuC6B,IAAX5B,EACxB,IAAIP,WAAWuN,QACDpL,IAAX5B,EACH,IAAIP,WAAWuN,EAAOjN,GAEtB,IAAIN,WAAWuN,EAAOjN,EAAYC,GAI1Ca,OAAOqK,eAAeD,EAAKrL,EAAOmB,WAE3BkK,CACT,CA2BA,SAASuB,EAASxM,GAGhB,GAAIA,GAAU+K,EACZ,MAAM,IAAIrK,WAAW,0DACaqK,EAAahB,SAAS,IAAM,UAEhE,OAAgB,EAAT/J,CACT,CAsGA,SAASyL,EAAYH,EAAQC,GAC3B,GAAI3L,EAAO0M,SAAShB,GAClB,OAAOA,EAAOtL,OAEhB,GAAI4L,YAAYC,OAAOP,IAAWS,EAAWT,EAAQM,aACnD,OAAON,EAAOG,WAEhB,GAAsB,kBAAXH,EACT,MAAM,IAAI5L,UACR,kGAC0B4L,GAI9B,MAAMiB,EAAMjB,EAAOtL,OACbiN,EAAatL,UAAU3B,OAAS,IAAsB,IAAjB2B,UAAU,GACrD,IAAKsL,GAAqB,IAARV,EAAW,OAAO,EAGpC,IAAIW,GAAc,EAClB,OACE,OAAQ3B,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOgB,EACT,IAAK,OACL,IAAK,QACH,OAAOY,EAAY7B,GAAQtL,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANuM,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOa,EAAc9B,GAAQtL,OAC/B,QACE,GAAIkN,EACF,OAAOD,GAAa,EAAIE,EAAY7B,GAAQtL,OAE9CuL,GAAY,GAAKA,GAAU8B,cAC3BH,GAAc,EAGtB,CAGA,SAASI,EAAc/B,EAAU/B,EAAO+D,GACtC,IAAIL,GAAc,EAclB,SALctL,IAAV4H,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQgE,KAAKxN,OACf,MAAO,GAOT,SAJY4B,IAAR2L,GAAqBA,EAAMC,KAAKxN,UAClCuN,EAAMC,KAAKxN,QAGTuN,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACT/D,KAAW,GAGT,MAAO,GAKT,IAFK+B,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOkC,EAASD,KAAMhE,EAAO+D,GAE/B,IAAK,OACL,IAAK,QACH,OAAOG,EAAUF,KAAMhE,EAAO+D,GAEhC,IAAK,QACH,OAAOI,EAAWH,KAAMhE,EAAO+D,GAEjC,IAAK,SACL,IAAK,SACH,OAAOK,EAAYJ,KAAMhE,EAAO+D,GAElC,IAAK,SACH,OAAOM,EAAYL,KAAMhE,EAAO+D,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOO,EAAaN,KAAMhE,EAAO+D,GAEnC,QACE,GAAIL,EAAa,MAAM,IAAIxN,UAAU,qBAAuB6L,GAC5DA,GAAYA,EAAW,IAAI8B,cAC3BH,GAAc,EAGtB,CAUA,SAASa,EAAMvO,EAAGwO,EAAGC,GACnB,MAAM7I,EAAI5F,EAAEwO,GACZxO,EAAEwO,GAAKxO,EAAEyO,GACTzO,EAAEyO,GAAK7I,CACT,CA2IA,SAAS8I,EAAsBpO,EAAQqO,EAAKpO,EAAYwL,EAAU6C,GAEhE,GAAsB,IAAlBtO,EAAOE,OAAc,OAAQ,EAmBjC,GAhB0B,kBAAfD,GACTwL,EAAWxL,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZ0M,EADJ1M,GAAcA,KAGZA,EAAaqO,EAAM,EAAKtO,EAAOE,OAAS,GAItCD,EAAa,IAAGA,EAAaD,EAAOE,OAASD,GAC7CA,GAAcD,EAAOE,OAAQ,CAC/B,GAAIoO,EAAK,OAAQ,EACZrO,EAAaD,EAAOE,OAAS,CACpC,MAAO,GAAID,EAAa,EAAG,CACzB,IAAIqO,EACC,OAAQ,EADJrO,EAAa,CAExB,CAQA,GALmB,kBAARoO,IACTA,EAAMvO,EAAOC,KAAKsO,EAAK5C,IAIrB3L,EAAO0M,SAAS6B,GAElB,OAAmB,IAAfA,EAAInO,QACE,EAEHqO,EAAavO,EAAQqO,EAAKpO,EAAYwL,EAAU6C,GAClD,GAAmB,kBAARD,EAEhB,OADAA,GAAY,IACgC,oBAAjC1O,WAAWsB,UAAUuN,QAC1BF,EACK3O,WAAWsB,UAAUuN,QAAQ3G,KAAK7H,EAAQqO,EAAKpO,GAE/CN,WAAWsB,UAAUwN,YAAY5G,KAAK7H,EAAQqO,EAAKpO,GAGvDsO,EAAavO,EAAQ,CAACqO,GAAMpO,EAAYwL,EAAU6C,GAG3D,MAAM,IAAI1O,UAAU,uCACtB,CAEA,SAAS2O,EAAcG,EAAKL,EAAKpO,EAAYwL,EAAU6C,GACrD,IA0BIhJ,EA1BAqJ,EAAY,EACZC,EAAYF,EAAIxO,OAChB2O,EAAYR,EAAInO,OAEpB,QAAiB4B,IAAb2J,IAEe,UADjBA,EAAWtB,OAAOsB,GAAU8B,gBACY,UAAb9B,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIiD,EAAIxO,OAAS,GAAKmO,EAAInO,OAAS,EACjC,OAAQ,EAEVyO,EAAY,EACZC,GAAa,EACbC,GAAa,EACb5O,GAAc,CAChB,CAGF,SAAS6O,EAAM3D,EAAK7F,GAClB,OAAkB,IAAdqJ,EACKxD,EAAI7F,GAEJ6F,EAAI4D,aAAazJ,EAAIqJ,EAEhC,CAGA,GAAIL,EAAK,CACP,IAAIU,GAAc,EAClB,IAAK1J,EAAIrF,EAAYqF,EAAIsJ,EAAWtJ,IAClC,GAAIwJ,EAAKJ,EAAKpJ,KAAOwJ,EAAKT,GAAqB,IAAhBW,EAAoB,EAAI1J,EAAI0J,IAEzD,IADoB,IAAhBA,IAAmBA,EAAa1J,GAChCA,EAAI0J,EAAa,IAAMH,EAAW,OAAOG,EAAaL,OAEtC,IAAhBK,IAAmB1J,GAAKA,EAAI0J,GAChCA,GAAc,CAGpB,MAEE,IADI/O,EAAa4O,EAAYD,IAAW3O,EAAa2O,EAAYC,GAC5DvJ,EAAIrF,EAAYqF,GAAK,EAAGA,IAAK,CAChC,IAAI2J,GAAQ,EACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAWK,IAC7B,GAAIJ,EAAKJ,EAAKpJ,EAAI4J,KAAOJ,EAAKT,EAAKa,GAAI,CACrCD,GAAQ,EACR,KACF,CAEF,GAAIA,EAAO,OAAO3J,CACpB,CAGF,OAAQ,CACV,CAcA,SAAS6J,EAAUhE,EAAKK,EAAQ7K,EAAQT,GACtCS,EAASJ,OAAOI,IAAW,EAC3B,MAAMyO,EAAYjE,EAAIjL,OAASS,EAC1BT,GAGHA,EAASK,OAAOL,IACHkP,IACXlP,EAASkP,GAJXlP,EAASkP,EAQX,MAAMC,EAAS7D,EAAOtL,OAKtB,IAAIoF,EACJ,IAJIpF,EAASmP,EAAS,IACpBnP,EAASmP,EAAS,GAGf/J,EAAI,EAAGA,EAAIpF,IAAUoF,EAAG,CAC3B,MAAMgK,EAASC,SAAS/D,EAAOgE,OAAW,EAAJlK,EAAO,GAAI,IACjD,GAAIqH,EAAY2C,GAAS,OAAOhK,EAChC6F,EAAIxK,EAAS2E,GAAKgK,CACpB,CACA,OAAOhK,CACT,CAEA,SAASmK,EAAWtE,EAAKK,EAAQ7K,EAAQT,GACvC,OAAOwP,EAAWrC,EAAY7B,EAAQL,EAAIjL,OAASS,GAASwK,EAAKxK,EAAQT,EAC3E,CAEA,SAASyP,EAAYxE,EAAKK,EAAQ7K,EAAQT,GACxC,OAAOwP,EAypCT,SAAuBE,GACrB,MAAMC,EAAY,GAClB,IAAK,IAAIvK,EAAI,EAAGA,EAAIsK,EAAI1P,SAAUoF,EAEhCuK,EAAUtK,KAAyB,IAApBqK,EAAIE,WAAWxK,IAEhC,OAAOuK,CACT,CAhqCoBE,CAAavE,GAASL,EAAKxK,EAAQT,EACvD,CAEA,SAAS8P,EAAa7E,EAAKK,EAAQ7K,EAAQT,GACzC,OAAOwP,EAAWpC,EAAc9B,GAASL,EAAKxK,EAAQT,EACxD,CAEA,SAAS+P,EAAW9E,EAAKK,EAAQ7K,EAAQT,GACvC,OAAOwP,EA0pCT,SAAyBE,EAAKM,GAC5B,IAAIC,EAAGC,EAAI7O,EACX,MAAMsO,EAAY,GAClB,IAAK,IAAIvK,EAAI,EAAGA,EAAIsK,EAAI1P,WACjBgQ,GAAS,GAAK,KADa5K,EAGhC6K,EAAIP,EAAIE,WAAWxK,GACnB8K,EAAKD,GAAK,EACV5O,EAAK4O,EAAI,IACTN,EAAUtK,KAAKhE,GACfsO,EAAUtK,KAAK6K,GAGjB,OAAOP,CACT,CAxqCoBQ,CAAe7E,EAAQL,EAAIjL,OAASS,GAASwK,EAAKxK,EAAQT,EAC9E,CA8EA,SAAS6N,EAAa5C,EAAKzB,EAAO+D,GAChC,OAAc,IAAV/D,GAAe+D,IAAQtC,EAAIjL,OACtBwK,EAAO4F,cAAcnF,GAErBT,EAAO4F,cAAcnF,EAAIrB,MAAMJ,EAAO+D,GAEjD,CAEA,SAASG,EAAWzC,EAAKzB,EAAO+D,GAC9BA,EAAMxL,KAAKsO,IAAIpF,EAAIjL,OAAQuN,GAC3B,MAAM+C,EAAM,GAEZ,IAAIlL,EAAIoE,EACR,KAAOpE,EAAImI,GAAK,CACd,MAAMgD,EAAYtF,EAAI7F,GACtB,IAAIoL,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAInL,EAAIqL,GAAoBlD,EAAK,CAC/B,IAAImD,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAazF,EAAI7F,EAAI,GACO,OAAV,IAAbsL,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAazF,EAAI7F,EAAI,GACrBuL,EAAY1F,EAAI7F,EAAI,GACQ,OAAV,IAAbsL,IAAsD,OAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAazF,EAAI7F,EAAI,GACrBuL,EAAY1F,EAAI7F,EAAI,GACpBwL,EAAa3F,EAAI7F,EAAI,GACO,OAAV,IAAbsL,IAAsD,OAAV,IAAZC,IAAsD,OAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,IAItB,CAEkB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAIjL,KAAKmL,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBF,EAAIjL,KAAKmL,GACTpL,GAAKqL,CACP,CAEA,OAQF,SAAgCK,GAC9B,MAAMvE,EAAMuE,EAAW9Q,OACvB,GAAIuM,GAAOwE,EACT,OAAO9G,OAAO+G,aAAaC,MAAMhH,OAAQ6G,GAI3C,IAAIR,EAAM,GACNlL,EAAI,EACR,KAAOA,EAAImH,GACT+D,GAAOrG,OAAO+G,aAAaC,MACzBhH,OACA6G,EAAWlH,MAAMxE,EAAGA,GAAK2L,IAG7B,OAAOT,CACT,CAxBSY,CAAsBZ,EAC/B,CA3+BA/F,EAAQ4G,WAAapG,EAgBrBnL,EAAOwR,oBAUP,WAEE,IACE,MAAM5C,EAAM,IAAI/O,WAAW,GACrB4R,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAG,GAG7C,OAFAzQ,OAAOqK,eAAemG,EAAO5R,WAAWsB,WACxCF,OAAOqK,eAAesD,EAAK6C,GACN,KAAd7C,EAAI8C,KACb,CAAE,MAAOtL,GACP,OAAO,CACT,CACF,CArB6BuL,GAExB3R,EAAOwR,qBAA0C,qBAAZI,SACb,oBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJ5Q,OAAO6Q,eAAe9R,EAAOmB,UAAW,SAAU,CAChD4Q,YAAY,EACZC,IAAK,WACH,GAAKhS,EAAO0M,SAASkB,MACrB,OAAOA,KAAK1N,MACd,IAGFe,OAAO6Q,eAAe9R,EAAOmB,UAAW,SAAU,CAChD4Q,YAAY,EACZC,IAAK,WACH,GAAKhS,EAAO0M,SAASkB,MACrB,OAAOA,KAAKzN,UACd,IAoCFH,EAAOiS,SAAW,KA8DlBjS,EAAOC,KAAO,SAAU4I,EAAO2C,EAAkBpL,GAC/C,OAAOH,EAAK4I,EAAO2C,EAAkBpL,EACvC,EAIAa,OAAOqK,eAAetL,EAAOmB,UAAWtB,WAAWsB,WACnDF,OAAOqK,eAAetL,EAAQH,YA8B9BG,EAAOiL,MAAQ,SAAUkC,EAAM+E,EAAMvG,GACnC,OArBF,SAAgBwB,EAAM+E,EAAMvG,GAE1B,OADAuB,EAAWC,GACPA,GAAQ,EACH/B,EAAa+B,QAETnL,IAATkQ,EAIyB,kBAAbvG,EACVP,EAAa+B,GAAM+E,KAAKA,EAAMvG,GAC9BP,EAAa+B,GAAM+E,KAAKA,GAEvB9G,EAAa+B,EACtB,CAOSlC,CAAMkC,EAAM+E,EAAMvG,EAC3B,EAUA3L,EAAOyL,YAAc,SAAU0B,GAC7B,OAAO1B,EAAY0B,EACrB,EAIAnN,EAAOmS,gBAAkB,SAAUhF,GACjC,OAAO1B,EAAY0B,EACrB,EA6GAnN,EAAO0M,SAAW,SAAmB9M,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAEwS,WACpBxS,IAAMI,EAAOmB,SACjB,EAEAnB,EAAOqS,QAAU,SAAkBC,EAAG1S,GAGpC,GAFIuM,EAAWmG,EAAGzS,cAAayS,EAAItS,EAAOC,KAAKqS,EAAGA,EAAEzR,OAAQyR,EAAEzG,aAC1DM,EAAWvM,EAAGC,cAAaD,EAAII,EAAOC,KAAKL,EAAGA,EAAEiB,OAAQjB,EAAEiM,cACzD7L,EAAO0M,SAAS4F,KAAOtS,EAAO0M,SAAS9M,GAC1C,MAAM,IAAIE,UACR,yEAIJ,GAAIwS,IAAM1S,EAAG,OAAO,EAEpB,IAAI2S,EAAID,EAAElS,OACNoS,EAAI5S,EAAEQ,OAEV,IAAK,IAAIoF,EAAI,EAAGmH,EAAMxK,KAAKsO,IAAI8B,EAAGC,GAAIhN,EAAImH,IAAOnH,EAC/C,GAAI8M,EAAE9M,KAAO5F,EAAE4F,GAAI,CACjB+M,EAAID,EAAE9M,GACNgN,EAAI5S,EAAE4F,GACN,KACF,CAGF,OAAI+M,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EAEAvS,EAAO4L,WAAa,SAAqBD,GACvC,OAAQtB,OAAOsB,GAAU8B,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEAzN,EAAOyS,OAAS,SAAiBC,EAAMtS,GACrC,IAAK4F,MAAMC,QAAQyM,GACjB,MAAM,IAAI5S,UAAU,+CAGtB,GAAoB,IAAhB4S,EAAKtS,OACP,OAAOJ,EAAOiL,MAAM,GAGtB,IAAIzF,EACJ,QAAexD,IAAX5B,EAEF,IADAA,EAAS,EACJoF,EAAI,EAAGA,EAAIkN,EAAKtS,SAAUoF,EAC7BpF,GAAUsS,EAAKlN,GAAGpF,OAItB,MAAMF,EAASF,EAAOyL,YAAYrL,GAClC,IAAIuS,EAAM,EACV,IAAKnN,EAAI,EAAGA,EAAIkN,EAAKtS,SAAUoF,EAAG,CAChC,IAAI6F,EAAMqH,EAAKlN,GACf,GAAI2G,EAAWd,EAAKxL,YACd8S,EAAMtH,EAAIjL,OAASF,EAAOE,QACvBJ,EAAO0M,SAASrB,KAAMA,EAAMrL,EAAOC,KAAKoL,IAC7CA,EAAId,KAAKrK,EAAQyS,IAEjB9S,WAAWsB,UAAUyR,IAAI7K,KACvB7H,EACAmL,EACAsH,OAGC,KAAK3S,EAAO0M,SAASrB,GAC1B,MAAM,IAAIvL,UAAU,+CAEpBuL,EAAId,KAAKrK,EAAQyS,EACnB,CACAA,GAAOtH,EAAIjL,MACb,CACA,OAAOF,CACT,EAiDAF,EAAO6L,WAAaA,EA8EpB7L,EAAOmB,UAAUiR,WAAY,EAQ7BpS,EAAOmB,UAAU0R,OAAS,WACxB,MAAMlG,EAAMiB,KAAKxN,OACjB,GAAIuM,EAAM,IAAM,EACd,MAAM,IAAI7L,WAAW,6CAEvB,IAAK,IAAI0E,EAAI,EAAGA,EAAImH,EAAKnH,GAAK,EAC5B2I,EAAKP,KAAMpI,EAAGA,EAAI,GAEpB,OAAOoI,IACT,EAEA5N,EAAOmB,UAAU2R,OAAS,WACxB,MAAMnG,EAAMiB,KAAKxN,OACjB,GAAIuM,EAAM,IAAM,EACd,MAAM,IAAI7L,WAAW,6CAEvB,IAAK,IAAI0E,EAAI,EAAGA,EAAImH,EAAKnH,GAAK,EAC5B2I,EAAKP,KAAMpI,EAAGA,EAAI,GAClB2I,EAAKP,KAAMpI,EAAI,EAAGA,EAAI,GAExB,OAAOoI,IACT,EAEA5N,EAAOmB,UAAU4R,OAAS,WACxB,MAAMpG,EAAMiB,KAAKxN,OACjB,GAAIuM,EAAM,IAAM,EACd,MAAM,IAAI7L,WAAW,6CAEvB,IAAK,IAAI0E,EAAI,EAAGA,EAAImH,EAAKnH,GAAK,EAC5B2I,EAAKP,KAAMpI,EAAGA,EAAI,GAClB2I,EAAKP,KAAMpI,EAAI,EAAGA,EAAI,GACtB2I,EAAKP,KAAMpI,EAAI,EAAGA,EAAI,GACtB2I,EAAKP,KAAMpI,EAAI,EAAGA,EAAI,GAExB,OAAOoI,IACT,EAEA5N,EAAOmB,UAAUgJ,SAAW,WAC1B,MAAM/J,EAASwN,KAAKxN,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArB2B,UAAU3B,OAAqB0N,EAAUF,KAAM,EAAGxN,GAC/CsN,EAAa2D,MAAMzD,KAAM7L,UAClC,EAEA/B,EAAOmB,UAAU6R,eAAiBhT,EAAOmB,UAAUgJ,SAEnDnK,EAAOmB,UAAU8R,OAAS,SAAiBrT,GACzC,IAAKI,EAAO0M,SAAS9M,GAAI,MAAM,IAAIE,UAAU,6BAC7C,OAAI8N,OAAShO,GACsB,IAA5BI,EAAOqS,QAAQzE,KAAMhO,EAC9B,EAEAI,EAAOmB,UAAU+R,QAAU,WACzB,IAAIpD,EAAM,GACV,MAAMqD,EAAMxI,EAAQO,kBAGpB,OAFA4E,EAAMlC,KAAKzD,SAAS,MAAO,EAAGgJ,GAAKC,QAAQ,UAAW,OAAOC,OACzDzF,KAAKxN,OAAS+S,IAAKrD,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACIhF,IACF9K,EAAOmB,UAAU2J,GAAuB9K,EAAOmB,UAAU+R,SAG3DlT,EAAOmB,UAAUkR,QAAU,SAAkBiB,EAAQ1J,EAAO+D,EAAK4F,EAAWC,GAI1E,GAHIrH,EAAWmH,EAAQzT,cACrByT,EAAStT,EAAOC,KAAKqT,EAAQA,EAAOzS,OAAQyS,EAAOzH,cAEhD7L,EAAO0M,SAAS4G,GACnB,MAAM,IAAIxT,UACR,wFAC2BwT,GAiB/B,QAbctR,IAAV4H,IACFA,EAAQ,QAEE5H,IAAR2L,IACFA,EAAM2F,EAASA,EAAOlT,OAAS,QAEf4B,IAAduR,IACFA,EAAY,QAEEvR,IAAZwR,IACFA,EAAU5F,KAAKxN,QAGbwJ,EAAQ,GAAK+D,EAAM2F,EAAOlT,QAAUmT,EAAY,GAAKC,EAAU5F,KAAKxN,OACtE,MAAM,IAAIU,WAAW,sBAGvB,GAAIyS,GAAaC,GAAW5J,GAAS+D,EACnC,OAAO,EAET,GAAI4F,GAAaC,EACf,OAAQ,EAEV,GAAI5J,GAAS+D,EACX,OAAO,EAQT,GAAIC,OAAS0F,EAAQ,OAAO,EAE5B,IAAIf,GAJJiB,KAAa,IADbD,KAAe,GAMXf,GAPJ7E,KAAS,IADT/D,KAAW,GASX,MAAM+C,EAAMxK,KAAKsO,IAAI8B,EAAGC,GAElBiB,EAAW7F,KAAK5D,MAAMuJ,EAAWC,GACjCE,EAAaJ,EAAOtJ,MAAMJ,EAAO+D,GAEvC,IAAK,IAAInI,EAAI,EAAGA,EAAImH,IAAOnH,EACzB,GAAIiO,EAASjO,KAAOkO,EAAWlO,GAAI,CACjC+M,EAAIkB,EAASjO,GACbgN,EAAIkB,EAAWlO,GACf,KACF,CAGF,OAAI+M,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EA2HAvS,EAAOmB,UAAUwS,SAAW,SAAmBpF,EAAKpO,EAAYwL,GAC9D,OAAoD,IAA7CiC,KAAKc,QAAQH,EAAKpO,EAAYwL,EACvC,EAEA3L,EAAOmB,UAAUuN,QAAU,SAAkBH,EAAKpO,EAAYwL,GAC5D,OAAO2C,EAAqBV,KAAMW,EAAKpO,EAAYwL,GAAU,EAC/D,EAEA3L,EAAOmB,UAAUwN,YAAc,SAAsBJ,EAAKpO,EAAYwL,GACpE,OAAO2C,EAAqBV,KAAMW,EAAKpO,EAAYwL,GAAU,EAC/D,EA4CA3L,EAAOmB,UAAU+I,MAAQ,SAAgBwB,EAAQ7K,EAAQT,EAAQuL,GAE/D,QAAe3J,IAAXnB,EACF8K,EAAW,OACXvL,EAASwN,KAAKxN,OACdS,EAAS,OAEJ,QAAemB,IAAX5B,GAA0C,kBAAXS,EACxC8K,EAAW9K,EACXT,EAASwN,KAAKxN,OACdS,EAAS,MAEJ,KAAI+S,SAAS/S,GAUlB,MAAM,IAAIe,MACR,2EAVFf,KAAoB,EAChB+S,SAASxT,IACXA,KAAoB,OACH4B,IAAb2J,IAAwBA,EAAW,UAEvCA,EAAWvL,EACXA,OAAS4B,EAMb,CAEA,MAAMsN,EAAY1B,KAAKxN,OAASS,EAGhC,SAFemB,IAAX5B,GAAwBA,EAASkP,KAAWlP,EAASkP,GAEpD5D,EAAOtL,OAAS,IAAMA,EAAS,GAAKS,EAAS,IAAOA,EAAS+M,KAAKxN,OACrE,MAAM,IAAIU,WAAW,0CAGlB6K,IAAUA,EAAW,QAE1B,IAAI2B,GAAc,EAClB,OACE,OAAQ3B,GACN,IAAK,MACH,OAAO0D,EAASzB,KAAMlC,EAAQ7K,EAAQT,GAExC,IAAK,OACL,IAAK,QACH,OAAOuP,EAAU/B,KAAMlC,EAAQ7K,EAAQT,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOyP,EAAWjC,KAAMlC,EAAQ7K,EAAQT,GAE1C,IAAK,SAEH,OAAO8P,EAAYtC,KAAMlC,EAAQ7K,EAAQT,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO+P,EAAUvC,KAAMlC,EAAQ7K,EAAQT,GAEzC,QACE,GAAIkN,EAAa,MAAM,IAAIxN,UAAU,qBAAuB6L,GAC5DA,GAAY,GAAKA,GAAU8B,cAC3BH,GAAc,EAGtB,EAEAtN,EAAOmB,UAAU0S,OAAS,WACxB,MAAO,CACL/G,KAAM,SACNC,KAAM/G,MAAM7E,UAAU6I,MAAMjC,KAAK6F,KAAKkG,MAAQlG,KAAM,GAExD,EAyFA,MAAMuD,EAAuB,KAoB7B,SAASpD,EAAY1C,EAAKzB,EAAO+D,GAC/B,IAAIoG,EAAM,GACVpG,EAAMxL,KAAKsO,IAAIpF,EAAIjL,OAAQuN,GAE3B,IAAK,IAAInI,EAAIoE,EAAOpE,EAAImI,IAAOnI,EAC7BuO,GAAO1J,OAAO+G,aAAsB,IAAT/F,EAAI7F,IAEjC,OAAOuO,CACT,CAEA,SAAS/F,EAAa3C,EAAKzB,EAAO+D,GAChC,IAAIoG,EAAM,GACVpG,EAAMxL,KAAKsO,IAAIpF,EAAIjL,OAAQuN,GAE3B,IAAK,IAAInI,EAAIoE,EAAOpE,EAAImI,IAAOnI,EAC7BuO,GAAO1J,OAAO+G,aAAa/F,EAAI7F,IAEjC,OAAOuO,CACT,CAEA,SAASlG,EAAUxC,EAAKzB,EAAO+D,GAC7B,MAAMhB,EAAMtB,EAAIjL,SAEXwJ,GAASA,EAAQ,KAAGA,EAAQ,KAC5B+D,GAAOA,EAAM,GAAKA,EAAMhB,KAAKgB,EAAMhB,GAExC,IAAIqH,EAAM,GACV,IAAK,IAAIxO,EAAIoE,EAAOpE,EAAImI,IAAOnI,EAC7BwO,GAAOC,EAAoB5I,EAAI7F,IAEjC,OAAOwO,CACT,CAEA,SAAS9F,EAAc7C,EAAKzB,EAAO+D,GACjC,MAAMuG,EAAQ7I,EAAIrB,MAAMJ,EAAO+D,GAC/B,IAAI+C,EAAM,GAEV,IAAK,IAAIlL,EAAI,EAAGA,EAAI0O,EAAM9T,OAAS,EAAGoF,GAAK,EACzCkL,GAAOrG,OAAO+G,aAAa8C,EAAM1O,GAAqB,IAAf0O,EAAM1O,EAAI,IAEnD,OAAOkL,CACT,CAiCA,SAASyD,EAAatT,EAAQuT,EAAKhU,GACjC,GAAKS,EAAS,IAAO,GAAKA,EAAS,EAAG,MAAM,IAAIC,WAAW,sBAC3D,GAAID,EAASuT,EAAMhU,EAAQ,MAAM,IAAIU,WAAW,wCAClD,CAyQA,SAASuT,EAAUhJ,EAAKxC,EAAOhI,EAAQuT,EAAKjB,EAAK1C,GAC/C,IAAKzQ,EAAO0M,SAASrB,GAAM,MAAM,IAAIvL,UAAU,+CAC/C,GAAI+I,EAAQsK,GAAOtK,EAAQ4H,EAAK,MAAM,IAAI3P,WAAW,qCACrD,GAAID,EAASuT,EAAM/I,EAAIjL,OAAQ,MAAM,IAAIU,WAAW,qBACtD,CA+FA,SAASwT,EAAgBjJ,EAAKxC,EAAOhI,EAAQ4P,EAAK0C,GAChDoB,EAAW1L,EAAO4H,EAAK0C,EAAK9H,EAAKxK,EAAQ,GAEzC,IAAIY,EAAKhB,OAAOoI,EAAQ2L,OAAO,aAC/BnJ,EAAIxK,KAAYY,EAChBA,IAAW,EACX4J,EAAIxK,KAAYY,EAChBA,IAAW,EACX4J,EAAIxK,KAAYY,EAChBA,IAAW,EACX4J,EAAIxK,KAAYY,EAChB,IAAI6O,EAAK7P,OAAOoI,GAAS2L,OAAO,IAAMA,OAAO,aAQ7C,OAPAnJ,EAAIxK,KAAYyP,EAChBA,IAAW,EACXjF,EAAIxK,KAAYyP,EAChBA,IAAW,EACXjF,EAAIxK,KAAYyP,EAChBA,IAAW,EACXjF,EAAIxK,KAAYyP,EACTzP,CACT,CAEA,SAAS4T,EAAgBpJ,EAAKxC,EAAOhI,EAAQ4P,EAAK0C,GAChDoB,EAAW1L,EAAO4H,EAAK0C,EAAK9H,EAAKxK,EAAQ,GAEzC,IAAIY,EAAKhB,OAAOoI,EAAQ2L,OAAO,aAC/BnJ,EAAIxK,EAAS,GAAKY,EAClBA,IAAW,EACX4J,EAAIxK,EAAS,GAAKY,EAClBA,IAAW,EACX4J,EAAIxK,EAAS,GAAKY,EAClBA,IAAW,EACX4J,EAAIxK,EAAS,GAAKY,EAClB,IAAI6O,EAAK7P,OAAOoI,GAAS2L,OAAO,IAAMA,OAAO,aAQ7C,OAPAnJ,EAAIxK,EAAS,GAAKyP,EAClBA,IAAW,EACXjF,EAAIxK,EAAS,GAAKyP,EAClBA,IAAW,EACXjF,EAAIxK,EAAS,GAAKyP,EAClBA,IAAW,EACXjF,EAAIxK,GAAUyP,EACPzP,EAAS,CAClB,CAkHA,SAAS6T,EAAcrJ,EAAKxC,EAAOhI,EAAQuT,EAAKjB,EAAK1C,GACnD,GAAI5P,EAASuT,EAAM/I,EAAIjL,OAAQ,MAAM,IAAIU,WAAW,sBACpD,GAAID,EAAS,EAAG,MAAM,IAAIC,WAAW,qBACvC,CAEA,SAAS6T,EAAYtJ,EAAKxC,EAAOhI,EAAQ+T,EAAcC,GAOrD,OANAhM,GAASA,EACThI,KAAoB,EACfgU,GACHH,EAAarJ,EAAKxC,EAAOhI,EAAQ,GAEnCgK,EAAQX,MAAMmB,EAAKxC,EAAOhI,EAAQ+T,EAAc,GAAI,GAC7C/T,EAAS,CAClB,CAUA,SAASiU,EAAazJ,EAAKxC,EAAOhI,EAAQ+T,EAAcC,GAOtD,OANAhM,GAASA,EACThI,KAAoB,EACfgU,GACHH,EAAarJ,EAAKxC,EAAOhI,EAAQ,GAEnCgK,EAAQX,MAAMmB,EAAKxC,EAAOhI,EAAQ+T,EAAc,GAAI,GAC7C/T,EAAS,CAClB,CAzkBAb,EAAOmB,UAAU6I,MAAQ,SAAgBJ,EAAO+D,GAC9C,MAAMhB,EAAMiB,KAAKxN,QACjBwJ,IAAUA,GAGE,GACVA,GAAS+C,GACG,IAAG/C,EAAQ,GACdA,EAAQ+C,IACjB/C,EAAQ+C,IANVgB,OAAc3L,IAAR2L,EAAoBhB,IAAQgB,GASxB,GACRA,GAAOhB,GACG,IAAGgB,EAAM,GACVA,EAAMhB,IACfgB,EAAMhB,GAGJgB,EAAM/D,IAAO+D,EAAM/D,GAEvB,MAAMmL,EAASnH,KAAKoH,SAASpL,EAAO+D,GAIpC,OAFA1M,OAAOqK,eAAeyJ,EAAQ/U,EAAOmB,WAE9B4T,CACT,EAUA/U,EAAOmB,UAAU8T,WACjBjV,EAAOmB,UAAUwB,WAAa,SAAqB9B,EAAQgL,EAAYgJ,GACrEhU,KAAoB,EACpBgL,KAA4B,EACvBgJ,GAAUV,EAAYtT,EAAQgL,EAAY+B,KAAKxN,QAEpD,IAAImO,EAAMX,KAAK/M,GACXqU,EAAM,EACN1P,EAAI,EACR,OAASA,EAAIqG,IAAeqJ,GAAO,MACjC3G,GAAOX,KAAK/M,EAAS2E,GAAK0P,EAG5B,OAAO3G,CACT,EAEAvO,EAAOmB,UAAUgU,WACjBnV,EAAOmB,UAAU0B,WAAa,SAAqBhC,EAAQgL,EAAYgJ,GACrEhU,KAAoB,EACpBgL,KAA4B,EACvBgJ,GACHV,EAAYtT,EAAQgL,EAAY+B,KAAKxN,QAGvC,IAAImO,EAAMX,KAAK/M,IAAWgL,GACtBqJ,EAAM,EACV,KAAOrJ,EAAa,IAAMqJ,GAAO,MAC/B3G,GAAOX,KAAK/M,IAAWgL,GAAcqJ,EAGvC,OAAO3G,CACT,EAEAvO,EAAOmB,UAAUiU,UACjBpV,EAAOmB,UAAUkU,UAAY,SAAoBxU,EAAQgU,GAGvD,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCwN,KAAK/M,EACd,EAEAb,EAAOmB,UAAUmU,aACjBtV,EAAOmB,UAAUoU,aAAe,SAAuB1U,EAAQgU,GAG7D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCwN,KAAK/M,GAAW+M,KAAK/M,EAAS,IAAM,CAC7C,EAEAb,EAAOmB,UAAUqU,aACjBxV,EAAOmB,UAAU8N,aAAe,SAAuBpO,EAAQgU,GAG7D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACnCwN,KAAK/M,IAAW,EAAK+M,KAAK/M,EAAS,EAC7C,EAEAb,EAAOmB,UAAUsU,aACjBzV,EAAOmB,UAAUyC,aAAe,SAAuB/C,EAAQgU,GAI7D,OAHAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,SAElCwN,KAAK/M,GACT+M,KAAK/M,EAAS,IAAM,EACpB+M,KAAK/M,EAAS,IAAM,IACD,SAAnB+M,KAAK/M,EAAS,EACrB,EAEAb,EAAOmB,UAAUuU,aACjB1V,EAAOmB,UAAU6C,aAAe,SAAuBnD,EAAQgU,GAI7D,OAHAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAEpB,SAAfwN,KAAK/M,IACT+M,KAAK/M,EAAS,IAAM,GACrB+M,KAAK/M,EAAS,IAAM,EACrB+M,KAAK/M,EAAS,GAClB,EAEAb,EAAOmB,UAAUwU,gBAAkBC,GAAmB,SAA0B/U,GAE9EgV,EADAhV,KAAoB,EACG,UACvB,MAAMiV,EAAQlI,KAAK/M,GACbkV,EAAOnI,KAAK/M,EAAS,QACbmB,IAAV8T,QAAgC9T,IAAT+T,GACzBC,EAAYnV,EAAQ+M,KAAKxN,OAAS,GAGpC,MAAMqB,EAAKqU,EACQ,IAAjBlI,OAAO/M,GACU,MAAjB+M,OAAO/M,GACP+M,OAAO/M,GAAU,GAAK,GAElByP,EAAK1C,OAAO/M,GACC,IAAjB+M,OAAO/M,GACU,MAAjB+M,OAAO/M,GACPkV,EAAO,GAAK,GAEd,OAAOvB,OAAO/S,IAAO+S,OAAOlE,IAAOkE,OAAO,IAC5C,IAEAxU,EAAOmB,UAAU8U,gBAAkBL,GAAmB,SAA0B/U,GAE9EgV,EADAhV,KAAoB,EACG,UACvB,MAAMiV,EAAQlI,KAAK/M,GACbkV,EAAOnI,KAAK/M,EAAS,QACbmB,IAAV8T,QAAgC9T,IAAT+T,GACzBC,EAAYnV,EAAQ+M,KAAKxN,OAAS,GAGpC,MAAMkQ,EAAKwF,EAAQ,GAAK,GACL,MAAjBlI,OAAO/M,GACU,IAAjB+M,OAAO/M,GACP+M,OAAO/M,GAEHY,EAAKmM,OAAO/M,GAAU,GAAK,GACd,MAAjB+M,OAAO/M,GACU,IAAjB+M,OAAO/M,GACPkV,EAEF,OAAQvB,OAAOlE,IAAOkE,OAAO,KAAOA,OAAO/S,EAC7C,IAEAzB,EAAOmB,UAAU6B,UAAY,SAAoBnC,EAAQgL,EAAYgJ,GACnEhU,KAAoB,EACpBgL,KAA4B,EACvBgJ,GAAUV,EAAYtT,EAAQgL,EAAY+B,KAAKxN,QAEpD,IAAImO,EAAMX,KAAK/M,GACXqU,EAAM,EACN1P,EAAI,EACR,OAASA,EAAIqG,IAAeqJ,GAAO,MACjC3G,GAAOX,KAAK/M,EAAS2E,GAAK0P,EAM5B,OAJAA,GAAO,IAEH3G,GAAO2G,IAAK3G,GAAOpM,KAAKmB,IAAI,EAAG,EAAIuI,IAEhC0C,CACT,EAEAvO,EAAOmB,UAAUgC,UAAY,SAAoBtC,EAAQgL,EAAYgJ,GACnEhU,KAAoB,EACpBgL,KAA4B,EACvBgJ,GAAUV,EAAYtT,EAAQgL,EAAY+B,KAAKxN,QAEpD,IAAIoF,EAAIqG,EACJqJ,EAAM,EACN3G,EAAMX,KAAK/M,IAAW2E,GAC1B,KAAOA,EAAI,IAAM0P,GAAO,MACtB3G,GAAOX,KAAK/M,IAAW2E,GAAK0P,EAM9B,OAJAA,GAAO,IAEH3G,GAAO2G,IAAK3G,GAAOpM,KAAKmB,IAAI,EAAG,EAAIuI,IAEhC0C,CACT,EAEAvO,EAAOmB,UAAU+U,SAAW,SAAmBrV,EAAQgU,GAGrD,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACtB,IAAfwN,KAAK/M,IAC0B,GAA5B,IAAO+M,KAAK/M,GAAU,GADK+M,KAAK/M,EAE3C,EAEAb,EAAOmB,UAAUgV,YAAc,SAAsBtV,EAAQgU,GAC3DhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAC3C,MAAMmO,EAAMX,KAAK/M,GAAW+M,KAAK/M,EAAS,IAAM,EAChD,OAAc,MAAN0N,EAAsB,WAANA,EAAmBA,CAC7C,EAEAvO,EAAOmB,UAAUiV,YAAc,SAAsBvV,EAAQgU,GAC3DhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAC3C,MAAMmO,EAAMX,KAAK/M,EAAS,GAAM+M,KAAK/M,IAAW,EAChD,OAAc,MAAN0N,EAAsB,WAANA,EAAmBA,CAC7C,EAEAvO,EAAOmB,UAAUgD,YAAc,SAAsBtD,EAAQgU,GAI3D,OAHAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAEnCwN,KAAK/M,GACV+M,KAAK/M,EAAS,IAAM,EACpB+M,KAAK/M,EAAS,IAAM,GACpB+M,KAAK/M,EAAS,IAAM,EACzB,EAEAb,EAAOmB,UAAUmD,YAAc,SAAsBzD,EAAQgU,GAI3D,OAHAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAEnCwN,KAAK/M,IAAW,GACrB+M,KAAK/M,EAAS,IAAM,GACpB+M,KAAK/M,EAAS,IAAM,EACpB+M,KAAK/M,EAAS,EACnB,EAEAb,EAAOmB,UAAUkV,eAAiBT,GAAmB,SAAyB/U,GAE5EgV,EADAhV,KAAoB,EACG,UACvB,MAAMiV,EAAQlI,KAAK/M,GACbkV,EAAOnI,KAAK/M,EAAS,QACbmB,IAAV8T,QAAgC9T,IAAT+T,GACzBC,EAAYnV,EAAQ+M,KAAKxN,OAAS,GAGpC,MAAMmO,EAAMX,KAAK/M,EAAS,GACL,IAAnB+M,KAAK/M,EAAS,GACK,MAAnB+M,KAAK/M,EAAS,IACbkV,GAAQ,IAEX,OAAQvB,OAAOjG,IAAQiG,OAAO,KAC5BA,OAAOsB,EACU,IAAjBlI,OAAO/M,GACU,MAAjB+M,OAAO/M,GACP+M,OAAO/M,GAAU,GAAK,GAC1B,IAEAb,EAAOmB,UAAUmV,eAAiBV,GAAmB,SAAyB/U,GAE5EgV,EADAhV,KAAoB,EACG,UACvB,MAAMiV,EAAQlI,KAAK/M,GACbkV,EAAOnI,KAAK/M,EAAS,QACbmB,IAAV8T,QAAgC9T,IAAT+T,GACzBC,EAAYnV,EAAQ+M,KAAKxN,OAAS,GAGpC,MAAMmO,GAAOuH,GAAS,IACH,MAAjBlI,OAAO/M,GACU,IAAjB+M,OAAO/M,GACP+M,OAAO/M,GAET,OAAQ2T,OAAOjG,IAAQiG,OAAO,KAC5BA,OAAO5G,OAAO/M,GAAU,GAAK,GACZ,MAAjB+M,OAAO/M,GACU,IAAjB+M,OAAO/M,GACPkV,EACJ,IAEA/V,EAAOmB,UAAUsD,YAAc,SAAsB5D,EAAQgU,GAG3D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCyK,EAAQmE,KAAKpB,KAAM/M,GAAQ,EAAM,GAAI,EAC9C,EAEAb,EAAOmB,UAAUyD,YAAc,SAAsB/D,EAAQgU,GAG3D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCyK,EAAQmE,KAAKpB,KAAM/M,GAAQ,EAAO,GAAI,EAC/C,EAEAb,EAAOmB,UAAU4D,aAAe,SAAuBlE,EAAQgU,GAG7D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCyK,EAAQmE,KAAKpB,KAAM/M,GAAQ,EAAM,GAAI,EAC9C,EAEAb,EAAOmB,UAAU+D,aAAe,SAAuBrE,EAAQgU,GAG7D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCyK,EAAQmE,KAAKpB,KAAM/M,GAAQ,EAAO,GAAI,EAC/C,EAQAb,EAAOmB,UAAUoV,YACjBvW,EAAOmB,UAAUyB,YAAc,SAAsBiG,EAAOhI,EAAQgL,EAAYgJ,GAI9E,GAHAhM,GAASA,EACThI,KAAoB,EACpBgL,KAA4B,GACvBgJ,EAAU,CAEbR,EAASzG,KAAM/E,EAAOhI,EAAQgL,EADb1J,KAAKmB,IAAI,EAAG,EAAIuI,GAAc,EACK,EACtD,CAEA,IAAIqJ,EAAM,EACN1P,EAAI,EAER,IADAoI,KAAK/M,GAAkB,IAARgI,IACNrD,EAAIqG,IAAeqJ,GAAO,MACjCtH,KAAK/M,EAAS2E,GAAMqD,EAAQqM,EAAO,IAGrC,OAAOrU,EAASgL,CAClB,EAEA7L,EAAOmB,UAAUqV,YACjBxW,EAAOmB,UAAU2B,YAAc,SAAsB+F,EAAOhI,EAAQgL,EAAYgJ,GAI9E,GAHAhM,GAASA,EACThI,KAAoB,EACpBgL,KAA4B,GACvBgJ,EAAU,CAEbR,EAASzG,KAAM/E,EAAOhI,EAAQgL,EADb1J,KAAKmB,IAAI,EAAG,EAAIuI,GAAc,EACK,EACtD,CAEA,IAAIrG,EAAIqG,EAAa,EACjBqJ,EAAM,EAEV,IADAtH,KAAK/M,EAAS2E,GAAa,IAARqD,IACVrD,GAAK,IAAM0P,GAAO,MACzBtH,KAAK/M,EAAS2E,GAAMqD,EAAQqM,EAAO,IAGrC,OAAOrU,EAASgL,CAClB,EAEA7L,EAAOmB,UAAUsV,WACjBzW,EAAOmB,UAAUuV,WAAa,SAAqB7N,EAAOhI,EAAQgU,GAKhE,OAJAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,IAAM,GACtD+M,KAAK/M,GAAmB,IAARgI,EACThI,EAAS,CAClB,EAEAb,EAAOmB,UAAUwV,cACjB3W,EAAOmB,UAAUyV,cAAgB,SAAwB/N,EAAOhI,EAAQgU,GAMtE,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,MAAQ,GACxD+M,KAAK/M,GAAmB,IAARgI,EAChB+E,KAAK/M,EAAS,GAAMgI,IAAU,EACvBhI,EAAS,CAClB,EAEAb,EAAOmB,UAAU0V,cACjB7W,EAAOmB,UAAU2V,cAAgB,SAAwBjO,EAAOhI,EAAQgU,GAMtE,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,MAAQ,GACxD+M,KAAK/M,GAAWgI,IAAU,EAC1B+E,KAAK/M,EAAS,GAAc,IAARgI,EACbhI,EAAS,CAClB,EAEAb,EAAOmB,UAAU4V,cACjB/W,EAAOmB,UAAU2C,cAAgB,SAAwB+E,EAAOhI,EAAQgU,GAQtE,OAPAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,WAAY,GAC5D+M,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,EAC9B+E,KAAK/M,GAAmB,IAARgI,EACThI,EAAS,CAClB,EAEAb,EAAOmB,UAAU6V,cACjBhX,EAAOmB,UAAU8C,cAAgB,SAAwB4E,EAAOhI,EAAQgU,GAQtE,OAPAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,WAAY,GAC5D+M,KAAK/M,GAAWgI,IAAU,GAC1B+E,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,EAC9B+E,KAAK/M,EAAS,GAAc,IAARgI,EACbhI,EAAS,CAClB,EA8CAb,EAAOmB,UAAU8V,iBAAmBrB,GAAmB,SAA2B/M,GAChF,OAAOyL,EAAe1G,KAAM/E,EADiE9G,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrDyS,OAAO,GAAIA,OAAO,sBAC/D,IAEAxU,EAAOmB,UAAU+V,iBAAmBtB,GAAmB,SAA2B/M,GAChF,OAAO4L,EAAe7G,KAAM/E,EADiE9G,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrDyS,OAAO,GAAIA,OAAO,sBAC/D,IAEAxU,EAAOmB,UAAU8B,WAAa,SAAqB4F,EAAOhI,EAAQgL,EAAYgJ,GAG5E,GAFAhM,GAASA,EACThI,KAAoB,GACfgU,EAAU,CACb,MAAMsC,EAAQhV,KAAKmB,IAAI,EAAI,EAAIuI,EAAc,GAE7CwI,EAASzG,KAAM/E,EAAOhI,EAAQgL,EAAYsL,EAAQ,GAAIA,EACxD,CAEA,IAAI3R,EAAI,EACJ0P,EAAM,EACNkC,EAAM,EAEV,IADAxJ,KAAK/M,GAAkB,IAARgI,IACNrD,EAAIqG,IAAeqJ,GAAO,MAC7BrM,EAAQ,GAAa,IAARuO,GAAsC,IAAzBxJ,KAAK/M,EAAS2E,EAAI,KAC9C4R,EAAM,GAERxJ,KAAK/M,EAAS2E,IAAOqD,EAAQqM,GAAQ,GAAKkC,EAAM,IAGlD,OAAOvW,EAASgL,CAClB,EAEA7L,EAAOmB,UAAUiC,WAAa,SAAqByF,EAAOhI,EAAQgL,EAAYgJ,GAG5E,GAFAhM,GAASA,EACThI,KAAoB,GACfgU,EAAU,CACb,MAAMsC,EAAQhV,KAAKmB,IAAI,EAAI,EAAIuI,EAAc,GAE7CwI,EAASzG,KAAM/E,EAAOhI,EAAQgL,EAAYsL,EAAQ,GAAIA,EACxD,CAEA,IAAI3R,EAAIqG,EAAa,EACjBqJ,EAAM,EACNkC,EAAM,EAEV,IADAxJ,KAAK/M,EAAS2E,GAAa,IAARqD,IACVrD,GAAK,IAAM0P,GAAO,MACrBrM,EAAQ,GAAa,IAARuO,GAAsC,IAAzBxJ,KAAK/M,EAAS2E,EAAI,KAC9C4R,EAAM,GAERxJ,KAAK/M,EAAS2E,IAAOqD,EAAQqM,GAAQ,GAAKkC,EAAM,IAGlD,OAAOvW,EAASgL,CAClB,EAEA7L,EAAOmB,UAAUkW,UAAY,SAAoBxO,EAAOhI,EAAQgU,GAM9D,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,KAAO,KACnDgI,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtC+E,KAAK/M,GAAmB,IAARgI,EACThI,EAAS,CAClB,EAEAb,EAAOmB,UAAUmW,aAAe,SAAuBzO,EAAOhI,EAAQgU,GAMpE,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,OAAS,OACzD+M,KAAK/M,GAAmB,IAARgI,EAChB+E,KAAK/M,EAAS,GAAMgI,IAAU,EACvBhI,EAAS,CAClB,EAEAb,EAAOmB,UAAUoW,aAAe,SAAuB1O,EAAOhI,EAAQgU,GAMpE,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,OAAS,OACzD+M,KAAK/M,GAAWgI,IAAU,EAC1B+E,KAAK/M,EAAS,GAAc,IAARgI,EACbhI,EAAS,CAClB,EAEAb,EAAOmB,UAAUiD,aAAe,SAAuByE,EAAOhI,EAAQgU,GAQpE,OAPAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,YAAa,YAC7D+M,KAAK/M,GAAmB,IAARgI,EAChB+E,KAAK/M,EAAS,GAAMgI,IAAU,EAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,GACvBhI,EAAS,CAClB,EAEAb,EAAOmB,UAAUoD,aAAe,SAAuBsE,EAAOhI,EAAQgU,GASpE,OARAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,YAAa,YACzDgI,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C+E,KAAK/M,GAAWgI,IAAU,GAC1B+E,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,EAC9B+E,KAAK/M,EAAS,GAAc,IAARgI,EACbhI,EAAS,CAClB,EAEAb,EAAOmB,UAAUqW,gBAAkB5B,GAAmB,SAA0B/M,GAC9E,OAAOyL,EAAe1G,KAAM/E,EAD+D9G,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAClDyS,OAAO,sBAAuBA,OAAO,sBACnF,IAEAxU,EAAOmB,UAAUsW,gBAAkB7B,GAAmB,SAA0B/M,GAC9E,OAAO4L,EAAe7G,KAAM/E,EAD+D9G,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAClDyS,OAAO,sBAAuBA,OAAO,sBACnF,IAiBAxU,EAAOmB,UAAUuD,aAAe,SAAuBmE,EAAOhI,EAAQgU,GACpE,OAAOF,EAAW/G,KAAM/E,EAAOhI,GAAQ,EAAMgU,EAC/C,EAEA7U,EAAOmB,UAAU0D,aAAe,SAAuBgE,EAAOhI,EAAQgU,GACpE,OAAOF,EAAW/G,KAAM/E,EAAOhI,GAAQ,EAAOgU,EAChD,EAYA7U,EAAOmB,UAAU6D,cAAgB,SAAwB6D,EAAOhI,EAAQgU,GACtE,OAAOC,EAAYlH,KAAM/E,EAAOhI,GAAQ,EAAMgU,EAChD,EAEA7U,EAAOmB,UAAUgE,cAAgB,SAAwB0D,EAAOhI,EAAQgU,GACtE,OAAOC,EAAYlH,KAAM/E,EAAOhI,GAAQ,EAAOgU,EACjD,EAGA7U,EAAOmB,UAAUoJ,KAAO,SAAe+I,EAAQoE,EAAa9N,EAAO+D,GACjE,IAAK3N,EAAO0M,SAAS4G,GAAS,MAAM,IAAIxT,UAAU,+BAQlD,GAPK8J,IAAOA,EAAQ,GACf+D,GAAe,IAARA,IAAWA,EAAMC,KAAKxN,QAC9BsX,GAAepE,EAAOlT,SAAQsX,EAAcpE,EAAOlT,QAClDsX,IAAaA,EAAc,GAC5B/J,EAAM,GAAKA,EAAM/D,IAAO+D,EAAM/D,GAG9B+D,IAAQ/D,EAAO,OAAO,EAC1B,GAAsB,IAAlB0J,EAAOlT,QAAgC,IAAhBwN,KAAKxN,OAAc,OAAO,EAGrD,GAAIsX,EAAc,EAChB,MAAM,IAAI5W,WAAW,6BAEvB,GAAI8I,EAAQ,GAAKA,GAASgE,KAAKxN,OAAQ,MAAM,IAAIU,WAAW,sBAC5D,GAAI6M,EAAM,EAAG,MAAM,IAAI7M,WAAW,2BAG9B6M,EAAMC,KAAKxN,SAAQuN,EAAMC,KAAKxN,QAC9BkT,EAAOlT,OAASsX,EAAc/J,EAAM/D,IACtC+D,EAAM2F,EAAOlT,OAASsX,EAAc9N,GAGtC,MAAM+C,EAAMgB,EAAM/D,EAalB,OAXIgE,OAAS0F,GAAqD,oBAApCzT,WAAWsB,UAAUwW,WAEjD/J,KAAK+J,WAAWD,EAAa9N,EAAO+D,GAEpC9N,WAAWsB,UAAUyR,IAAI7K,KACvBuL,EACA1F,KAAKoH,SAASpL,EAAO+D,GACrB+J,GAIG/K,CACT,EAMA3M,EAAOmB,UAAU+Q,KAAO,SAAe3D,EAAK3E,EAAO+D,EAAKhC,GAEtD,GAAmB,kBAAR4C,EAAkB,CAS3B,GARqB,kBAAV3E,GACT+B,EAAW/B,EACXA,EAAQ,EACR+D,EAAMC,KAAKxN,QACa,kBAARuN,IAChBhC,EAAWgC,EACXA,EAAMC,KAAKxN,aAEI4B,IAAb2J,GAA8C,kBAAbA,EACnC,MAAM,IAAI7L,UAAU,6BAEtB,GAAwB,kBAAb6L,IAA0B3L,EAAO4L,WAAWD,GACrD,MAAM,IAAI7L,UAAU,qBAAuB6L,GAE7C,GAAmB,IAAf4C,EAAInO,OAAc,CACpB,MAAMwX,EAAOrJ,EAAIyB,WAAW,IACV,SAAbrE,GAAuBiM,EAAO,KAClB,WAAbjM,KAEF4C,EAAMqJ,EAEV,CACF,KAA0B,kBAARrJ,EAChBA,GAAY,IACY,mBAARA,IAChBA,EAAM9N,OAAO8N,IAIf,GAAI3E,EAAQ,GAAKgE,KAAKxN,OAASwJ,GAASgE,KAAKxN,OAASuN,EACpD,MAAM,IAAI7M,WAAW,sBAGvB,GAAI6M,GAAO/D,EACT,OAAOgE,KAQT,IAAIpI,EACJ,GANAoE,KAAkB,EAClB+D,OAAc3L,IAAR2L,EAAoBC,KAAKxN,OAASuN,IAAQ,EAE3CY,IAAKA,EAAM,GAGG,kBAARA,EACT,IAAK/I,EAAIoE,EAAOpE,EAAImI,IAAOnI,EACzBoI,KAAKpI,GAAK+I,MAEP,CACL,MAAM2F,EAAQlU,EAAO0M,SAAS6B,GAC1BA,EACAvO,EAAOC,KAAKsO,EAAK5C,GACfgB,EAAMuH,EAAM9T,OAClB,GAAY,IAARuM,EACF,MAAM,IAAI7M,UAAU,cAAgByO,EAClC,qCAEJ,IAAK/I,EAAI,EAAGA,EAAImI,EAAM/D,IAASpE,EAC7BoI,KAAKpI,EAAIoE,GAASsK,EAAM1O,EAAImH,EAEhC,CAEA,OAAOiB,IACT,EAMA,MAAMiK,EAAS,CAAC,EAChB,SAASC,EAAGC,EAAKC,EAAYC,GAC3BJ,EAAOE,GAAO,cAAwBE,EACpC3X,cACE4X,QAEAjX,OAAO6Q,eAAelE,KAAM,UAAW,CACrC/E,MAAOmP,EAAW3G,MAAMzD,KAAM7L,WAC9BoW,UAAU,EACVC,cAAc,IAIhBxK,KAAKpM,KAAQ,GAAEoM,KAAKpM,SAASuW,KAG7BnK,KAAKyK,aAEEzK,KAAKpM,IACd,CAEIoW,WACF,OAAOG,CACT,CAEIH,SAAM/O,GACR5H,OAAO6Q,eAAelE,KAAM,OAAQ,CAClCwK,cAAc,EACdrG,YAAY,EACZlJ,QACAsP,UAAU,GAEd,CAEAhO,WACE,MAAQ,GAAEyD,KAAKpM,SAASuW,OAASnK,KAAK0K,SACxC,EAEJ,CA+BA,SAASC,EAAuBhK,GAC9B,IAAImC,EAAM,GACNlL,EAAI+I,EAAInO,OACZ,MAAMwJ,EAAmB,MAAX2E,EAAI,GAAa,EAAI,EACnC,KAAO/I,GAAKoE,EAAQ,EAAGpE,GAAK,EAC1BkL,EAAO,IAAGnC,EAAIvE,MAAMxE,EAAI,EAAGA,KAAKkL,IAElC,MAAQ,GAAEnC,EAAIvE,MAAM,EAAGxE,KAAKkL,GAC9B,CAYA,SAAS6D,EAAY1L,EAAO4H,EAAK0C,EAAK9H,EAAKxK,EAAQgL,GACjD,GAAIhD,EAAQsK,GAAOtK,EAAQ4H,EAAK,CAC9B,MAAMrC,EAAmB,kBAARqC,EAAmB,IAAM,GAC1C,IAAI+H,EAWJ,MARIA,EAFA3M,EAAa,EACH,IAAR4E,GAAaA,IAAQ+D,OAAO,GACrB,OAAMpG,YAAYA,QAA2B,GAAlBvC,EAAa,KAASuC,IAEjD,SAAQA,QAA2B,GAAlBvC,EAAa,GAAS,IAAIuC,iBACtB,GAAlBvC,EAAa,GAAS,IAAIuC,IAG/B,MAAKqC,IAAMrC,YAAY+E,IAAM/E,IAElC,IAAIyJ,EAAOY,iBAAiB,QAASD,EAAO3P,EACpD,EAtBF,SAAsBwC,EAAKxK,EAAQgL,GACjCgK,EAAehV,EAAQ,eACHmB,IAAhBqJ,EAAIxK,SAAsDmB,IAA7BqJ,EAAIxK,EAASgL,IAC5CmK,EAAYnV,EAAQwK,EAAIjL,QAAUyL,EAAa,GAEnD,CAkBE6M,CAAYrN,EAAKxK,EAAQgL,EAC3B,CAEA,SAASgK,EAAgBhN,EAAOrH,GAC9B,GAAqB,kBAAVqH,EACT,MAAM,IAAIgP,EAAOc,qBAAqBnX,EAAM,SAAUqH,EAE1D,CAEA,SAASmN,EAAanN,EAAOzI,EAAQ0M,GACnC,GAAI3K,KAAKC,MAAMyG,KAAWA,EAExB,MADAgN,EAAehN,EAAOiE,GAChB,IAAI+K,EAAOY,iBAAiB3L,GAAQ,SAAU,aAAcjE,GAGpE,GAAIzI,EAAS,EACX,MAAM,IAAIyX,EAAOe,yBAGnB,MAAM,IAAIf,EAAOY,iBAAiB3L,GAAQ,SACP,MAAKA,EAAO,EAAI,YAAY1M,IAC7ByI,EACpC,CAvFAiP,EAAE,4BACA,SAAUtW,GACR,OAAIA,EACM,GAAEA,gCAGL,gDACT,GAAGV,YACLgX,EAAE,wBACA,SAAUtW,EAAMsK,GACd,MAAQ,QAAOtK,4DAA+DsK,GAChF,GAAGhM,WACLgY,EAAE,oBACA,SAAUhI,EAAK0I,EAAOK,GACpB,IAAIC,EAAO,iBAAgBhJ,sBACvBiJ,EAAWF,EAWf,OAVIpY,OAAOC,UAAUmY,IAAU1W,KAAK6W,IAAIH,GAAS,GAAK,GACpDE,EAAWR,EAAsBlO,OAAOwO,IACd,kBAAVA,IAChBE,EAAW1O,OAAOwO,IACdA,EAAQrE,OAAO,IAAMA,OAAO,KAAOqE,IAAUrE,OAAO,IAAMA,OAAO,QACnEuE,EAAWR,EAAsBQ,IAEnCA,GAAY,KAEdD,GAAQ,eAAcN,eAAmBO,IAClCD,CACT,GAAGhY,YAiEL,MAAMmY,EAAoB,oBAgB1B,SAAS1L,EAAa7B,EAAQ0E,GAE5B,IAAIQ,EADJR,EAAQA,GAAS8I,IAEjB,MAAM9Y,EAASsL,EAAOtL,OACtB,IAAI+Y,EAAgB,KACpB,MAAMjF,EAAQ,GAEd,IAAK,IAAI1O,EAAI,EAAGA,EAAIpF,IAAUoF,EAAG,CAI/B,GAHAoL,EAAYlF,EAAOsE,WAAWxK,GAG1BoL,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAKuI,EAAe,CAElB,GAAIvI,EAAY,MAAQ,EAEjBR,GAAS,IAAM,GAAG8D,EAAMzO,KAAK,IAAM,IAAM,KAC9C,QACF,CAAO,GAAID,EAAI,IAAMpF,EAAQ,EAEtBgQ,GAAS,IAAM,GAAG8D,EAAMzO,KAAK,IAAM,IAAM,KAC9C,QACF,CAGA0T,EAAgBvI,EAEhB,QACF,CAGA,GAAIA,EAAY,MAAQ,EACjBR,GAAS,IAAM,GAAG8D,EAAMzO,KAAK,IAAM,IAAM,KAC9C0T,EAAgBvI,EAChB,QACF,CAGAA,EAAkE,OAArDuI,EAAgB,OAAU,GAAKvI,EAAY,MAC1D,MAAWuI,IAEJ/I,GAAS,IAAM,GAAG8D,EAAMzO,KAAK,IAAM,IAAM,KAMhD,GAHA0T,EAAgB,KAGZvI,EAAY,IAAM,CACpB,IAAKR,GAAS,GAAK,EAAG,MACtB8D,EAAMzO,KAAKmL,EACb,MAAO,GAAIA,EAAY,KAAO,CAC5B,IAAKR,GAAS,GAAK,EAAG,MACtB8D,EAAMzO,KACJmL,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEvB,MAAO,GAAIA,EAAY,MAAS,CAC9B,IAAKR,GAAS,GAAK,EAAG,MACtB8D,EAAMzO,KACJmL,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEvB,KAAO,MAAIA,EAAY,SASrB,MAAM,IAAIhP,MAAM,sBARhB,IAAKwO,GAAS,GAAK,EAAG,MACtB8D,EAAMzO,KACJmL,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAIvB,CACF,CAEA,OAAOsD,CACT,CA2BA,SAAS1G,EAAesC,GACtB,OAAOlF,EAAOwO,YAxHhB,SAAsBtJ,GAMpB,IAFAA,GAFAA,EAAMA,EAAIjM,MAAM,KAAK,IAEXwP,OAAOD,QAAQ6F,EAAmB,KAEpC7Y,OAAS,EAAG,MAAO,GAE3B,KAAO0P,EAAI1P,OAAS,IAAM,GACxB0P,GAAY,IAEd,OAAOA,CACT,CA4G4BuJ,CAAYvJ,GACxC,CAEA,SAASF,EAAYtN,EAAKgX,EAAKzY,EAAQT,GACrC,IAAIoF,EACJ,IAAKA,EAAI,EAAGA,EAAIpF,KACToF,EAAI3E,GAAUyY,EAAIlZ,QAAYoF,GAAKlD,EAAIlC,UADpBoF,EAExB8T,EAAI9T,EAAI3E,GAAUyB,EAAIkD,GAExB,OAAOA,CACT,CAKA,SAAS2G,EAAYM,EAAKK,GACxB,OAAOL,aAAeK,GACZ,MAAPL,GAAkC,MAAnBA,EAAInM,aAA+C,MAAxBmM,EAAInM,YAAYkB,MACzDiL,EAAInM,YAAYkB,OAASsL,EAAKtL,IACpC,CACA,SAASqL,EAAaJ,GAEpB,OAAOA,IAAQA,CACjB,CAIA,MAAMwH,EAAuB,WAC3B,MAAMsF,EAAW,mBACXC,EAAQ,IAAIxT,MAAM,KACxB,IAAK,IAAIR,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAMiU,EAAU,GAAJjU,EACZ,IAAK,IAAI4J,EAAI,EAAGA,EAAI,KAAMA,EACxBoK,EAAMC,EAAMrK,GAAKmK,EAAS/T,GAAK+T,EAASnK,EAE5C,CACA,OAAOoK,CACT,CAV6B,GAa7B,SAAS5D,EAAoB8D,GAC3B,MAAyB,qBAAXlF,OAAyBmF,EAAyBD,CAClE,CAEA,SAASC,IACP,MAAM,IAAI/X,MAAM,uBAClB,0BCzjEA,SAAWgY,EAAQjP,GACjB,aAGA,SAASkP,EAAQtL,EAAKuK,GACpB,IAAKvK,EAAK,MAAM,IAAI3M,MAAMkX,GAAO,mBACnC,CAIA,SAASgB,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAa,EAC5BA,EAAS/Y,UAAY6Y,EAAU7Y,UAC/B4Y,EAAK5Y,UAAY,IAAI+Y,EACrBH,EAAK5Y,UAAUb,YAAcyZ,CAC/B,CAIA,SAASI,EAAIC,EAAQC,EAAMC,GACzB,GAAIH,EAAGI,KAAKH,GACV,OAAOA,EAGTxM,KAAK4M,SAAW,EAChB5M,KAAK6M,MAAQ,KACb7M,KAAKxN,OAAS,EAGdwN,KAAK8M,IAAM,KAEI,OAAXN,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTzM,KAAK+M,MAAMP,GAAU,EAAGC,GAAQ,GAAIC,GAAU,MAElD,CAUA,IAAIta,EATkB,kBAAX4Z,EACTA,EAAOjP,QAAUwP,EAEjBxP,EAAQwP,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGS,SAAW,GAGd,IAEI5a,EADoB,qBAAX6a,QAAmD,qBAAlBA,OAAO7a,OACxC6a,OAAO7a,OAEPN,EAAAA,OAAAA,MAEb,CAAE,MAAO0G,GACT,CA+HA,SAAS0U,EAAepP,EAAQqP,GAC9B,IAAI1K,EAAI3E,EAAOsE,WAAW+K,GAE1B,OAAI1K,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEXwJ,GAAO,EAAO,wBAA0BnO,EAE5C,CAEA,SAASsP,EAActP,EAAQuP,EAAYF,GACzC,IAAIG,EAAIJ,EAAcpP,EAAQqP,GAI9B,OAHIA,EAAQ,GAAKE,IACfC,GAAKJ,EAAcpP,EAAQqP,EAAQ,IAAM,GAEpCG,CACT,CA6CA,SAASC,EAAWrL,EAAKlG,EAAO+D,EAAKuH,GAInC,IAHA,IAAIgG,EAAI,EACJtb,EAAI,EACJ+M,EAAMxK,KAAKsO,IAAIX,EAAI1P,OAAQuN,GACtBnI,EAAIoE,EAAOpE,EAAImH,EAAKnH,IAAK,CAChC,IAAI6K,EAAIP,EAAIE,WAAWxK,GAAK,GAE5B0V,GAAKhG,EAIHtV,EADEyQ,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAENwJ,EAAOxJ,GAAK,GAAKzQ,EAAIsV,EAAK,qBAC1BgG,GAAKtb,CACP,CACA,OAAOsb,CACT,CA2DA,SAASE,EAAM9U,EAAMhE,GACnBgE,EAAKmU,MAAQnY,EAAImY,MACjBnU,EAAKlG,OAASkC,EAAIlC,OAClBkG,EAAKkU,SAAWlY,EAAIkY,SACpBlU,EAAKoU,IAAMpY,EAAIoY,GACjB,CAqCA,GA9TAP,EAAGI,KAAO,SAAec,GACvB,OAAIA,aAAelB,GAIJ,OAARkB,GAA+B,kBAARA,GAC5BA,EAAI/a,YAAYsa,WAAaT,EAAGS,UAAY5U,MAAMC,QAAQoV,EAAIZ,MAClE,EAEAN,EAAGhH,IAAM,SAAcmI,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACT,EAEApB,EAAG1J,IAAM,SAAc6K,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACT,EAEApB,EAAGhZ,UAAUwZ,MAAQ,SAAeP,EAAQC,EAAMC,GAChD,GAAsB,kBAAXF,EACT,OAAOxM,KAAK6N,YAAYrB,EAAQC,EAAMC,GAGxC,GAAsB,kBAAXF,EACT,OAAOxM,KAAK8N,WAAWtB,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETR,EAAOQ,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIzQ,EAAQ,EACM,OAFlBwQ,EAASA,EAAOjQ,WAAWiJ,QAAQ,OAAQ,KAEhC,KACTxJ,IACAgE,KAAK4M,SAAW,GAGd5Q,EAAQwQ,EAAOha,SACJ,KAATia,EACFzM,KAAK+N,UAAUvB,EAAQxQ,EAAO0Q,IAE9B1M,KAAKgO,WAAWxB,EAAQC,EAAMzQ,GACf,OAAX0Q,GACF1M,KAAK8N,WAAW9N,KAAKiO,UAAWxB,EAAMC,IAI9C,EAEAH,EAAGhZ,UAAUsa,YAAc,SAAsBrB,EAAQC,EAAMC,GACzDF,EAAS,IACXxM,KAAK4M,SAAW,EAChBJ,GAAUA,GAERA,EAAS,UACXxM,KAAK6M,MAAQ,CAAU,SAATL,GACdxM,KAAKxN,OAAS,GACLga,EAAS,kBAClBxM,KAAK6M,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,UAEzBxM,KAAKxN,OAAS,IAEdyZ,EAAOO,EAAS,kBAChBxM,KAAK6M,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,SACvB,GAEFxM,KAAKxN,OAAS,GAGD,OAAXka,GAGJ1M,KAAK8N,WAAW9N,KAAKiO,UAAWxB,EAAMC,EACxC,EAEAH,EAAGhZ,UAAUua,WAAa,SAAqBtB,EAAQC,EAAMC,GAG3D,GADAT,EAAgC,kBAAlBO,EAAOha,QACjBga,EAAOha,QAAU,EAGnB,OAFAwN,KAAK6M,MAAQ,CAAC,GACd7M,KAAKxN,OAAS,EACPwN,KAGTA,KAAKxN,OAAS+B,KAAK2Z,KAAK1B,EAAOha,OAAS,GACxCwN,KAAK6M,MAAQ,IAAIzU,MAAM4H,KAAKxN,QAC5B,IAAK,IAAIoF,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAC/BoI,KAAK6M,MAAMjV,GAAK,EAGlB,IAAI4J,EAAG2M,EACHC,EAAM,EACV,GAAe,OAAX1B,EACF,IAAK9U,EAAI4U,EAAOha,OAAS,EAAGgP,EAAI,EAAG5J,GAAK,EAAGA,GAAK,EAC9CuW,EAAI3B,EAAO5U,GAAM4U,EAAO5U,EAAI,IAAM,EAAM4U,EAAO5U,EAAI,IAAM,GACzDoI,KAAK6M,MAAMrL,IAAO2M,GAAKC,EAAO,SAC9BpO,KAAK6M,MAAMrL,EAAI,GAAM2M,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP5M,UAGC,GAAe,OAAXkL,EACT,IAAK9U,EAAI,EAAG4J,EAAI,EAAG5J,EAAI4U,EAAOha,OAAQoF,GAAK,EACzCuW,EAAI3B,EAAO5U,GAAM4U,EAAO5U,EAAI,IAAM,EAAM4U,EAAO5U,EAAI,IAAM,GACzDoI,KAAK6M,MAAMrL,IAAO2M,GAAKC,EAAO,SAC9BpO,KAAK6M,MAAMrL,EAAI,GAAM2M,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP5M,KAIN,OAAOxB,KAAKqO,QACd,EA0BA9B,EAAGhZ,UAAUwa,UAAY,SAAoBvB,EAAQxQ,EAAO0Q,GAE1D1M,KAAKxN,OAAS+B,KAAK2Z,MAAM1B,EAAOha,OAASwJ,GAAS,GAClDgE,KAAK6M,MAAQ,IAAIzU,MAAM4H,KAAKxN,QAC5B,IAAK,IAAIoF,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAC/BoI,KAAK6M,MAAMjV,GAAK,EAIlB,IAGIuW,EAHAC,EAAM,EACN5M,EAAI,EAGR,GAAe,OAAXkL,EACF,IAAK9U,EAAI4U,EAAOha,OAAS,EAAGoF,GAAKoE,EAAOpE,GAAK,EAC3CuW,EAAIf,EAAaZ,EAAQxQ,EAAOpE,IAAMwW,EACtCpO,KAAK6M,MAAMrL,IAAU,SAAJ2M,EACbC,GAAO,IACTA,GAAO,GACP5M,GAAK,EACLxB,KAAK6M,MAAMrL,IAAM2M,IAAM,IAEvBC,GAAO,OAKX,IAAKxW,GADa4U,EAAOha,OAASwJ,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOpE,EAAI4U,EAAOha,OAAQoF,GAAK,EAC1EuW,EAAIf,EAAaZ,EAAQxQ,EAAOpE,IAAMwW,EACtCpO,KAAK6M,MAAMrL,IAAU,SAAJ2M,EACbC,GAAO,IACTA,GAAO,GACP5M,GAAK,EACLxB,KAAK6M,MAAMrL,IAAM2M,IAAM,IAEvBC,GAAO,EAKbpO,KAAKqO,QACP,EA6BA9B,EAAGhZ,UAAUya,WAAa,SAAqBxB,EAAQC,EAAMzQ,GAE3DgE,KAAK6M,MAAQ,CAAC,GACd7M,KAAKxN,OAAS,EAGd,IAAK,IAAI8b,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW9B,EAClE6B,IAEFA,IACAC,EAAWA,EAAU9B,EAAQ,EAO7B,IALA,IAAI+B,EAAQhC,EAAOha,OAASwJ,EACxByS,EAAMD,EAAQF,EACdvO,EAAMxL,KAAKsO,IAAI2L,EAAOA,EAAQC,GAAOzS,EAErCjB,EAAO,EACFnD,EAAIoE,EAAOpE,EAAImI,EAAKnI,GAAK0W,EAChCvT,EAAOwS,EAAUf,EAAQ5U,EAAGA,EAAI0W,EAAS7B,GAEzCzM,KAAK0O,MAAMH,GACPvO,KAAK6M,MAAM,GAAK9R,EAAO,SACzBiF,KAAK6M,MAAM,IAAM9R,EAEjBiF,KAAK2O,OAAO5T,GAIhB,GAAY,IAAR0T,EAAW,CACb,IAAI/Y,EAAM,EAGV,IAFAqF,EAAOwS,EAAUf,EAAQ5U,EAAG4U,EAAOha,OAAQia,GAEtC7U,EAAI,EAAGA,EAAI6W,EAAK7W,IACnBlC,GAAO+W,EAGTzM,KAAK0O,MAAMhZ,GACPsK,KAAK6M,MAAM,GAAK9R,EAAO,SACzBiF,KAAK6M,MAAM,IAAM9R,EAEjBiF,KAAK2O,OAAO5T,EAEhB,CAEAiF,KAAKqO,QACP,EAEA9B,EAAGhZ,UAAUoJ,KAAO,SAAejE,GACjCA,EAAKmU,MAAQ,IAAIzU,MAAM4H,KAAKxN,QAC5B,IAAK,IAAIoF,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAC/Bc,EAAKmU,MAAMjV,GAAKoI,KAAK6M,MAAMjV,GAE7Bc,EAAKlG,OAASwN,KAAKxN,OACnBkG,EAAKkU,SAAW5M,KAAK4M,SACrBlU,EAAKoU,IAAM9M,KAAK8M,GAClB,EASAP,EAAGhZ,UAAUqb,MAAQ,SAAgBlW,GACnC8U,EAAK9U,EAAMsH,KACb,EAEAuM,EAAGhZ,UAAUsb,MAAQ,WACnB,IAAIvB,EAAI,IAAIf,EAAG,MAEf,OADAvM,KAAKrD,KAAK2Q,GACHA,CACT,EAEAf,EAAGhZ,UAAUub,QAAU,SAAkBvP,GACvC,KAAOS,KAAKxN,OAAS+M,GACnBS,KAAK6M,MAAM7M,KAAKxN,UAAY,EAE9B,OAAOwN,IACT,EAGAuM,EAAGhZ,UAAU8a,OAAS,WACpB,KAAOrO,KAAKxN,OAAS,GAAqC,IAAhCwN,KAAK6M,MAAM7M,KAAKxN,OAAS,IACjDwN,KAAKxN,SAEP,OAAOwN,KAAK+O,WACd,EAEAxC,EAAGhZ,UAAUwb,UAAY,WAKvB,OAHoB,IAAhB/O,KAAKxN,QAAkC,IAAlBwN,KAAK6M,MAAM,KAClC7M,KAAK4M,SAAW,GAEX5M,IACT,EAIsB,qBAAX7C,QAAgD,oBAAfA,OAAO6R,IACjD,IACEzC,EAAGhZ,UAAU4J,OAAO6R,IAAI,+BAAiC1J,CAC3D,CAAE,MAAO9M,GACP+T,EAAGhZ,UAAU+R,QAAUA,CACzB,MAEAiH,EAAGhZ,UAAU+R,QAAUA,EAGzB,SAASA,IACP,OAAQtF,KAAK8M,IAAM,UAAY,SAAW9M,KAAKzD,SAAS,IAAM,GAChE,CAgCA,IAAI0S,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9D5C,EAAGhZ,UAAUgJ,SAAW,SAAmBkQ,EAAM2C,GAI/C,IAAIhJ,EACJ,GAHAgJ,EAAoB,EAAVA,GAAe,EAGZ,MAJb3C,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCrG,EAAM,GAGN,IAFA,IAAIgI,EAAM,EACNiB,EAAQ,EACHzX,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAAK,CACpC,IAAIuW,EAAInO,KAAK6M,MAAMjV,GACfmD,GAA+B,UAArBoT,GAAKC,EAAOiB,IAAmB9S,SAAS,IACtD8S,EAASlB,IAAO,GAAKC,EAAQ,UAC7BA,GAAO,IACI,KACTA,GAAO,GACPxW,KAGAwO,EADY,IAAViJ,GAAezX,IAAMoI,KAAKxN,OAAS,EAC/Byc,EAAM,EAAIlU,EAAKvI,QAAUuI,EAAOqL,EAEhCrL,EAAOqL,CAEjB,CAIA,IAHc,IAAViJ,IACFjJ,EAAMiJ,EAAM9S,SAAS,IAAM6J,GAEtBA,EAAI5T,OAAS4c,IAAY,GAC9BhJ,EAAM,IAAMA,EAKd,OAHsB,IAAlBpG,KAAK4M,WACPxG,EAAM,IAAMA,GAEPA,CACT,CAEA,GAAIqG,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI6C,EAAYJ,EAAWzC,GAEvB8C,EAAYJ,EAAW1C,GAC3BrG,EAAM,GACN,IAAI3D,EAAIzC,KAAK6O,QAEb,IADApM,EAAEmK,SAAW,GACLnK,EAAE+M,UAAU,CAClB,IAAIlC,EAAI7K,EAAEgN,MAAMF,GAAWhT,SAASkQ,GAMlCrG,GALF3D,EAAIA,EAAEiN,MAAMH,IAELC,SAGClC,EAAIlH,EAFJ6I,EAAMK,EAAYhC,EAAE9a,QAAU8a,EAAIlH,CAI5C,CAIA,IAHIpG,KAAKwP,WACPpJ,EAAM,IAAMA,GAEPA,EAAI5T,OAAS4c,IAAY,GAC9BhJ,EAAM,IAAMA,EAKd,OAHsB,IAAlBpG,KAAK4M,WACPxG,EAAM,IAAMA,GAEPA,CACT,CAEA6F,GAAO,EAAO,kCAChB,EAEAM,EAAGhZ,UAAUoc,SAAW,WACtB,IAAIxJ,EAAMnG,KAAK6M,MAAM,GASrB,OARoB,IAAhB7M,KAAKxN,OACP2T,GAAuB,SAAhBnG,KAAK6M,MAAM,GACO,IAAhB7M,KAAKxN,QAAkC,IAAlBwN,KAAK6M,MAAM,GAEzC1G,GAAO,iBAAoC,SAAhBnG,KAAK6M,MAAM,GAC7B7M,KAAKxN,OAAS,GACvByZ,GAAO,EAAO,8CAEU,IAAlBjM,KAAK4M,UAAmBzG,EAAMA,CACxC,EAEAoG,EAAGhZ,UAAU0S,OAAS,WACpB,OAAOjG,KAAKzD,SAAS,GAAI,EAC3B,EAEInK,IACFma,EAAGhZ,UAAUqc,SAAW,SAAmBlD,EAAQla,GACjD,OAAOwN,KAAK6P,YAAYzd,EAAQsa,EAAQla,EAC1C,GAGF+Z,EAAGhZ,UAAU0a,QAAU,SAAkBvB,EAAQla,GAC/C,OAAOwN,KAAK6P,YAAYzX,MAAOsU,EAAQla,EACzC,EA2gBA,SAASsd,EAAYC,EAAMtC,EAAKrH,GAC9BA,EAAIwG,SAAWa,EAAIb,SAAWmD,EAAKnD,SACnC,IAAI7N,EAAOgR,EAAKvd,OAASib,EAAIjb,OAAU,EACvC4T,EAAI5T,OAASuM,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAI2F,EAAoB,EAAhBqL,EAAKlD,MAAM,GACf7a,EAAmB,EAAfyb,EAAIZ,MAAM,GACdS,EAAI5I,EAAI1S,EAER6B,EAAS,SAAJyZ,EACL+B,EAAS/B,EAAI,SAAa,EAC9BlH,EAAIyG,MAAM,GAAKhZ,EAEf,IAAK,IAAImc,EAAI,EAAGA,EAAIjR,EAAKiR,IAAK,CAM5B,IAHA,IAAIC,EAASZ,IAAU,GACnBa,EAAgB,SAARb,EACRc,EAAO5b,KAAKsO,IAAImN,EAAGvC,EAAIjb,OAAS,GAC3BgP,EAAIjN,KAAKgR,IAAI,EAAGyK,EAAID,EAAKvd,OAAS,GAAIgP,GAAK2O,EAAM3O,IAAK,CAC7D,IAAI5J,EAAKoY,EAAIxO,EAAK,EAIlByO,IADA3C,GAFA5I,EAAoB,EAAhBqL,EAAKlD,MAAMjV,KACf5F,EAAmB,EAAfyb,EAAIZ,MAAMrL,IACF0O,GACG,SAAa,EAC5BA,EAAY,SAAJ5C,CACV,CACAlH,EAAIyG,MAAMmD,GAAa,EAARE,EACfb,EAAiB,EAATY,CACV,CAOA,OANc,IAAVZ,EACFjJ,EAAIyG,MAAMmD,GAAa,EAARX,EAEfjJ,EAAI5T,SAGC4T,EAAIiI,QACb,CAziBA9B,EAAGhZ,UAAUsc,YAAc,SAAsBO,EAAW1D,EAAQla,GAClEwN,KAAKqO,SAEL,IAAIpQ,EAAa+B,KAAK/B,aAClBoS,EAAY7d,GAAU+B,KAAKgR,IAAI,EAAGtH,GACtCgO,EAAOhO,GAAcoS,EAAW,yCAChCpE,EAAOoE,EAAY,EAAG,+BAEtB,IAAIvN,EAfS,SAAmBsN,EAAW7Q,GAC3C,OAAI6Q,EAAUvS,YACLuS,EAAUvS,YAAY0B,GAExB,IAAI6Q,EAAU7Q,EACvB,CAUY+Q,CAASF,EAAWC,GAG9B,OADArQ,KAAK,gBADoB,OAAX0M,EAAkB,KAAO,OACR5J,EAAK7E,GAC7B6E,CACT,EAEAyJ,EAAGhZ,UAAUgd,eAAiB,SAAyBzN,EAAK7E,GAI1D,IAHA,IAAIuS,EAAW,EACXnB,EAAQ,EAEHzX,EAAI,EAAGmB,EAAQ,EAAGnB,EAAIoI,KAAKxN,OAAQoF,IAAK,CAC/C,IAAImD,EAAQiF,KAAK6M,MAAMjV,IAAMmB,EAASsW,EAEtCvM,EAAI0N,KAAqB,IAAPzV,EACdyV,EAAW1N,EAAItQ,SACjBsQ,EAAI0N,KAAezV,GAAQ,EAAK,KAE9ByV,EAAW1N,EAAItQ,SACjBsQ,EAAI0N,KAAezV,GAAQ,GAAM,KAGrB,IAAVhC,GACEyX,EAAW1N,EAAItQ,SACjBsQ,EAAI0N,KAAezV,GAAQ,GAAM,KAEnCsU,EAAQ,EACRtW,EAAQ,IAERsW,EAAQtU,IAAS,GACjBhC,GAAS,EAEb,CAEA,GAAIyX,EAAW1N,EAAItQ,OAGjB,IAFAsQ,EAAI0N,KAAcnB,EAEXmB,EAAW1N,EAAItQ,QACpBsQ,EAAI0N,KAAc,CAGxB,EAEAjE,EAAGhZ,UAAUkd,eAAiB,SAAyB3N,EAAK7E,GAI1D,IAHA,IAAIuS,EAAW1N,EAAItQ,OAAS,EACxB6c,EAAQ,EAEHzX,EAAI,EAAGmB,EAAQ,EAAGnB,EAAIoI,KAAKxN,OAAQoF,IAAK,CAC/C,IAAImD,EAAQiF,KAAK6M,MAAMjV,IAAMmB,EAASsW,EAEtCvM,EAAI0N,KAAqB,IAAPzV,EACdyV,GAAY,IACd1N,EAAI0N,KAAezV,GAAQ,EAAK,KAE9ByV,GAAY,IACd1N,EAAI0N,KAAezV,GAAQ,GAAM,KAGrB,IAAVhC,GACEyX,GAAY,IACd1N,EAAI0N,KAAezV,GAAQ,GAAM,KAEnCsU,EAAQ,EACRtW,EAAQ,IAERsW,EAAQtU,IAAS,GACjBhC,GAAS,EAEb,CAEA,GAAIyX,GAAY,EAGd,IAFA1N,EAAI0N,KAAcnB,EAEXmB,GAAY,GACjB1N,EAAI0N,KAAc,CAGxB,EAEIjc,KAAKmc,MACPnE,EAAGhZ,UAAUod,WAAa,SAAqBxC,GAC7C,OAAO,GAAK5Z,KAAKmc,MAAMvC,EACzB,EAEA5B,EAAGhZ,UAAUod,WAAa,SAAqBxC,GAC7C,IAAIyC,EAAIzC,EACJb,EAAI,EAiBR,OAhBIsD,GAAK,OACPtD,GAAK,GACLsD,KAAO,IAELA,GAAK,KACPtD,GAAK,EACLsD,KAAO,GAELA,GAAK,IACPtD,GAAK,EACLsD,KAAO,GAELA,GAAK,IACPtD,GAAK,EACLsD,KAAO,GAEFtD,EAAIsD,CACb,EAGFrE,EAAGhZ,UAAUsd,UAAY,SAAoB1C,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIyC,EAAIzC,EACJb,EAAI,EAoBR,OAnBqB,KAAZ,KAAJsD,KACHtD,GAAK,GACLsD,KAAO,IAEU,KAAV,IAAJA,KACHtD,GAAK,EACLsD,KAAO,GAES,KAAT,GAAJA,KACHtD,GAAK,EACLsD,KAAO,GAES,KAAT,EAAJA,KACHtD,GAAK,EACLsD,KAAO,GAES,KAAT,EAAJA,IACHtD,IAEKA,CACT,EAGAf,EAAGhZ,UAAUud,UAAY,WACvB,IAAI3C,EAAInO,KAAK6M,MAAM7M,KAAKxN,OAAS,GAC7BkQ,EAAK1C,KAAK2Q,WAAWxC,GACzB,OAA2B,IAAnBnO,KAAKxN,OAAS,GAAUkQ,CAClC,EAgBA6J,EAAGhZ,UAAUwd,SAAW,WACtB,GAAI/Q,KAAKwP,SAAU,OAAO,EAG1B,IADA,IAAIlC,EAAI,EACC1V,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAAK,CACpC,IAAI5F,EAAIgO,KAAK6Q,UAAU7Q,KAAK6M,MAAMjV,IAElC,GADA0V,GAAKtb,EACK,KAANA,EAAU,KAChB,CACA,OAAOsb,CACT,EAEAf,EAAGhZ,UAAU0K,WAAa,WACxB,OAAO1J,KAAK2Z,KAAKlO,KAAK8Q,YAAc,EACtC,EAEAvE,EAAGhZ,UAAUyd,OAAS,SAAiBC,GACrC,OAAsB,IAAlBjR,KAAK4M,SACA5M,KAAKoL,MAAM8F,MAAMD,GAAOE,MAAM,GAEhCnR,KAAK6O,OACd,EAEAtC,EAAGhZ,UAAU6d,SAAW,SAAmBH,GACzC,OAAIjR,KAAKqR,MAAMJ,EAAQ,GACdjR,KAAKsR,KAAKL,GAAOE,MAAM,GAAGI,OAE5BvR,KAAK6O,OACd,EAEAtC,EAAGhZ,UAAUie,MAAQ,WACnB,OAAyB,IAAlBxR,KAAK4M,QACd,EAGAL,EAAGhZ,UAAUke,IAAM,WACjB,OAAOzR,KAAK6O,QAAQ0C,MACtB,EAEAhF,EAAGhZ,UAAUge,KAAO,WAKlB,OAJKvR,KAAKwP,WACRxP,KAAK4M,UAAY,GAGZ5M,IACT,EAGAuM,EAAGhZ,UAAUme,KAAO,SAAejE,GACjC,KAAOzN,KAAKxN,OAASib,EAAIjb,QACvBwN,KAAK6M,MAAM7M,KAAKxN,UAAY,EAG9B,IAAK,IAAIoF,EAAI,EAAGA,EAAI6V,EAAIjb,OAAQoF,IAC9BoI,KAAK6M,MAAMjV,GAAKoI,KAAK6M,MAAMjV,GAAK6V,EAAIZ,MAAMjV,GAG5C,OAAOoI,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUoe,IAAM,SAAclE,GAE/B,OADAxB,EAA0C,KAAlCjM,KAAK4M,SAAWa,EAAIb,WACrB5M,KAAK0R,KAAKjE,EACnB,EAGAlB,EAAGhZ,UAAUqe,GAAK,SAAanE,GAC7B,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQ8C,IAAIlE,GAC/CA,EAAIoB,QAAQ8C,IAAI3R,KACzB,EAEAuM,EAAGhZ,UAAUse,IAAM,SAAcpE,GAC/B,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQ6C,KAAKjE,GAChDA,EAAIoB,QAAQ6C,KAAK1R,KAC1B,EAGAuM,EAAGhZ,UAAUue,MAAQ,SAAgBrE,GAEnC,IAAIzb,EAEFA,EADEgO,KAAKxN,OAASib,EAAIjb,OAChBib,EAEAzN,KAGN,IAAK,IAAIpI,EAAI,EAAGA,EAAI5F,EAAEQ,OAAQoF,IAC5BoI,KAAK6M,MAAMjV,GAAKoI,KAAK6M,MAAMjV,GAAK6V,EAAIZ,MAAMjV,GAK5C,OAFAoI,KAAKxN,OAASR,EAAEQ,OAETwN,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUwe,KAAO,SAAetE,GAEjC,OADAxB,EAA0C,KAAlCjM,KAAK4M,SAAWa,EAAIb,WACrB5M,KAAK8R,MAAMrE,EACpB,EAGAlB,EAAGhZ,UAAUye,IAAM,SAAcvE,GAC/B,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQkD,KAAKtE,GAChDA,EAAIoB,QAAQkD,KAAK/R,KAC1B,EAEAuM,EAAGhZ,UAAU0e,KAAO,SAAexE,GACjC,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQiD,MAAMrE,GACjDA,EAAIoB,QAAQiD,MAAM9R,KAC3B,EAGAuM,EAAGhZ,UAAU2e,MAAQ,SAAgBzE,GAEnC,IAAI/I,EACA1S,EACAgO,KAAKxN,OAASib,EAAIjb,QACpBkS,EAAI1E,KACJhO,EAAIyb,IAEJ/I,EAAI+I,EACJzb,EAAIgO,MAGN,IAAK,IAAIpI,EAAI,EAAGA,EAAI5F,EAAEQ,OAAQoF,IAC5BoI,KAAK6M,MAAMjV,GAAK8M,EAAEmI,MAAMjV,GAAK5F,EAAE6a,MAAMjV,GAGvC,GAAIoI,OAAS0E,EACX,KAAO9M,EAAI8M,EAAElS,OAAQoF,IACnBoI,KAAK6M,MAAMjV,GAAK8M,EAAEmI,MAAMjV,GAM5B,OAFAoI,KAAKxN,OAASkS,EAAElS,OAETwN,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAU4e,KAAO,SAAe1E,GAEjC,OADAxB,EAA0C,KAAlCjM,KAAK4M,SAAWa,EAAIb,WACrB5M,KAAKkS,MAAMzE,EACpB,EAGAlB,EAAGhZ,UAAU6e,IAAM,SAAc3E,GAC/B,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQsD,KAAK1E,GAChDA,EAAIoB,QAAQsD,KAAKnS,KAC1B,EAEAuM,EAAGhZ,UAAU8e,KAAO,SAAe5E,GACjC,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQqD,MAAMzE,GACjDA,EAAIoB,QAAQqD,MAAMlS,KAC3B,EAGAuM,EAAGhZ,UAAU2d,MAAQ,SAAgBD,GACnChF,EAAwB,kBAAVgF,GAAsBA,GAAS,GAE7C,IAAIqB,EAAsC,EAAxB/d,KAAK2Z,KAAK+C,EAAQ,IAChCsB,EAAWtB,EAAQ,GAGvBjR,KAAK8O,QAAQwD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAI1a,EAAI,EAAGA,EAAI0a,EAAa1a,IAC/BoI,KAAK6M,MAAMjV,GAAsB,UAAhBoI,KAAK6M,MAAMjV,GAS9B,OALI2a,EAAW,IACbvS,KAAK6M,MAAMjV,IAAMoI,KAAK6M,MAAMjV,GAAM,UAAc,GAAK2a,GAIhDvS,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAU+d,KAAO,SAAeL,GACjC,OAAOjR,KAAK6O,QAAQqC,MAAMD,EAC5B,EAGA1E,EAAGhZ,UAAUif,KAAO,SAAeC,EAAK9R,GACtCsL,EAAsB,kBAARwG,GAAoBA,GAAO,GAEzC,IAAIrE,EAAOqE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARAzS,KAAK8O,QAAQV,EAAM,GAGjBpO,KAAK6M,MAAMuB,GADTzN,EACgBX,KAAK6M,MAAMuB,GAAQ,GAAKsE,EAExB1S,KAAK6M,MAAMuB,KAAS,GAAKsE,GAGtC1S,KAAKqO,QACd,EAGA9B,EAAGhZ,UAAUof,KAAO,SAAelF,GACjC,IAAIH,EAkBA5I,EAAG1S,EAfP,GAAsB,IAAlBgO,KAAK4M,UAAmC,IAAjBa,EAAIb,SAI7B,OAHA5M,KAAK4M,SAAW,EAChBU,EAAItN,KAAK4S,KAAKnF,GACdzN,KAAK4M,UAAY,EACV5M,KAAK+O,YAGP,GAAsB,IAAlB/O,KAAK4M,UAAmC,IAAjBa,EAAIb,SAIpC,OAHAa,EAAIb,SAAW,EACfU,EAAItN,KAAK4S,KAAKnF,GACdA,EAAIb,SAAW,EACRU,EAAEyB,YAKP/O,KAAKxN,OAASib,EAAIjb,QACpBkS,EAAI1E,KACJhO,EAAIyb,IAEJ/I,EAAI+I,EACJzb,EAAIgO,MAIN,IADA,IAAIqP,EAAQ,EACHzX,EAAI,EAAGA,EAAI5F,EAAEQ,OAAQoF,IAC5B0V,GAAkB,EAAb5I,EAAEmI,MAAMjV,KAAwB,EAAb5F,EAAE6a,MAAMjV,IAAUyX,EAC1CrP,KAAK6M,MAAMjV,GAAS,SAAJ0V,EAChB+B,EAAQ/B,IAAM,GAEhB,KAAiB,IAAV+B,GAAezX,EAAI8M,EAAElS,OAAQoF,IAClC0V,GAAkB,EAAb5I,EAAEmI,MAAMjV,IAAUyX,EACvBrP,KAAK6M,MAAMjV,GAAS,SAAJ0V,EAChB+B,EAAQ/B,IAAM,GAIhB,GADAtN,KAAKxN,OAASkS,EAAElS,OACF,IAAV6c,EACFrP,KAAK6M,MAAM7M,KAAKxN,QAAU6c,EAC1BrP,KAAKxN,cAEA,GAAIkS,IAAM1E,KACf,KAAOpI,EAAI8M,EAAElS,OAAQoF,IACnBoI,KAAK6M,MAAMjV,GAAK8M,EAAEmI,MAAMjV,GAI5B,OAAOoI,IACT,EAGAuM,EAAGhZ,UAAUsf,IAAM,SAAcpF,GAC/B,IAAI3K,EACJ,OAAqB,IAAjB2K,EAAIb,UAAoC,IAAlB5M,KAAK4M,UAC7Ba,EAAIb,SAAW,EACf9J,EAAM9C,KAAKwJ,IAAIiE,GACfA,EAAIb,UAAY,EACT9J,GACmB,IAAjB2K,EAAIb,UAAoC,IAAlB5M,KAAK4M,UACpC5M,KAAK4M,SAAW,EAChB9J,EAAM2K,EAAIjE,IAAIxJ,MACdA,KAAK4M,SAAW,EACT9J,GAGL9C,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQ8D,KAAKlF,GAEhDA,EAAIoB,QAAQ8D,KAAK3S,KAC1B,EAGAuM,EAAGhZ,UAAUqf,KAAO,SAAenF,GAEjC,GAAqB,IAAjBA,EAAIb,SAAgB,CACtBa,EAAIb,SAAW,EACf,IAAIU,EAAItN,KAAK2S,KAAKlF,GAElB,OADAA,EAAIb,SAAW,EACRU,EAAEyB,WAGX,CAAO,GAAsB,IAAlB/O,KAAK4M,SAId,OAHA5M,KAAK4M,SAAW,EAChB5M,KAAK2S,KAAKlF,GACVzN,KAAK4M,SAAW,EACT5M,KAAK+O,YAId,IAWIrK,EAAG1S,EAXH4b,EAAM5N,KAAK4N,IAAIH,GAGnB,GAAY,IAARG,EAIF,OAHA5N,KAAK4M,SAAW,EAChB5M,KAAKxN,OAAS,EACdwN,KAAK6M,MAAM,GAAK,EACT7M,KAKL4N,EAAM,GACRlJ,EAAI1E,KACJhO,EAAIyb,IAEJ/I,EAAI+I,EACJzb,EAAIgO,MAIN,IADA,IAAIqP,EAAQ,EACHzX,EAAI,EAAGA,EAAI5F,EAAEQ,OAAQoF,IAE5ByX,GADA/B,GAAkB,EAAb5I,EAAEmI,MAAMjV,KAAwB,EAAb5F,EAAE6a,MAAMjV,IAAUyX,IAC7B,GACbrP,KAAK6M,MAAMjV,GAAS,SAAJ0V,EAElB,KAAiB,IAAV+B,GAAezX,EAAI8M,EAAElS,OAAQoF,IAElCyX,GADA/B,GAAkB,EAAb5I,EAAEmI,MAAMjV,IAAUyX,IACV,GACbrP,KAAK6M,MAAMjV,GAAS,SAAJ0V,EAIlB,GAAc,IAAV+B,GAAezX,EAAI8M,EAAElS,QAAUkS,IAAM1E,KACvC,KAAOpI,EAAI8M,EAAElS,OAAQoF,IACnBoI,KAAK6M,MAAMjV,GAAK8M,EAAEmI,MAAMjV,GAU5B,OANAoI,KAAKxN,OAAS+B,KAAKgR,IAAIvF,KAAKxN,OAAQoF,GAEhC8M,IAAM1E,OACRA,KAAK4M,SAAW,GAGX5M,KAAKqO,QACd,EAGA9B,EAAGhZ,UAAUiW,IAAM,SAAciE,GAC/B,OAAOzN,KAAK6O,QAAQ+D,KAAKnF,EAC3B,EA8CA,IAAIqF,EAAc,SAAsB/C,EAAMtC,EAAKrH,GACjD,IAIIvS,EACAkf,EACArQ,EANAgC,EAAIqL,EAAKlD,MACT7a,EAAIyb,EAAIZ,MACRmG,EAAI5M,EAAIyG,MACRpK,EAAI,EAIJwQ,EAAY,EAAPvO,EAAE,GACPwO,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1O,EAAE,GACP2O,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7O,EAAE,GACP8O,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhP,EAAE,GACPiP,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnP,EAAE,GACPoP,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtP,EAAE,GACPuP,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzP,EAAE,GACP0P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5P,EAAE,GACP6P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/P,EAAE,GACPgQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlQ,EAAE,GACPmQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/iB,EAAE,GACPgjB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPljB,EAAE,GACPmjB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrjB,EAAE,GACPsjB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPxjB,EAAE,GACPyjB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP3jB,EAAE,GACP4jB,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP9jB,EAAE,GACP+jB,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPjkB,EAAE,GACPkkB,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPpkB,EAAE,GACPqkB,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPvkB,EAAE,GACPwkB,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP1kB,EAAE,GACP2kB,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBtQ,EAAIwG,SAAWmD,EAAKnD,SAAWa,EAAIb,SACnCxG,EAAI5T,OAAS,GAMb,IAAIqkB,IAAQpU,GAJZ5O,EAAKU,KAAKuiB,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCjC,GADAA,EAAMxe,KAAKuiB,KAAK5D,EAAK+B,IACR1gB,KAAKuiB,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDvS,IAFAC,EAAKnO,KAAKuiB,KAAK3D,EAAK8B,KAEPlC,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAENhjB,EAAKU,KAAKuiB,KAAKzD,EAAK2B,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKzD,EAAK4B,IACR1gB,KAAKuiB,KAAKxD,EAAK0B,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQtU,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKkC,GAAQ,GACvB7gB,KAAKuiB,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrD1S,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKiC,GAAQ,IAErBrC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAENljB,EAAKU,KAAKuiB,KAAKtD,EAAKwB,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKtD,EAAKyB,IACR1gB,KAAKuiB,KAAKrD,EAAKuB,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKrD,EAAKwB,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAK8B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAK+B,GAAQ,GACvB7gB,KAAKuiB,KAAKxD,EAAK6B,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQvU,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKqC,GAAQ,GACvBhhB,KAAKuiB,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrD7S,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKoC,GAAQ,IAErBxC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENnjB,EAAKU,KAAKuiB,KAAKnD,EAAKqB,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKnD,EAAKsB,IACR1gB,KAAKuiB,KAAKlD,EAAKoB,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKlD,EAAKqB,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAK2B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAK4B,GAAQ,GACvB7gB,KAAKuiB,KAAKrD,EAAK0B,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAK2B,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKiC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKkC,GAAQ,GACvBhhB,KAAKuiB,KAAKxD,EAAKgC,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQxU,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKwC,GAAQ,GACvBnhB,KAAKuiB,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrDhT,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKuC,GAAQ,IAErB3C,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAENpjB,EAAKU,KAAKuiB,KAAKhD,EAAKkB,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKhD,EAAKmB,IACR1gB,KAAKuiB,KAAK/C,EAAKiB,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAK/C,EAAKkB,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKwB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKyB,GAAQ,GACvB7gB,KAAKuiB,KAAKlD,EAAKuB,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKwB,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAK8B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAK+B,GAAQ,GACvBhhB,KAAKuiB,KAAKrD,EAAK6B,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAK8B,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKoC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKqC,GAAQ,GACvBnhB,KAAKuiB,KAAKxD,EAAKmC,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQzU,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAK2C,IAAQ,GACvBthB,KAAKuiB,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrDnT,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAK0C,IAAQ,IAErB9C,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAENrjB,EAAKU,KAAKuiB,KAAK7C,EAAKe,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAK7C,EAAKgB,IACR1gB,KAAKuiB,KAAK5C,EAAKc,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAK5C,EAAKe,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKqB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKsB,GAAQ,GACvB7gB,KAAKuiB,KAAK/C,EAAKoB,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKqB,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAK2B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAK4B,GAAQ,GACvBhhB,KAAKuiB,KAAKlD,EAAK0B,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAK2B,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKiC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKkC,GAAQ,GACvBnhB,KAAKuiB,KAAKrD,EAAKgC,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKiC,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKuC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKwC,IAAQ,GACvBthB,KAAKuiB,KAAKxD,EAAKsC,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQ1U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAK8C,IAAQ,GACvBzhB,KAAKuiB,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDtT,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAK6C,IAAQ,IAErBjD,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAENtjB,EAAKU,KAAKuiB,KAAK1C,EAAKY,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAK1C,EAAKa,IACR1gB,KAAKuiB,KAAKzC,EAAKW,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKzC,EAAKY,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKkB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKmB,GAAQ,GACvB7gB,KAAKuiB,KAAK5C,EAAKiB,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKkB,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKwB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKyB,GAAQ,GACvBhhB,KAAKuiB,KAAK/C,EAAKuB,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKwB,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAK8B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAK+B,GAAQ,GACvBnhB,KAAKuiB,KAAKlD,EAAK6B,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAK8B,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKoC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKqC,IAAQ,GACvBthB,KAAKuiB,KAAKrD,EAAKmC,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKoC,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAK0C,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAK2C,IAAQ,GACvBzhB,KAAKuiB,KAAKxD,EAAKyC,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQ3U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKiD,IAAQ,GACvB5hB,KAAKuiB,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrDzT,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAENvjB,EAAKU,KAAKuiB,KAAKvC,EAAKS,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKvC,EAAKU,IACR1gB,KAAKuiB,KAAKtC,EAAKQ,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKtC,EAAKS,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKe,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKgB,GAAQ,GACvB7gB,KAAKuiB,KAAKzC,EAAKc,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKe,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKqB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKsB,GAAQ,GACvBhhB,KAAKuiB,KAAK5C,EAAKoB,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKqB,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAK2B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAK4B,GAAQ,GACvBnhB,KAAKuiB,KAAK/C,EAAK0B,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAK2B,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKiC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKkC,IAAQ,GACvBthB,KAAKuiB,KAAKlD,EAAKgC,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKiC,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKuC,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKwC,IAAQ,GACvBzhB,KAAKuiB,KAAKrD,EAAKsC,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKuC,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAK6C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAK8C,IAAQ,GACvB5hB,KAAKuiB,KAAKxD,EAAK4C,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQ5U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKoD,IAAQ,GACvB/hB,KAAKuiB,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrD5T,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKmD,IAAQ,IAErBvD,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAENxjB,EAAKU,KAAKuiB,KAAKpC,EAAKM,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKpC,EAAKO,IACR1gB,KAAKuiB,KAAKnC,EAAKK,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKnC,EAAKM,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKY,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKa,GAAQ,GACvB7gB,KAAKuiB,KAAKtC,EAAKW,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKY,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKkB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKmB,GAAQ,GACvBhhB,KAAKuiB,KAAKzC,EAAKiB,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKkB,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKwB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKyB,GAAQ,GACvBnhB,KAAKuiB,KAAK5C,EAAKuB,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKwB,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAK8B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAK+B,IAAQ,GACvBthB,KAAKuiB,KAAK/C,EAAK6B,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAK8B,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKoC,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKqC,IAAQ,GACvBzhB,KAAKuiB,KAAKlD,EAAKmC,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKoC,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAK0C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAK2C,IAAQ,GACvB5hB,KAAKuiB,KAAKrD,EAAKyC,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAK0C,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKgD,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKiD,IAAQ,GACvB/hB,KAAKuiB,KAAKxD,EAAK+C,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQ7U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKuD,IAAQ,GACvBliB,KAAKuiB,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrD/T,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKsD,IAAQ,IAErB1D,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAENzjB,EAAKU,KAAKuiB,KAAKjC,EAAKG,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKI,IACR1gB,KAAKuiB,KAAKhC,EAAKE,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKhC,EAAKG,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKS,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKU,GAAQ,GACvB7gB,KAAKuiB,KAAKnC,EAAKQ,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKS,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKe,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKgB,GAAQ,GACvBhhB,KAAKuiB,KAAKtC,EAAKc,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKe,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKqB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKsB,GAAQ,GACvBnhB,KAAKuiB,KAAKzC,EAAKoB,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKqB,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAK2B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAK4B,IAAQ,GACvBthB,KAAKuiB,KAAK5C,EAAK0B,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAK2B,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKiC,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKkC,IAAQ,GACvBzhB,KAAKuiB,KAAK/C,EAAKgC,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKiC,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKuC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKwC,IAAQ,GACvB5hB,KAAKuiB,KAAKlD,EAAKsC,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKuC,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAK6C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAK8C,IAAQ,GACvB/hB,KAAKuiB,KAAKrD,EAAK4C,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAK6C,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKmD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKoD,IAAQ,GACvBliB,KAAKuiB,KAAKxD,EAAKkD,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQ9U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAK0D,IAAQ,GACvBriB,KAAKuiB,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKyD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAEN1jB,EAAKU,KAAKuiB,KAAKjC,EAAKM,GAEpBpC,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKO,IACR7gB,KAAKuiB,KAAKhC,EAAKK,GAAQ,EACpCzS,EAAKnO,KAAKuiB,KAAKhC,EAAKM,GACpBvhB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKY,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKa,GAAQ,GACvBhhB,KAAKuiB,KAAKnC,EAAKW,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKY,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKkB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKmB,GAAQ,GACvBnhB,KAAKuiB,KAAKtC,EAAKiB,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKkB,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKwB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKyB,IAAQ,GACvBthB,KAAKuiB,KAAKzC,EAAKuB,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKwB,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAK8B,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAK+B,IAAQ,GACvBzhB,KAAKuiB,KAAK5C,EAAK6B,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAK8B,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKoC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKqC,IAAQ,GACvB5hB,KAAKuiB,KAAK/C,EAAKmC,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKoC,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAK0C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAK2C,IAAQ,GACvB/hB,KAAKuiB,KAAKlD,EAAKyC,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAK0C,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKgD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKiD,IAAQ,GACvBliB,KAAKuiB,KAAKrD,EAAK+C,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAAS/U,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKuD,IAAQ,GACvBriB,KAAKuiB,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKsD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEP3jB,EAAKU,KAAKuiB,KAAKjC,EAAKS,GAEpBvC,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKU,IACRhhB,KAAKuiB,KAAKhC,EAAKQ,GAAQ,EACpC5S,EAAKnO,KAAKuiB,KAAKhC,EAAKS,GACpB1hB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKe,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKgB,GAAQ,GACvBnhB,KAAKuiB,KAAKnC,EAAKc,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKe,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKqB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKsB,IAAQ,GACvBthB,KAAKuiB,KAAKtC,EAAKoB,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKqB,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAK2B,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAK4B,IAAQ,GACvBzhB,KAAKuiB,KAAKzC,EAAK0B,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAK2B,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKiC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKkC,IAAQ,GACvB5hB,KAAKuiB,KAAK5C,EAAKgC,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKiC,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKuC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKwC,IAAQ,GACvB/hB,KAAKuiB,KAAK/C,EAAKsC,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKuC,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAK6C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAK8C,IAAQ,GACvBliB,KAAKuiB,KAAKlD,EAAK4C,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAAShV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKoD,IAAQ,GACvBriB,KAAKuiB,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKmD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEP5jB,EAAKU,KAAKuiB,KAAKjC,EAAKY,GAEpB1C,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKa,IACRnhB,KAAKuiB,KAAKhC,EAAKW,GAAQ,EACpC/S,EAAKnO,KAAKuiB,KAAKhC,EAAKY,GACpB7hB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKkB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKmB,IAAQ,GACvBthB,KAAKuiB,KAAKnC,EAAKiB,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKkB,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKwB,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKyB,IAAQ,GACvBzhB,KAAKuiB,KAAKtC,EAAKuB,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKwB,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAK8B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAK+B,IAAQ,GACvB5hB,KAAKuiB,KAAKzC,EAAK6B,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAK8B,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKoC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKqC,IAAQ,GACvB/hB,KAAKuiB,KAAK5C,EAAKmC,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKoC,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAK0C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAK2C,IAAQ,GACvBliB,KAAKuiB,KAAK/C,EAAKyC,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAASjV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKiD,IAAQ,GACvBriB,KAAKuiB,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKgD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEP7jB,EAAKU,KAAKuiB,KAAKjC,EAAKe,GAEpB7C,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKgB,KACRthB,KAAKuiB,KAAKhC,EAAKc,GAAQ,EACpClT,EAAKnO,KAAKuiB,KAAKhC,EAAKe,IACpBhiB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKqB,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKsB,IAAQ,GACvBzhB,KAAKuiB,KAAKnC,EAAKoB,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKqB,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAK2B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAK4B,IAAQ,GACvB5hB,KAAKuiB,KAAKtC,EAAK0B,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAK2B,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKiC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKkC,IAAQ,GACvB/hB,KAAKuiB,KAAKzC,EAAKgC,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKiC,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKuC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKwC,IAAQ,GACvBliB,KAAKuiB,KAAK5C,EAAKsC,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAASlV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAK8C,IAAQ,GACvBriB,KAAKuiB,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAK6C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEP9jB,EAAKU,KAAKuiB,KAAKjC,EAAKkB,IAEpBhD,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKmB,KACRzhB,KAAKuiB,KAAKhC,EAAKiB,IAAQ,EACpCrT,EAAKnO,KAAKuiB,KAAKhC,EAAKkB,IACpBniB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKwB,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKyB,IAAQ,GACvB5hB,KAAKuiB,KAAKnC,EAAKuB,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKwB,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAK8B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAK+B,IAAQ,GACvB/hB,KAAKuiB,KAAKtC,EAAK6B,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAK8B,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKoC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKqC,IAAQ,GACvBliB,KAAKuiB,KAAKzC,EAAKmC,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAASnV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAK2C,IAAQ,GACvBriB,KAAKuiB,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAK0C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEP/jB,EAAKU,KAAKuiB,KAAKjC,EAAKqB,IAEpBnD,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKsB,KACR5hB,KAAKuiB,KAAKhC,EAAKoB,IAAQ,EACpCxT,EAAKnO,KAAKuiB,KAAKhC,EAAKqB,IACpBtiB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAK2B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAK4B,IAAQ,GACvB/hB,KAAKuiB,KAAKnC,EAAK0B,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAK2B,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKiC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKkC,IAAQ,GACvBliB,KAAKuiB,KAAKtC,EAAKgC,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAASpV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKwC,IAAQ,GACvBriB,KAAKuiB,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKuC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPhkB,EAAKU,KAAKuiB,KAAKjC,EAAKwB,IAEpBtD,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKyB,KACR/hB,KAAKuiB,KAAKhC,EAAKuB,IAAQ,EACpC3T,EAAKnO,KAAKuiB,KAAKhC,EAAKwB,IACpBziB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAK8B,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAK+B,IAAQ,GACvBliB,KAAKuiB,KAAKnC,EAAK6B,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAASrV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKqC,IAAQ,GACvBriB,KAAKuiB,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKoC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEPjkB,EAAKU,KAAKuiB,KAAKjC,EAAK2B,IAEpBzD,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAK4B,KACRliB,KAAKuiB,KAAKhC,EAAK0B,IAAQ,EACpC9T,EAAKnO,KAAKuiB,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAAStV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKkC,IAAQ,GACvBriB,KAAKuiB,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKiC,IAAQ,IAErB7D,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASvV,GAJb5O,EAAKU,KAAKuiB,KAAKjC,EAAK8B,KAIG,KAAa,MAFpC5D,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAK+B,KACRriB,KAAKuiB,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBAlU,IAFAC,EAAKnO,KAAKuiB,KAAKhC,EAAK8B,MAEP7D,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK6D,GACP7D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANvV,IACFuQ,EAAE,IAAMvQ,EACR2D,EAAI5T,UAEC4T,CACT,EAOA,SAAS6R,EAAUlI,EAAMtC,EAAKrH,GAC5BA,EAAIwG,SAAWa,EAAIb,SAAWmD,EAAKnD,SACnCxG,EAAI5T,OAASud,EAAKvd,OAASib,EAAIjb,OAI/B,IAFA,IAAI6c,EAAQ,EACR6I,EAAU,EACLlI,EAAI,EAAGA,EAAI5J,EAAI5T,OAAS,EAAGwd,IAAK,CAGvC,IAAIC,EAASiI,EACbA,EAAU,EAGV,IAFA,IAAIhI,EAAgB,SAARb,EACRc,EAAO5b,KAAKsO,IAAImN,EAAGvC,EAAIjb,OAAS,GAC3BgP,EAAIjN,KAAKgR,IAAI,EAAGyK,EAAID,EAAKvd,OAAS,GAAIgP,GAAK2O,EAAM3O,IAAK,CAC7D,IAAI5J,EAAIoY,EAAIxO,EAGR8L,GAFoB,EAAhByC,EAAKlD,MAAMjV,KACI,EAAf6V,EAAIZ,MAAMrL,IAGd3N,EAAS,SAAJyZ,EAGT4C,EAAa,UADbrc,EAAMA,EAAKqc,EAAS,GAIpBgI,IAFAjI,GAHAA,EAAUA,GAAW3C,EAAI,SAAa,GAAM,IAGxBzZ,IAAO,IAAO,KAEZ,GACtBoc,GAAU,QACZ,CACA7J,EAAIyG,MAAMmD,GAAKE,EACfb,EAAQY,EACRA,EAASiI,CACX,CAOA,OANc,IAAV7I,EACFjJ,EAAIyG,MAAMmD,GAAKX,EAEfjJ,EAAI5T,SAGC4T,EAAIiI,QACb,CAEA,SAAS8J,EAAYpI,EAAMtC,EAAKrH,GAI9B,OAAO6R,EAASlI,EAAMtC,EAAKrH,EAC7B,CAqBA,SAASgS,EAAMzT,EAAGC,GAChB5E,KAAK2E,EAAIA,EACT3E,KAAK4E,EAAIA,CACX,CA1EKrQ,KAAKuiB,OACRhE,EAAchD,GAmDhBvD,EAAGhZ,UAAU8kB,MAAQ,SAAgB5K,EAAKrH,GACxC,IACIrH,EAAMiB,KAAKxN,OAASib,EAAIjb,OAW5B,OAVoB,KAAhBwN,KAAKxN,QAAgC,KAAfib,EAAIjb,OACtBsgB,EAAY9S,KAAMyN,EAAKrH,GACpBrH,EAAM,GACT+Q,EAAW9P,KAAMyN,EAAKrH,GACnBrH,EAAM,KACTkZ,EAASjY,KAAMyN,EAAKrH,GAEpB+R,EAAWnY,KAAMyN,EAAKrH,EAIhC,EAUAgS,EAAK7kB,UAAU+kB,QAAU,SAAkBC,GAGzC,IAFA,IAAI3H,EAAI,IAAIxY,MAAMmgB,GACdC,EAAIjM,EAAGhZ,UAAUod,WAAW4H,GAAK,EAC5B3gB,EAAI,EAAGA,EAAI2gB,EAAG3gB,IACrBgZ,EAAEhZ,GAAKoI,KAAKyY,OAAO7gB,EAAG4gB,EAAGD,GAG3B,OAAO3H,CACT,EAGAwH,EAAK7kB,UAAUklB,OAAS,SAAiB9T,EAAG6T,EAAGD,GAC7C,GAAU,IAAN5T,GAAWA,IAAM4T,EAAI,EAAG,OAAO5T,EAGnC,IADA,IAAI+T,EAAK,EACA9gB,EAAI,EAAGA,EAAI4gB,EAAG5gB,IACrB8gB,IAAW,EAAJ/T,IAAW6T,EAAI5gB,EAAI,EAC1B+M,IAAM,EAGR,OAAO+T,CACT,EAIAN,EAAK7kB,UAAUolB,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GACpE,IAAK,IAAI3gB,EAAI,EAAGA,EAAI2gB,EAAG3gB,IACrBmhB,EAAKnhB,GAAKihB,EAAID,EAAIhhB,IAClBohB,EAAKphB,GAAKkhB,EAAIF,EAAIhhB,GAEtB,EAEAwgB,EAAK7kB,UAAU0lB,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMT,EAAGK,GACtE5Y,KAAK2Y,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GAExC,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAGW,IAAM,EAM3B,IALA,IAAIV,EAAIU,GAAK,EAETC,EAAQ5kB,KAAK6kB,IAAI,EAAI7kB,KAAK8kB,GAAKb,GAC/Bc,EAAQ/kB,KAAKglB,IAAI,EAAIhlB,KAAK8kB,GAAKb,GAE1BgB,EAAI,EAAGA,EAAIjB,EAAGiB,GAAKhB,EAI1B,IAHA,IAAIiB,EAASN,EACTO,EAASJ,EAEJ9X,EAAI,EAAGA,EAAI0X,EAAG1X,IAAK,CAC1B,IAAImY,EAAKZ,EAAKS,EAAIhY,GACdoY,EAAKZ,EAAKQ,EAAIhY,GAEdqY,EAAKd,EAAKS,EAAIhY,EAAI0X,GAClBY,EAAKd,EAAKQ,EAAIhY,EAAI0X,GAElBa,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELhB,EAAKS,EAAIhY,GAAKmY,EAAKE,EACnBb,EAAKQ,EAAIhY,GAAKoY,EAAKE,EAEnBf,EAAKS,EAAIhY,EAAI0X,GAAKS,EAAKE,EACvBb,EAAKQ,EAAIhY,EAAI0X,GAAKU,EAAKE,EAGnBtY,IAAMgX,IACRuB,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,EAEb,CAGN,EAEA3B,EAAK7kB,UAAUymB,YAAc,SAAsBxZ,EAAGC,GACpD,IAAI8X,EAAqB,EAAjBhkB,KAAKgR,IAAI9E,EAAGD,GAChByZ,EAAU,EAAJ1B,EACN3gB,EAAI,EACR,IAAK2gB,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B3gB,IAGF,OAAO,GAAKA,EAAI,EAAIqiB,CACtB,EAEA7B,EAAK7kB,UAAU2mB,UAAY,SAAoBrB,EAAKC,EAAKP,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI3gB,EAAI,EAAGA,EAAI2gB,EAAI,EAAG3gB,IAAK,CAC9B,IAAIgZ,EAAIiI,EAAIjhB,GAEZihB,EAAIjhB,GAAKihB,EAAIN,EAAI3gB,EAAI,GACrBihB,EAAIN,EAAI3gB,EAAI,GAAKgZ,EAEjBA,EAAIkI,EAAIlhB,GAERkhB,EAAIlhB,IAAMkhB,EAAIP,EAAI3gB,EAAI,GACtBkhB,EAAIP,EAAI3gB,EAAI,IAAMgZ,CACpB,CACF,EAEAwH,EAAK7kB,UAAU4mB,aAAe,SAAuBC,EAAI7B,GAEvD,IADA,IAAIlJ,EAAQ,EACHzX,EAAI,EAAGA,EAAI2gB,EAAI,EAAG3gB,IAAK,CAC9B,IAAIuW,EAAoC,KAAhC5Z,KAAK8lB,MAAMD,EAAG,EAAIxiB,EAAI,GAAK2gB,GACjChkB,KAAK8lB,MAAMD,EAAG,EAAIxiB,GAAK2gB,GACvBlJ,EAEF+K,EAAGxiB,GAAS,SAAJuW,EAGNkB,EADElB,EAAI,SACE,EAEAA,EAAI,SAAY,CAE5B,CAEA,OAAOiM,CACT,EAEAhC,EAAK7kB,UAAU+mB,WAAa,SAAqBF,EAAIrb,EAAK8Z,EAAKN,GAE7D,IADA,IAAIlJ,EAAQ,EACHzX,EAAI,EAAGA,EAAImH,EAAKnH,IACvByX,GAAyB,EAAR+K,EAAGxiB,GAEpBihB,EAAI,EAAIjhB,GAAa,KAARyX,EAAgBA,KAAkB,GAC/CwJ,EAAI,EAAIjhB,EAAI,GAAa,KAARyX,EAAgBA,KAAkB,GAIrD,IAAKzX,EAAI,EAAImH,EAAKnH,EAAI2gB,IAAK3gB,EACzBihB,EAAIjhB,GAAK,EAGXqU,EAAiB,IAAVoD,GACPpD,EAA6B,MAAb,KAARoD,GACV,EAEA+I,EAAK7kB,UAAUgnB,KAAO,SAAehC,GAEnC,IADA,IAAIiC,EAAK,IAAIpiB,MAAMmgB,GACV3gB,EAAI,EAAGA,EAAI2gB,EAAG3gB,IACrB4iB,EAAG5iB,GAAK,EAGV,OAAO4iB,CACT,EAEApC,EAAK7kB,UAAUknB,KAAO,SAAe9V,EAAGC,EAAGwB,GACzC,IAAImS,EAAI,EAAIvY,KAAKga,YAAYrV,EAAEnS,OAAQoS,EAAEpS,QAErComB,EAAM5Y,KAAKsY,QAAQC,GAEnBmC,EAAI1a,KAAKua,KAAKhC,GAEdM,EAAM,IAAIzgB,MAAMmgB,GAChBoC,EAAO,IAAIviB,MAAMmgB,GACjBqC,EAAO,IAAIxiB,MAAMmgB,GAEjBsC,EAAO,IAAIziB,MAAMmgB,GACjBuC,EAAQ,IAAI1iB,MAAMmgB,GAClBwC,EAAQ,IAAI3iB,MAAMmgB,GAElByC,EAAO5U,EAAIyG,MACfmO,EAAKxoB,OAAS+lB,EAEdvY,KAAKsa,WAAW3V,EAAEkI,MAAOlI,EAAEnS,OAAQqmB,EAAKN,GACxCvY,KAAKsa,WAAW1V,EAAEiI,MAAOjI,EAAEpS,OAAQqoB,EAAMtC,GAEzCvY,KAAKiZ,UAAUJ,EAAK6B,EAAGC,EAAMC,EAAMrC,EAAGK,GACtC5Y,KAAKiZ,UAAU4B,EAAMH,EAAGI,EAAOC,EAAOxC,EAAGK,GAEzC,IAAK,IAAIhhB,EAAI,EAAGA,EAAI2gB,EAAG3gB,IAAK,CAC1B,IAAImiB,EAAKY,EAAK/iB,GAAKkjB,EAAMljB,GAAKgjB,EAAKhjB,GAAKmjB,EAAMnjB,GAC9CgjB,EAAKhjB,GAAK+iB,EAAK/iB,GAAKmjB,EAAMnjB,GAAKgjB,EAAKhjB,GAAKkjB,EAAMljB,GAC/C+iB,EAAK/iB,GAAKmiB,CACZ,CASA,OAPA/Z,KAAKka,UAAUS,EAAMC,EAAMrC,GAC3BvY,KAAKiZ,UAAU0B,EAAMC,EAAMI,EAAMN,EAAGnC,EAAGK,GACvC5Y,KAAKka,UAAUc,EAAMN,EAAGnC,GACxBvY,KAAKma,aAAaa,EAAMzC,GAExBnS,EAAIwG,SAAWjI,EAAEiI,SAAWhI,EAAEgI,SAC9BxG,EAAI5T,OAASmS,EAAEnS,OAASoS,EAAEpS,OACnB4T,EAAIiI,QACb,EAGA9B,EAAGhZ,UAAU+T,IAAM,SAAcmG,GAC/B,IAAIrH,EAAM,IAAImG,EAAG,MAEjB,OADAnG,EAAIyG,MAAQ,IAAIzU,MAAM4H,KAAKxN,OAASib,EAAIjb,QACjCwN,KAAKqY,MAAM5K,EAAKrH,EACzB,EAGAmG,EAAGhZ,UAAU0nB,KAAO,SAAexN,GACjC,IAAIrH,EAAM,IAAImG,EAAG,MAEjB,OADAnG,EAAIyG,MAAQ,IAAIzU,MAAM4H,KAAKxN,OAASib,EAAIjb,QACjC2lB,EAAWnY,KAAMyN,EAAKrH,EAC/B,EAGAmG,EAAGhZ,UAAUujB,KAAO,SAAerJ,GACjC,OAAOzN,KAAK6O,QAAQwJ,MAAM5K,EAAKzN,KACjC,EAEAuM,EAAGhZ,UAAUmb,MAAQ,SAAgBjB,GACnC,IAAIyN,EAAWzN,EAAM,EACjByN,IAAUzN,GAAOA,GAErBxB,EAAsB,kBAARwB,GACdxB,EAAOwB,EAAM,UAIb,IADA,IAAI4B,EAAQ,EACHzX,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAAK,CACpC,IAAIuW,GAAqB,EAAhBnO,KAAK6M,MAAMjV,IAAU6V,EAC1B5Z,GAAU,SAAJsa,IAA0B,SAARkB,GAC5BA,IAAU,GACVA,GAAUlB,EAAI,SAAa,EAE3BkB,GAASxb,IAAO,GAChBmM,KAAK6M,MAAMjV,GAAU,SAAL/D,CAClB,CAOA,OALc,IAAVwb,IACFrP,KAAK6M,MAAMjV,GAAKyX,EAChBrP,KAAKxN,UAGA0oB,EAAWlb,KAAKuR,OAASvR,IAClC,EAEAuM,EAAGhZ,UAAU4nB,KAAO,SAAe1N,GACjC,OAAOzN,KAAK6O,QAAQH,MAAMjB,EAC5B,EAGAlB,EAAGhZ,UAAU6nB,IAAM,WACjB,OAAOpb,KAAKsH,IAAItH,KAClB,EAGAuM,EAAGhZ,UAAU8nB,KAAO,WAClB,OAAOrb,KAAK8W,KAAK9W,KAAK6O,QACxB,EAGAtC,EAAGhZ,UAAUmC,IAAM,SAAc+X,GAC/B,IAAIU,EA7xCN,SAAqBV,GAGnB,IAFA,IAAIU,EAAI,IAAI/V,MAAMqV,EAAIqD,aAEb2B,EAAM,EAAGA,EAAMtE,EAAE3b,OAAQigB,IAAO,CACvC,IAAIrE,EAAOqE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBtE,EAAEsE,GAAQhF,EAAIZ,MAAMuB,KAASsE,EAAQ,CACvC,CAEA,OAAOvE,CACT,CAkxCUmN,CAAW7N,GACnB,GAAiB,IAAbU,EAAE3b,OAAc,OAAO,IAAI+Z,EAAG,GAIlC,IADA,IAAIzJ,EAAM9C,KACDpI,EAAI,EAAGA,EAAIuW,EAAE3b,QACP,IAAT2b,EAAEvW,GADsBA,IAAKkL,EAAMA,EAAIsY,OAI7C,KAAMxjB,EAAIuW,EAAE3b,OACV,IAAK,IAAI+oB,EAAIzY,EAAIsY,MAAOxjB,EAAIuW,EAAE3b,OAAQoF,IAAK2jB,EAAIA,EAAEH,MAClC,IAATjN,EAAEvW,KAENkL,EAAMA,EAAIwE,IAAIiU,IAIlB,OAAOzY,CACT,EAGAyJ,EAAGhZ,UAAUioB,OAAS,SAAiBngB,GACrC4Q,EAAuB,kBAAT5Q,GAAqBA,GAAQ,GAC3C,IAGIzD,EAHA0V,EAAIjS,EAAO,GACX6d,GAAK7d,EAAOiS,GAAK,GACjBmO,EAAa,WAAe,GAAKnO,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAI+B,EAAQ,EAEZ,IAAKzX,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAAK,CAChC,IAAI8jB,EAAW1b,KAAK6M,MAAMjV,GAAK6jB,EAC3BhZ,GAAsB,EAAhBzC,KAAK6M,MAAMjV,IAAU8jB,GAAapO,EAC5CtN,KAAK6M,MAAMjV,GAAK6K,EAAI4M,EACpBA,EAAQqM,IAAc,GAAKpO,CAC7B,CAEI+B,IACFrP,KAAK6M,MAAMjV,GAAKyX,EAChBrP,KAAKxN,SAET,CAEA,GAAU,IAAN0mB,EAAS,CACX,IAAKthB,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,EAAGA,IAChCoI,KAAK6M,MAAMjV,EAAIshB,GAAKlZ,KAAK6M,MAAMjV,GAGjC,IAAKA,EAAI,EAAGA,EAAIshB,EAAGthB,IACjBoI,KAAK6M,MAAMjV,GAAK,EAGlBoI,KAAKxN,QAAU0mB,CACjB,CAEA,OAAOlZ,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUooB,MAAQ,SAAgBtgB,GAGnC,OADA4Q,EAAyB,IAAlBjM,KAAK4M,UACL5M,KAAKwb,OAAOngB,EACrB,EAKAkR,EAAGhZ,UAAUqoB,OAAS,SAAiBvgB,EAAMwgB,EAAMC,GAEjD,IAAIC,EADJ9P,EAAuB,kBAAT5Q,GAAqBA,GAAQ,GAGzC0gB,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIvO,EAAIjS,EAAO,GACX6d,EAAI3kB,KAAKsO,KAAKxH,EAAOiS,GAAK,GAAItN,KAAKxN,QACnCwpB,EAAO,SAAc,WAAc1O,GAAMA,EACzC2O,EAAcH,EAMlB,GAJAC,GAAK7C,EACL6C,EAAIxnB,KAAKgR,IAAI,EAAGwW,GAGZE,EAAa,CACf,IAAK,IAAIrkB,EAAI,EAAGA,EAAIshB,EAAGthB,IACrBqkB,EAAYpP,MAAMjV,GAAKoI,KAAK6M,MAAMjV,GAEpCqkB,EAAYzpB,OAAS0mB,CACvB,CAEA,GAAU,IAANA,QAEG,GAAIlZ,KAAKxN,OAAS0mB,EAEvB,IADAlZ,KAAKxN,QAAU0mB,EACVthB,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAC3BoI,KAAK6M,MAAMjV,GAAKoI,KAAK6M,MAAMjV,EAAIshB,QAGjClZ,KAAK6M,MAAM,GAAK,EAChB7M,KAAKxN,OAAS,EAGhB,IAAI6c,EAAQ,EACZ,IAAKzX,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,IAAgB,IAAVyX,GAAezX,GAAKmkB,GAAInkB,IAAK,CAChE,IAAImD,EAAuB,EAAhBiF,KAAK6M,MAAMjV,GACtBoI,KAAK6M,MAAMjV,GAAMyX,GAAU,GAAK/B,EAAOvS,IAASuS,EAChD+B,EAAQtU,EAAOihB,CACjB,CAYA,OATIC,GAAyB,IAAV5M,IACjB4M,EAAYpP,MAAMoP,EAAYzpB,UAAY6c,GAGxB,IAAhBrP,KAAKxN,SACPwN,KAAK6M,MAAM,GAAK,EAChB7M,KAAKxN,OAAS,GAGTwN,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAU2oB,MAAQ,SAAgB7gB,EAAMwgB,EAAMC,GAG/C,OADA7P,EAAyB,IAAlBjM,KAAK4M,UACL5M,KAAK4b,OAAOvgB,EAAMwgB,EAAMC,EACjC,EAGAvP,EAAGhZ,UAAU4oB,KAAO,SAAe9gB,GACjC,OAAO2E,KAAK6O,QAAQ8M,MAAMtgB,EAC5B,EAEAkR,EAAGhZ,UAAU6oB,MAAQ,SAAgB/gB,GACnC,OAAO2E,KAAK6O,QAAQ2M,OAAOngB,EAC7B,EAGAkR,EAAGhZ,UAAU8oB,KAAO,SAAehhB,GACjC,OAAO2E,KAAK6O,QAAQqN,MAAM7gB,EAC5B,EAEAkR,EAAGhZ,UAAU+oB,MAAQ,SAAgBjhB,GACnC,OAAO2E,KAAK6O,QAAQ+M,OAAOvgB,EAC7B,EAGAkR,EAAGhZ,UAAU8d,MAAQ,SAAgBoB,GACnCxG,EAAsB,kBAARwG,GAAoBA,GAAO,GACzC,IAAInF,EAAImF,EAAM,GACVyG,GAAKzG,EAAMnF,GAAK,GAChBiO,EAAI,GAAKjO,EAGb,QAAItN,KAAKxN,QAAU0mB,OAGXlZ,KAAK6M,MAAMqM,GAELqC,EAChB,EAGAhP,EAAGhZ,UAAUgpB,OAAS,SAAiBlhB,GACrC4Q,EAAuB,kBAAT5Q,GAAqBA,GAAQ,GAC3C,IAAIiS,EAAIjS,EAAO,GACX6d,GAAK7d,EAAOiS,GAAK,GAIrB,GAFArB,EAAyB,IAAlBjM,KAAK4M,SAAgB,2CAExB5M,KAAKxN,QAAU0mB,EACjB,OAAOlZ,KAQT,GALU,IAANsN,GACF4L,IAEFlZ,KAAKxN,OAAS+B,KAAKsO,IAAIqW,EAAGlZ,KAAKxN,QAErB,IAAN8a,EAAS,CACX,IAAI0O,EAAO,SAAc,WAAc1O,GAAMA,EAC7CtN,KAAK6M,MAAM7M,KAAKxN,OAAS,IAAMwpB,CACjC,CAEA,OAAOhc,KAAKqO,QACd,EAGA9B,EAAGhZ,UAAUipB,MAAQ,SAAgBnhB,GACnC,OAAO2E,KAAK6O,QAAQ0N,OAAOlhB,EAC7B,EAGAkR,EAAGhZ,UAAU4d,MAAQ,SAAgB1D,GAGnC,OAFAxB,EAAsB,kBAARwB,GACdxB,EAAOwB,EAAM,UACTA,EAAM,EAAUzN,KAAKyc,OAAOhP,GAGV,IAAlBzN,KAAK4M,SACa,IAAhB5M,KAAKxN,SAAiC,EAAhBwN,KAAK6M,MAAM,KAAWY,GAC9CzN,KAAK6M,MAAM,GAAKY,GAAuB,EAAhBzN,KAAK6M,MAAM,IAClC7M,KAAK4M,SAAW,EACT5M,OAGTA,KAAK4M,SAAW,EAChB5M,KAAKyc,MAAMhP,GACXzN,KAAK4M,SAAW,EACT5M,MAIFA,KAAK2O,OAAOlB,EACrB,EAEAlB,EAAGhZ,UAAUob,OAAS,SAAiBlB,GACrCzN,KAAK6M,MAAM,IAAMY,EAGjB,IAAK,IAAI7V,EAAI,EAAGA,EAAIoI,KAAKxN,QAAUwN,KAAK6M,MAAMjV,IAAM,SAAWA,IAC7DoI,KAAK6M,MAAMjV,IAAM,SACbA,IAAMoI,KAAKxN,OAAS,EACtBwN,KAAK6M,MAAMjV,EAAI,GAAK,EAEpBoI,KAAK6M,MAAMjV,EAAI,KAKnB,OAFAoI,KAAKxN,OAAS+B,KAAKgR,IAAIvF,KAAKxN,OAAQoF,EAAI,GAEjCoI,IACT,EAGAuM,EAAGhZ,UAAUkpB,MAAQ,SAAgBhP,GAGnC,GAFAxB,EAAsB,kBAARwB,GACdxB,EAAOwB,EAAM,UACTA,EAAM,EAAG,OAAOzN,KAAKmR,OAAO1D,GAEhC,GAAsB,IAAlBzN,KAAK4M,SAIP,OAHA5M,KAAK4M,SAAW,EAChB5M,KAAKmR,MAAM1D,GACXzN,KAAK4M,SAAW,EACT5M,KAKT,GAFAA,KAAK6M,MAAM,IAAMY,EAEG,IAAhBzN,KAAKxN,QAAgBwN,KAAK6M,MAAM,GAAK,EACvC7M,KAAK6M,MAAM,IAAM7M,KAAK6M,MAAM,GAC5B7M,KAAK4M,SAAW,OAGhB,IAAK,IAAIhV,EAAI,EAAGA,EAAIoI,KAAKxN,QAAUwN,KAAK6M,MAAMjV,GAAK,EAAGA,IACpDoI,KAAK6M,MAAMjV,IAAM,SACjBoI,KAAK6M,MAAMjV,EAAI,IAAM,EAIzB,OAAOoI,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUmpB,KAAO,SAAejP,GACjC,OAAOzN,KAAK6O,QAAQsC,MAAM1D,EAC5B,EAEAlB,EAAGhZ,UAAUopB,KAAO,SAAelP,GACjC,OAAOzN,KAAK6O,QAAQ4N,MAAMhP,EAC5B,EAEAlB,EAAGhZ,UAAUqpB,KAAO,WAGlB,OAFA5c,KAAK4M,SAAW,EAET5M,IACT,EAEAuM,EAAGhZ,UAAU6X,IAAM,WACjB,OAAOpL,KAAK6O,QAAQ+N,MACtB,EAEArQ,EAAGhZ,UAAUspB,aAAe,SAAuBpP,EAAKnG,EAAKvO,GAC3D,IACInB,EAIAuW,EALApP,EAAM0O,EAAIjb,OAASuG,EAGvBiH,KAAK8O,QAAQ/P,GAGb,IAAIsQ,EAAQ,EACZ,IAAKzX,EAAI,EAAGA,EAAI6V,EAAIjb,OAAQoF,IAAK,CAC/BuW,GAA6B,EAAxBnO,KAAK6M,MAAMjV,EAAImB,IAAcsW,EAClC,IAAI1B,GAAwB,EAAfF,EAAIZ,MAAMjV,IAAU0P,EAEjC+H,IADAlB,GAAa,SAARR,IACS,KAAQA,EAAQ,SAAa,GAC3C3N,KAAK6M,MAAMjV,EAAImB,GAAa,SAAJoV,CAC1B,CACA,KAAOvW,EAAIoI,KAAKxN,OAASuG,EAAOnB,IAE9ByX,GADAlB,GAA6B,EAAxBnO,KAAK6M,MAAMjV,EAAImB,IAAcsW,IACrB,GACbrP,KAAK6M,MAAMjV,EAAImB,GAAa,SAAJoV,EAG1B,GAAc,IAAVkB,EAAa,OAAOrP,KAAKqO,SAK7B,IAFApC,GAAkB,IAAXoD,GACPA,EAAQ,EACHzX,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAE3ByX,GADAlB,IAAsB,EAAhBnO,KAAK6M,MAAMjV,IAAUyX,IACd,GACbrP,KAAK6M,MAAMjV,GAAS,SAAJuW,EAIlB,OAFAnO,KAAK4M,SAAW,EAET5M,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUupB,SAAW,SAAmBrP,EAAKsP,GAC9C,IAAIhkB,GAAQiH,KAAKxN,OAASib,EAAIjb,QAE1BkS,EAAI1E,KAAK6O,QACT7c,EAAIyb,EAGJuP,EAA8B,EAAxBhrB,EAAE6a,MAAM7a,EAAEQ,OAAS,GAGf,KADduG,EAAQ,GADMiH,KAAK2Q,WAAWqM,MAG5BhrB,EAAIA,EAAEoqB,MAAMrjB,GACZ2L,EAAE8W,OAAOziB,GACTikB,EAA8B,EAAxBhrB,EAAE6a,MAAM7a,EAAEQ,OAAS,IAI3B,IACI+oB,EADA9a,EAAIiE,EAAElS,OAASR,EAAEQ,OAGrB,GAAa,QAATuqB,EAAgB,EAClBxB,EAAI,IAAIhP,EAAG,OACT/Z,OAASiO,EAAI,EACf8a,EAAE1O,MAAQ,IAAIzU,MAAMmjB,EAAE/oB,QACtB,IAAK,IAAIoF,EAAI,EAAGA,EAAI2jB,EAAE/oB,OAAQoF,IAC5B2jB,EAAE1O,MAAMjV,GAAK,CAEjB,CAEA,IAAIqlB,EAAOvY,EAAEmK,QAAQgO,aAAa7qB,EAAG,EAAGyO,GAClB,IAAlBwc,EAAKrQ,WACPlI,EAAIuY,EACA1B,IACFA,EAAE1O,MAAMpM,GAAK,IAIjB,IAAK,IAAIe,EAAIf,EAAI,EAAGe,GAAK,EAAGA,IAAK,CAC/B,IAAI0b,EAAmC,UAAL,EAAxBxY,EAAEmI,MAAM7a,EAAEQ,OAASgP,KACE,EAA5BkD,EAAEmI,MAAM7a,EAAEQ,OAASgP,EAAI,IAO1B,IAHA0b,EAAK3oB,KAAKsO,IAAKqa,EAAKF,EAAO,EAAG,UAE9BtY,EAAEmY,aAAa7qB,EAAGkrB,EAAI1b,GACA,IAAfkD,EAAEkI,UACPsQ,IACAxY,EAAEkI,SAAW,EACblI,EAAEmY,aAAa7qB,EAAG,EAAGwP,GAChBkD,EAAE8K,WACL9K,EAAEkI,UAAY,GAGd2O,IACFA,EAAE1O,MAAMrL,GAAK0b,EAEjB,CAWA,OAVI3B,GACFA,EAAElN,SAEJ3J,EAAE2J,SAGW,QAAT0O,GAA4B,IAAVhkB,GACpB2L,EAAEkX,OAAO7iB,GAGJ,CACLokB,IAAK5B,GAAK,KACV9M,IAAK/J,EAET,EAMA6H,EAAGhZ,UAAU6pB,OAAS,SAAiB3P,EAAKsP,EAAMM,GAGhD,OAFApR,GAAQwB,EAAI+B,UAERxP,KAAKwP,SACA,CACL2N,IAAK,IAAI5Q,EAAG,GACZkC,IAAK,IAAIlC,EAAG,IAKM,IAAlBvM,KAAK4M,UAAmC,IAAjBa,EAAIb,UAC7B9J,EAAM9C,KAAKyR,MAAM2L,OAAO3P,EAAKsP,GAEhB,QAATA,IACFI,EAAMra,EAAIqa,IAAI1L,OAGH,QAATsL,IACFtO,EAAM3L,EAAI2L,IAAIgD,MACV4L,GAA6B,IAAjB5O,EAAI7B,UAClB6B,EAAIkE,KAAKlF,IAIN,CACL0P,IAAKA,EACL1O,IAAKA,IAIa,IAAlBzO,KAAK4M,UAAmC,IAAjBa,EAAIb,UAC7B9J,EAAM9C,KAAKod,OAAO3P,EAAIgE,MAAOsL,GAEhB,QAATA,IACFI,EAAMra,EAAIqa,IAAI1L,OAGT,CACL0L,IAAKA,EACL1O,IAAK3L,EAAI2L,MAI0B,KAAlCzO,KAAK4M,SAAWa,EAAIb,WACvB9J,EAAM9C,KAAKyR,MAAM2L,OAAO3P,EAAIgE,MAAOsL,GAEtB,QAATA,IACFtO,EAAM3L,EAAI2L,IAAIgD,MACV4L,GAA6B,IAAjB5O,EAAI7B,UAClB6B,EAAImE,KAAKnF,IAIN,CACL0P,IAAKra,EAAIqa,IACT1O,IAAKA,IAOLhB,EAAIjb,OAASwN,KAAKxN,QAAUwN,KAAK4N,IAAIH,GAAO,EACvC,CACL0P,IAAK,IAAI5Q,EAAG,GACZkC,IAAKzO,MAKU,IAAfyN,EAAIjb,OACO,QAATuqB,EACK,CACLI,IAAKnd,KAAKsd,KAAK7P,EAAIZ,MAAM,IACzB4B,IAAK,MAII,QAATsO,EACK,CACLI,IAAK,KACL1O,IAAK,IAAIlC,EAAGvM,KAAKyP,MAAMhC,EAAIZ,MAAM,MAI9B,CACLsQ,IAAKnd,KAAKsd,KAAK7P,EAAIZ,MAAM,IACzB4B,IAAK,IAAIlC,EAAGvM,KAAKyP,MAAMhC,EAAIZ,MAAM,MAI9B7M,KAAK8c,SAASrP,EAAKsP,GAlF1B,IAAII,EAAK1O,EAAK3L,CAmFhB,EAGAyJ,EAAGhZ,UAAU4pB,IAAM,SAAc1P,GAC/B,OAAOzN,KAAKod,OAAO3P,EAAK,OAAO,GAAO0P,GACxC,EAGA5Q,EAAGhZ,UAAUkb,IAAM,SAAchB,GAC/B,OAAOzN,KAAKod,OAAO3P,EAAK,OAAO,GAAOgB,GACxC,EAEAlC,EAAGhZ,UAAUgqB,KAAO,SAAe9P,GACjC,OAAOzN,KAAKod,OAAO3P,EAAK,OAAO,GAAMgB,GACvC,EAGAlC,EAAGhZ,UAAUiqB,SAAW,SAAmB/P,GACzC,IAAIgQ,EAAKzd,KAAKod,OAAO3P,GAGrB,GAAIgQ,EAAGhP,IAAIe,SAAU,OAAOiO,EAAGN,IAE/B,IAAI1O,EAA0B,IAApBgP,EAAGN,IAAIvQ,SAAiB6Q,EAAGhP,IAAImE,KAAKnF,GAAOgQ,EAAGhP,IAEpDiP,EAAOjQ,EAAI6O,MAAM,GACjBqB,EAAKlQ,EAAImQ,MAAM,GACfhQ,EAAMa,EAAIb,IAAI8P,GAGlB,OAAI9P,EAAM,GAAa,IAAP+P,GAAoB,IAAR/P,EAAmB6P,EAAGN,IAGvB,IAApBM,EAAGN,IAAIvQ,SAAiB6Q,EAAGN,IAAIV,MAAM,GAAKgB,EAAGN,IAAIhM,MAAM,EAChE,EAEA5E,EAAGhZ,UAAUkc,MAAQ,SAAgBhC,GACnC,IAAIyN,EAAWzN,EAAM,EACjByN,IAAUzN,GAAOA,GAErBxB,EAAOwB,GAAO,UAId,IAHA,IAAI+L,GAAK,GAAK,IAAM/L,EAEhBnV,EAAM,EACDV,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,EAAGA,IACpCU,GAAOkhB,EAAIlhB,GAAuB,EAAhB0H,KAAK6M,MAAMjV,KAAW6V,EAG1C,OAAOyN,GAAY5iB,EAAMA,CAC3B,EAGAiU,EAAGhZ,UAAUsqB,KAAO,SAAepQ,GACjC,OAAOzN,KAAKyP,MAAMhC,EACpB,EAGAlB,EAAGhZ,UAAUmc,MAAQ,SAAgBjC,GACnC,IAAIyN,EAAWzN,EAAM,EACjByN,IAAUzN,GAAOA,GAErBxB,EAAOwB,GAAO,UAGd,IADA,IAAI4B,EAAQ,EACHzX,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,EAAGA,IAAK,CACzC,IAAIuW,GAAqB,EAAhBnO,KAAK6M,MAAMjV,IAAkB,SAARyX,EAC9BrP,KAAK6M,MAAMjV,GAAMuW,EAAIV,EAAO,EAC5B4B,EAAQlB,EAAIV,CACd,CAGA,OADAzN,KAAKqO,SACE6M,EAAWlb,KAAKuR,OAASvR,IAClC,EAEAuM,EAAGhZ,UAAU+pB,KAAO,SAAe7P,GACjC,OAAOzN,KAAK6O,QAAQa,MAAMjC,EAC5B,EAEAlB,EAAGhZ,UAAUuqB,KAAO,SAAetE,GACjCvN,EAAsB,IAAfuN,EAAE5M,UACTX,GAAQuN,EAAEhK,UAEV,IAAI7K,EAAI3E,KACJ4E,EAAI4U,EAAE3K,QAGRlK,EADiB,IAAfA,EAAEiI,SACAjI,EAAE4Y,KAAK/D,GAEP7U,EAAEkK,QAaR,IATA,IAAIkP,EAAI,IAAIxR,EAAG,GACXyR,EAAI,IAAIzR,EAAG,GAGX0R,EAAI,IAAI1R,EAAG,GACX2R,EAAI,IAAI3R,EAAG,GAEX4R,EAAI,EAEDxZ,EAAEyZ,UAAYxZ,EAAEwZ,UACrBzZ,EAAEiX,OAAO,GACThX,EAAEgX,OAAO,KACPuC,EAMJ,IAHA,IAAIE,EAAKzZ,EAAEiK,QACPyP,EAAK3Z,EAAEkK,SAEHlK,EAAE6K,UAAU,CAClB,IAAK,IAAI5X,EAAI,EAAG2mB,EAAK,EAAyB,KAArB5Z,EAAEkI,MAAM,GAAK0R,IAAa3mB,EAAI,KAAMA,EAAG2mB,IAAO,GACvE,GAAI3mB,EAAI,EAEN,IADA+M,EAAEiX,OAAOhkB,GACFA,KAAM,IACPmmB,EAAES,SAAWR,EAAEQ,WACjBT,EAAEpL,KAAK0L,GACPL,EAAEpL,KAAK0L,IAGTP,EAAEnC,OAAO,GACToC,EAAEpC,OAAO,GAIb,IAAK,IAAIpa,EAAI,EAAGid,EAAK,EAAyB,KAArB7Z,EAAEiI,MAAM,GAAK4R,IAAajd,EAAI,KAAMA,EAAGid,IAAO,GACvE,GAAIjd,EAAI,EAEN,IADAoD,EAAEgX,OAAOpa,GACFA,KAAM,IACPyc,EAAEO,SAAWN,EAAEM,WACjBP,EAAEtL,KAAK0L,GACPH,EAAEtL,KAAK0L,IAGTL,EAAErC,OAAO,GACTsC,EAAEtC,OAAO,GAITjX,EAAEiJ,IAAIhJ,IAAM,GACdD,EAAEiO,KAAKhO,GACPmZ,EAAEnL,KAAKqL,GACPD,EAAEpL,KAAKsL,KAEPtZ,EAAEgO,KAAKjO,GACPsZ,EAAErL,KAAKmL,GACPG,EAAEtL,KAAKoL,GAEX,CAEA,MAAO,CACLtZ,EAAGuZ,EACHjsB,EAAGksB,EACHQ,IAAK9Z,EAAE4W,OAAO2C,GAElB,EAKA5R,EAAGhZ,UAAUorB,OAAS,SAAiBnF,GACrCvN,EAAsB,IAAfuN,EAAE5M,UACTX,GAAQuN,EAAEhK,UAEV,IAAI9K,EAAI1E,KACJhO,EAAIwnB,EAAE3K,QAGRnK,EADiB,IAAfA,EAAEkI,SACAlI,EAAE6Y,KAAK/D,GAEP9U,EAAEmK,QAQR,IALA,IAuCI/L,EAvCA8b,EAAK,IAAIrS,EAAG,GACZsS,EAAK,IAAItS,EAAG,GAEZuS,EAAQ9sB,EAAE6c,QAEPnK,EAAEqa,KAAK,GAAK,GAAK/sB,EAAE+sB,KAAK,GAAK,GAAG,CACrC,IAAK,IAAInnB,EAAI,EAAG2mB,EAAK,EAAyB,KAArB7Z,EAAEmI,MAAM,GAAK0R,IAAa3mB,EAAI,KAAMA,EAAG2mB,IAAO,GACvE,GAAI3mB,EAAI,EAEN,IADA8M,EAAEkX,OAAOhkB,GACFA,KAAM,GACPgnB,EAAGJ,SACLI,EAAGjM,KAAKmM,GAGVF,EAAGhD,OAAO,GAId,IAAK,IAAIpa,EAAI,EAAGid,EAAK,EAAyB,KAArBzsB,EAAE6a,MAAM,GAAK4R,IAAajd,EAAI,KAAMA,EAAGid,IAAO,GACvE,GAAIjd,EAAI,EAEN,IADAxP,EAAE4pB,OAAOpa,GACFA,KAAM,GACPqd,EAAGL,SACLK,EAAGlM,KAAKmM,GAGVD,EAAGjD,OAAO,GAIVlX,EAAEkJ,IAAI5b,IAAM,GACd0S,EAAEkO,KAAK5gB,GACP4sB,EAAGhM,KAAKiM,KAER7sB,EAAE4gB,KAAKlO,GACPma,EAAGjM,KAAKgM,GAEZ,CAaA,OATE9b,EADgB,IAAd4B,EAAEqa,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBjc,EAAI6P,KAAK6G,GAGJ1W,CACT,EAEAyJ,EAAGhZ,UAAUmrB,IAAM,SAAcjR,GAC/B,GAAIzN,KAAKwP,SAAU,OAAO/B,EAAIrC,MAC9B,GAAIqC,EAAI+B,SAAU,OAAOxP,KAAKoL,MAE9B,IAAI1G,EAAI1E,KAAK6O,QACT7c,EAAIyb,EAAIoB,QACZnK,EAAEkI,SAAW,EACb5a,EAAE4a,SAAW,EAGb,IAAK,IAAI7T,EAAQ,EAAG2L,EAAE0Z,UAAYpsB,EAAEosB,SAAUrlB,IAC5C2L,EAAEkX,OAAO,GACT5pB,EAAE4pB,OAAO,GAGX,OAAG,CACD,KAAOlX,EAAE0Z,UACP1Z,EAAEkX,OAAO,GAEX,KAAO5pB,EAAEosB,UACPpsB,EAAE4pB,OAAO,GAGX,IAAItO,EAAI5I,EAAEkJ,IAAI5b,GACd,GAAIsb,EAAI,EAAG,CAET,IAAIsD,EAAIlM,EACRA,EAAI1S,EACJA,EAAI4e,CACN,MAAO,GAAU,IAANtD,GAAyB,IAAdtb,EAAE+sB,KAAK,GAC3B,MAGFra,EAAEkO,KAAK5gB,EACT,CAEA,OAAOA,EAAEwpB,OAAOziB,EAClB,EAGAwT,EAAGhZ,UAAUyrB,KAAO,SAAevR,GACjC,OAAOzN,KAAK8d,KAAKrQ,GAAK/I,EAAE6Y,KAAK9P,EAC/B,EAEAlB,EAAGhZ,UAAU6qB,OAAS,WACpB,OAA+B,KAAP,EAAhBpe,KAAK6M,MAAM,GACrB,EAEAN,EAAGhZ,UAAUirB,MAAQ,WACnB,OAA+B,KAAP,EAAhBxe,KAAK6M,MAAM,GACrB,EAGAN,EAAGhZ,UAAUqqB,MAAQ,SAAgBnQ,GACnC,OAAOzN,KAAK6M,MAAM,GAAKY,CACzB,EAGAlB,EAAGhZ,UAAU0rB,MAAQ,SAAgBxM,GACnCxG,EAAsB,kBAARwG,GACd,IAAInF,EAAImF,EAAM,GACVyG,GAAKzG,EAAMnF,GAAK,GAChBiO,EAAI,GAAKjO,EAGb,GAAItN,KAAKxN,QAAU0mB,EAGjB,OAFAlZ,KAAK8O,QAAQoK,EAAI,GACjBlZ,KAAK6M,MAAMqM,IAAMqC,EACVvb,KAKT,IADA,IAAIqP,EAAQkM,EACH3jB,EAAIshB,EAAa,IAAV7J,GAAezX,EAAIoI,KAAKxN,OAAQoF,IAAK,CACnD,IAAIuW,EAAoB,EAAhBnO,KAAK6M,MAAMjV,GAEnByX,GADAlB,GAAKkB,KACS,GACdlB,GAAK,SACLnO,KAAK6M,MAAMjV,GAAKuW,CAClB,CAKA,OAJc,IAAVkB,IACFrP,KAAK6M,MAAMjV,GAAKyX,EAChBrP,KAAKxN,UAEAwN,IACT,EAEAuM,EAAGhZ,UAAUic,OAAS,WACpB,OAAuB,IAAhBxP,KAAKxN,QAAkC,IAAlBwN,KAAK6M,MAAM,EACzC,EAEAN,EAAGhZ,UAAUwrB,KAAO,SAAetR,GACjC,IAOI3K,EAPA8J,EAAWa,EAAM,EAErB,GAAsB,IAAlBzN,KAAK4M,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlB5M,KAAK4M,UAAkBA,EAAU,OAAO,EAK5C,GAHA5M,KAAKqO,SAGDrO,KAAKxN,OAAS,EAChBsQ,EAAM,MACD,CACD8J,IACFa,GAAOA,GAGTxB,EAAOwB,GAAO,SAAW,qBAEzB,IAAIU,EAAoB,EAAhBnO,KAAK6M,MAAM,GACnB/J,EAAMqL,IAAMV,EAAM,EAAIU,EAAIV,GAAO,EAAI,CACvC,CACA,OAAsB,IAAlBzN,KAAK4M,SAA8B,GAAN9J,EAC1BA,CACT,EAMAyJ,EAAGhZ,UAAUqa,IAAM,SAAcH,GAC/B,GAAsB,IAAlBzN,KAAK4M,UAAmC,IAAjBa,EAAIb,SAAgB,OAAQ,EACvD,GAAsB,IAAlB5M,KAAK4M,UAAmC,IAAjBa,EAAIb,SAAgB,OAAO,EAEtD,IAAI9J,EAAM9C,KAAKkf,KAAKzR,GACpB,OAAsB,IAAlBzN,KAAK4M,SAA8B,GAAN9J,EAC1BA,CACT,EAGAyJ,EAAGhZ,UAAU2rB,KAAO,SAAezR,GAEjC,GAAIzN,KAAKxN,OAASib,EAAIjb,OAAQ,OAAO,EACrC,GAAIwN,KAAKxN,OAASib,EAAIjb,OAAQ,OAAQ,EAGtC,IADA,IAAIsQ,EAAM,EACDlL,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,EAAGA,IAAK,CACzC,IAAI8M,EAAoB,EAAhB1E,KAAK6M,MAAMjV,GACf5F,EAAmB,EAAfyb,EAAIZ,MAAMjV,GAElB,GAAI8M,IAAM1S,EAAV,CACI0S,EAAI1S,EACN8Q,GAAO,EACE4B,EAAI1S,IACb8Q,EAAM,GAER,KANqB,CAOvB,CACA,OAAOA,CACT,EAEAyJ,EAAGhZ,UAAU4rB,IAAM,SAAc1R,GAC/B,OAA0B,IAAnBzN,KAAK+e,KAAKtR,EACnB,EAEAlB,EAAGhZ,UAAU6rB,GAAK,SAAa3R,GAC7B,OAAyB,IAAlBzN,KAAK4N,IAAIH,EAClB,EAEAlB,EAAGhZ,UAAU8rB,KAAO,SAAe5R,GACjC,OAAOzN,KAAK+e,KAAKtR,IAAQ,CAC3B,EAEAlB,EAAGhZ,UAAU+rB,IAAM,SAAc7R,GAC/B,OAAOzN,KAAK4N,IAAIH,IAAQ,CAC1B,EAEAlB,EAAGhZ,UAAUgsB,IAAM,SAAc9R,GAC/B,OAA2B,IAApBzN,KAAK+e,KAAKtR,EACnB,EAEAlB,EAAGhZ,UAAUisB,GAAK,SAAa/R,GAC7B,OAA0B,IAAnBzN,KAAK4N,IAAIH,EAClB,EAEAlB,EAAGhZ,UAAUksB,KAAO,SAAehS,GACjC,OAAOzN,KAAK+e,KAAKtR,IAAQ,CAC3B,EAEAlB,EAAGhZ,UAAUmsB,IAAM,SAAcjS,GAC/B,OAAOzN,KAAK4N,IAAIH,IAAQ,CAC1B,EAEAlB,EAAGhZ,UAAUosB,IAAM,SAAclS,GAC/B,OAA0B,IAAnBzN,KAAK+e,KAAKtR,EACnB,EAEAlB,EAAGhZ,UAAUqsB,GAAK,SAAanS,GAC7B,OAAyB,IAAlBzN,KAAK4N,IAAIH,EAClB,EAMAlB,EAAGO,IAAM,SAAcW,GACrB,OAAO,IAAIoS,EAAIpS,EACjB,EAEAlB,EAAGhZ,UAAUusB,MAAQ,SAAgBC,GAGnC,OAFA9T,GAAQjM,KAAK8M,IAAK,yCAClBb,EAAyB,IAAlBjM,KAAK4M,SAAgB,iCACrBmT,EAAIC,UAAUhgB,MAAMigB,UAAUF,EACvC,EAEAxT,EAAGhZ,UAAU2sB,QAAU,WAErB,OADAjU,EAAOjM,KAAK8M,IAAK,wDACV9M,KAAK8M,IAAIqT,YAAYngB,KAC9B,EAEAuM,EAAGhZ,UAAU0sB,UAAY,SAAoBF,GAE3C,OADA/f,KAAK8M,IAAMiT,EACJ/f,IACT,EAEAuM,EAAGhZ,UAAU6sB,SAAW,SAAmBL,GAEzC,OADA9T,GAAQjM,KAAK8M,IAAK,yCACX9M,KAAKigB,UAAUF,EACxB,EAEAxT,EAAGhZ,UAAU8sB,OAAS,SAAiB5S,GAErC,OADAxB,EAAOjM,KAAK8M,IAAK,sCACV9M,KAAK8M,IAAI+F,IAAI7S,KAAMyN,EAC5B,EAEAlB,EAAGhZ,UAAU+sB,QAAU,SAAkB7S,GAEvC,OADAxB,EAAOjM,KAAK8M,IAAK,uCACV9M,KAAK8M,IAAI6F,KAAK3S,KAAMyN,EAC7B,EAEAlB,EAAGhZ,UAAUgtB,OAAS,SAAiB9S,GAErC,OADAxB,EAAOjM,KAAK8M,IAAK,sCACV9M,KAAK8M,IAAItD,IAAIxJ,KAAMyN,EAC5B,EAEAlB,EAAGhZ,UAAUitB,QAAU,SAAkB/S,GAEvC,OADAxB,EAAOjM,KAAK8M,IAAK,uCACV9M,KAAK8M,IAAI8F,KAAK5S,KAAMyN,EAC7B,EAEAlB,EAAGhZ,UAAUktB,OAAS,SAAiBhT,GAErC,OADAxB,EAAOjM,KAAK8M,IAAK,sCACV9M,KAAK8M,IAAI4T,IAAI1gB,KAAMyN,EAC5B,EAEAlB,EAAGhZ,UAAUotB,OAAS,SAAiBlT,GAGrC,OAFAxB,EAAOjM,KAAK8M,IAAK,sCACjB9M,KAAK8M,IAAI8T,SAAS5gB,KAAMyN,GACjBzN,KAAK8M,IAAIxF,IAAItH,KAAMyN,EAC5B,EAEAlB,EAAGhZ,UAAUstB,QAAU,SAAkBpT,GAGvC,OAFAxB,EAAOjM,KAAK8M,IAAK,sCACjB9M,KAAK8M,IAAI8T,SAAS5gB,KAAMyN,GACjBzN,KAAK8M,IAAIgK,KAAK9W,KAAMyN,EAC7B,EAEAlB,EAAGhZ,UAAUutB,OAAS,WAGpB,OAFA7U,EAAOjM,KAAK8M,IAAK,sCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIsO,IAAIpb,KACtB,EAEAuM,EAAGhZ,UAAUytB,QAAU,WAGrB,OAFA/U,EAAOjM,KAAK8M,IAAK,uCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIuO,KAAKrb,KACvB,EAGAuM,EAAGhZ,UAAU0tB,QAAU,WAGrB,OAFAhV,EAAOjM,KAAK8M,IAAK,uCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIoU,KAAKlhB,KACvB,EAEAuM,EAAGhZ,UAAU4tB,QAAU,WAGrB,OAFAlV,EAAOjM,KAAK8M,IAAK,uCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIkS,KAAKhf,KACvB,EAGAuM,EAAGhZ,UAAU6tB,OAAS,WAGpB,OAFAnV,EAAOjM,KAAK8M,IAAK,sCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAI2E,IAAIzR,KACtB,EAEAuM,EAAGhZ,UAAU8tB,OAAS,SAAiB5T,GAGrC,OAFAxB,EAAOjM,KAAK8M,MAAQW,EAAIX,IAAK,qBAC7B9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIpX,IAAIsK,KAAMyN,EAC5B,EAGA,IAAI6T,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ/tB,EAAM4lB,GAErBxZ,KAAKpM,KAAOA,EACZoM,KAAKwZ,EAAI,IAAIjN,EAAGiN,EAAG,IACnBxZ,KAAKQ,EAAIR,KAAKwZ,EAAE1I,YAChB9Q,KAAKgQ,EAAI,IAAIzD,EAAG,GAAGiP,OAAOxb,KAAKQ,GAAGoS,KAAK5S,KAAKwZ,GAE5CxZ,KAAK4hB,IAAM5hB,KAAK6hB,MAClB,CAgDA,SAASC,IACPH,EAAOxnB,KACL6F,KACA,OACA,0EACJ,CA8DA,SAAS+hB,IACPJ,EAAOxnB,KACL6F,KACA,OACA,iEACJ,CAGA,SAASgiB,IACPL,EAAOxnB,KACL6F,KACA,OACA,wDACJ,CAGA,SAASiiB,IAEPN,EAAOxnB,KACL6F,KACA,QACA,sEACJ,CA6CA,SAAS6f,EAAKpf,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAIyhB,EAAQ3V,EAAG4V,OAAO1hB,GACtBT,KAAKS,EAAIyhB,EAAM1I,EACfxZ,KAAKkiB,MAAQA,CACf,MACEjW,EAAOxL,EAAE0e,IAAI,GAAI,kCACjBnf,KAAKS,EAAIA,EACTT,KAAKkiB,MAAQ,IAEjB,CAkOA,SAASE,EAAM3hB,GACbof,EAAI1lB,KAAK6F,KAAMS,GAEfT,KAAKjH,MAAQiH,KAAKS,EAAEqQ,YAChB9Q,KAAKjH,MAAQ,KAAO,IACtBiH,KAAKjH,OAAS,GAAMiH,KAAKjH,MAAQ,IAGnCiH,KAAKsN,EAAI,IAAIf,EAAG,GAAGiP,OAAOxb,KAAKjH,OAC/BiH,KAAK2d,GAAK3d,KAAKqiB,KAAKriB,KAAKsN,EAAE8N,OAC3Bpb,KAAKsiB,KAAOtiB,KAAKsN,EAAEqR,OAAO3e,KAAKS,GAE/BT,KAAKuiB,KAAOviB,KAAKsiB,KAAKhb,IAAItH,KAAKsN,GAAGmP,MAAM,GAAGU,IAAInd,KAAKS,GACpDT,KAAKuiB,KAAOviB,KAAKuiB,KAAKhF,KAAKvd,KAAKsN,GAChCtN,KAAKuiB,KAAOviB,KAAKsN,EAAE9D,IAAIxJ,KAAKuiB,KAC9B,CA/aAZ,EAAOpuB,UAAUsuB,KAAO,WACtB,IAAID,EAAM,IAAIrV,EAAG,MAEjB,OADAqV,EAAI/U,MAAQ,IAAIzU,MAAM7D,KAAK2Z,KAAKlO,KAAKQ,EAAI,KAClCohB,CACT,EAEAD,EAAOpuB,UAAUivB,QAAU,SAAkB/U,GAG3C,IACIgV,EADAnV,EAAIG,EAGR,GACEzN,KAAK/J,MAAMqX,EAAGtN,KAAK4hB,KAGnBa,GADAnV,GADAA,EAAItN,KAAK0iB,MAAMpV,IACTqF,KAAK3S,KAAK4hB,MACP9Q,kBACF2R,EAAOziB,KAAKQ,GAErB,IAAIoN,EAAM6U,EAAOziB,KAAKQ,GAAK,EAAI8M,EAAE4R,KAAKlf,KAAKwZ,GAgB3C,OAfY,IAAR5L,GACFN,EAAET,MAAM,GAAK,EACbS,EAAE9a,OAAS,GACFob,EAAM,EACfN,EAAEsF,KAAK5S,KAAKwZ,QAEIplB,IAAZkZ,EAAEqV,MAEJrV,EAAEqV,QAGFrV,EAAEe,SAICf,CACT,EAEAqU,EAAOpuB,UAAU0C,MAAQ,SAAgBgV,EAAO7E,GAC9C6E,EAAM2Q,OAAO5b,KAAKQ,EAAG,EAAG4F,EAC1B,EAEAub,EAAOpuB,UAAUmvB,MAAQ,SAAgBjV,GACvC,OAAOA,EAAIqJ,KAAK9W,KAAKgQ,EACvB,EAQA9D,EAAS4V,EAAMH,GAEfG,EAAKvuB,UAAU0C,MAAQ,SAAgBgV,EAAO2X,GAK5C,IAHA,IAAI5G,EAAO,QAEP6G,EAAStuB,KAAKsO,IAAIoI,EAAMzY,OAAQ,GAC3BoF,EAAI,EAAGA,EAAIirB,EAAQjrB,IAC1BgrB,EAAO/V,MAAMjV,GAAKqT,EAAM4B,MAAMjV,GAIhC,GAFAgrB,EAAOpwB,OAASqwB,EAEZ5X,EAAMzY,QAAU,EAGlB,OAFAyY,EAAM4B,MAAM,GAAK,OACjB5B,EAAMzY,OAAS,GAKjB,IAAIswB,EAAO7X,EAAM4B,MAAM,GAGvB,IAFA+V,EAAO/V,MAAM+V,EAAOpwB,UAAYswB,EAAO9G,EAElCpkB,EAAI,GAAIA,EAAIqT,EAAMzY,OAAQoF,IAAK,CAClC,IAAImrB,EAAwB,EAAjB9X,EAAM4B,MAAMjV,GACvBqT,EAAM4B,MAAMjV,EAAI,KAAQmrB,EAAO/G,IAAS,EAAM8G,IAAS,GACvDA,EAAOC,CACT,CACAD,KAAU,GACV7X,EAAM4B,MAAMjV,EAAI,IAAMkrB,EACT,IAATA,GAAc7X,EAAMzY,OAAS,GAC/ByY,EAAMzY,QAAU,GAEhByY,EAAMzY,QAAU,CAEpB,EAEAsvB,EAAKvuB,UAAUmvB,MAAQ,SAAgBjV,GAErCA,EAAIZ,MAAMY,EAAIjb,QAAU,EACxBib,EAAIZ,MAAMY,EAAIjb,OAAS,GAAK,EAC5Bib,EAAIjb,QAAU,EAId,IADA,IAAIqB,EAAK,EACA+D,EAAI,EAAGA,EAAI6V,EAAIjb,OAAQoF,IAAK,CACnC,IAAIuW,EAAmB,EAAfV,EAAIZ,MAAMjV,GAClB/D,GAAU,IAAJsa,EACNV,EAAIZ,MAAMjV,GAAU,SAAL/D,EACfA,EAAS,GAAJsa,GAAata,EAAK,SAAa,EACtC,CASA,OANkC,IAA9B4Z,EAAIZ,MAAMY,EAAIjb,OAAS,KACzBib,EAAIjb,SAC8B,IAA9Bib,EAAIZ,MAAMY,EAAIjb,OAAS,IACzBib,EAAIjb,UAGDib,CACT,EAQAvB,EAAS6V,EAAMJ,GAQfzV,EAAS8V,EAAML,GASfzV,EAAS+V,EAAQN,GAEjBM,EAAO1uB,UAAUmvB,MAAQ,SAAgBjV,GAGvC,IADA,IAAI4B,EAAQ,EACHzX,EAAI,EAAGA,EAAI6V,EAAIjb,OAAQoF,IAAK,CACnC,IAAI8K,EAA0B,IAAL,EAAf+K,EAAIZ,MAAMjV,IAAiByX,EACjCxb,EAAU,SAAL6O,EACTA,KAAQ,GAER+K,EAAIZ,MAAMjV,GAAK/D,EACfwb,EAAQ3M,CACV,CAIA,OAHc,IAAV2M,IACF5B,EAAIZ,MAAMY,EAAIjb,UAAY6c,GAErB5B,CACT,EAGAlB,EAAG4V,OAAS,SAAgBvuB,GAE1B,GAAI0tB,EAAO1tB,GAAO,OAAO0tB,EAAO1tB,GAEhC,IAAIsuB,EACJ,GAAa,SAATtuB,EACFsuB,EAAQ,IAAIJ,OACP,GAAa,SAATluB,EACTsuB,EAAQ,IAAIH,OACP,GAAa,SAATnuB,EACTsuB,EAAQ,IAAIF,MACP,IAAa,WAATpuB,EAGT,MAAM,IAAII,MAAM,iBAAmBJ,GAFnCsuB,EAAQ,IAAID,CAGd,CAGA,OAFAX,EAAO1tB,GAAQsuB,EAERA,CACT,EAiBArC,EAAItsB,UAAUwtB,SAAW,SAAmBrc,GAC1CuH,EAAsB,IAAfvH,EAAEkI,SAAgB,iCACzBX,EAAOvH,EAAEoI,IAAK,kCAChB,EAEA+S,EAAItsB,UAAUqtB,SAAW,SAAmBlc,EAAG1S,GAC7Cia,EAAqC,KAA7BvH,EAAEkI,SAAW5a,EAAE4a,UAAiB,iCACxCX,EAAOvH,EAAEoI,KAAOpI,EAAEoI,MAAQ9a,EAAE8a,IAC1B,kCACJ,EAEA+S,EAAItsB,UAAU8uB,KAAO,SAAe3d,GAClC,OAAI1E,KAAKkiB,MAAcliB,KAAKkiB,MAAMM,QAAQ9d,GAAGub,UAAUjgB,OAEvDwN,EAAK9I,EAAGA,EAAE6Y,KAAKvd,KAAKS,GAAGwf,UAAUjgB,OAC1B0E,EACT,EAEAmb,EAAItsB,UAAUke,IAAM,SAAc/M,GAChC,OAAIA,EAAE8K,SACG9K,EAAEmK,QAGJ7O,KAAKS,EAAE+I,IAAI9E,GAAGub,UAAUjgB,KACjC,EAEA6f,EAAItsB,UAAUsf,IAAM,SAAcnO,EAAG1S,GACnCgO,KAAK4gB,SAASlc,EAAG1S,GAEjB,IAAI8Q,EAAM4B,EAAEmO,IAAI7gB,GAIhB,OAHI8Q,EAAI8K,IAAI5N,KAAKS,IAAM,GACrBqC,EAAI8P,KAAK5S,KAAKS,GAETqC,EAAImd,UAAUjgB,KACvB,EAEA6f,EAAItsB,UAAUof,KAAO,SAAejO,EAAG1S,GACrCgO,KAAK4gB,SAASlc,EAAG1S,GAEjB,IAAI8Q,EAAM4B,EAAEiO,KAAK3gB,GAIjB,OAHI8Q,EAAI8K,IAAI5N,KAAKS,IAAM,GACrBqC,EAAI8P,KAAK5S,KAAKS,GAETqC,CACT,EAEA+c,EAAItsB,UAAUiW,IAAM,SAAc9E,EAAG1S,GACnCgO,KAAK4gB,SAASlc,EAAG1S,GAEjB,IAAI8Q,EAAM4B,EAAE8E,IAAIxX,GAIhB,OAHI8Q,EAAIic,KAAK,GAAK,GAChBjc,EAAI6P,KAAK3S,KAAKS,GAETqC,EAAImd,UAAUjgB,KACvB,EAEA6f,EAAItsB,UAAUqf,KAAO,SAAelO,EAAG1S,GACrCgO,KAAK4gB,SAASlc,EAAG1S,GAEjB,IAAI8Q,EAAM4B,EAAEkO,KAAK5gB,GAIjB,OAHI8Q,EAAIic,KAAK,GAAK,GAChBjc,EAAI6P,KAAK3S,KAAKS,GAETqC,CACT,EAEA+c,EAAItsB,UAAUmtB,IAAM,SAAchc,EAAG+I,GAEnC,OADAzN,KAAK+gB,SAASrc,GACP1E,KAAKqiB,KAAK3d,EAAE0X,MAAM3O,GAC3B,EAEAoS,EAAItsB,UAAUujB,KAAO,SAAepS,EAAG1S,GAErC,OADAgO,KAAK4gB,SAASlc,EAAG1S,GACVgO,KAAKqiB,KAAK3d,EAAEoS,KAAK9kB,GAC1B,EAEA6tB,EAAItsB,UAAU+T,IAAM,SAAc5C,EAAG1S,GAEnC,OADAgO,KAAK4gB,SAASlc,EAAG1S,GACVgO,KAAKqiB,KAAK3d,EAAE4C,IAAItV,GACzB,EAEA6tB,EAAItsB,UAAU8nB,KAAO,SAAe3W,GAClC,OAAO1E,KAAK8W,KAAKpS,EAAGA,EAAEmK,QACxB,EAEAgR,EAAItsB,UAAU6nB,IAAM,SAAc1W,GAChC,OAAO1E,KAAKsH,IAAI5C,EAAGA,EACrB,EAEAmb,EAAItsB,UAAU2tB,KAAO,SAAexc,GAClC,GAAIA,EAAE8K,SAAU,OAAO9K,EAAEmK,QAEzB,IAAImU,EAAOhjB,KAAKS,EAAEmd,MAAM,GAIxB,GAHA3R,EAAO+W,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIttB,EAAMsK,KAAKS,EAAEoS,IAAI,IAAItG,EAAG,IAAIqP,OAAO,GACvC,OAAO5b,KAAKtK,IAAIgP,EAAGhP,EACrB,CAOA,IAFA,IAAI6lB,EAAIvb,KAAKS,EAAEkc,KAAK,GAChBzD,EAAI,GACAqC,EAAE/L,UAA2B,IAAf+L,EAAEqC,MAAM,IAC5B1E,IACAqC,EAAEK,OAAO,GAEX3P,GAAQsP,EAAE/L,UAEV,IAAIyT,EAAM,IAAI1W,EAAG,GAAGuT,MAAM9f,MACtBkjB,EAAOD,EAAI7B,SAIX+B,EAAOnjB,KAAKS,EAAEkc,KAAK,GAAGf,OAAO,GAC7BwH,EAAIpjB,KAAKS,EAAEqQ,YAGf,IAFAsS,EAAI,IAAI7W,EAAG,EAAI6W,EAAIA,GAAGtD,MAAM9f,MAEW,IAAhCA,KAAKtK,IAAI0tB,EAAGD,GAAMvV,IAAIsV,IAC3BE,EAAE9C,QAAQ4C,GAOZ,IAJA,IAAIzgB,EAAIzC,KAAKtK,IAAI0tB,EAAG7H,GAChBjO,EAAItN,KAAKtK,IAAIgP,EAAG6W,EAAEmB,KAAK,GAAGd,OAAO,IACjChL,EAAI5Q,KAAKtK,IAAIgP,EAAG6W,GAChB9a,EAAIyY,EACc,IAAftI,EAAEhD,IAAIqV,IAAY,CAEvB,IADA,IAAIrB,EAAMhR,EACDhZ,EAAI,EAAoB,IAAjBgqB,EAAIhU,IAAIqV,GAAYrrB,IAClCgqB,EAAMA,EAAId,SAEZ7U,EAAOrU,EAAI6I,GACX,IAAIzO,EAAIgO,KAAKtK,IAAI+M,EAAG,IAAI8J,EAAG,GAAGiP,OAAO/a,EAAI7I,EAAI,IAE7C0V,EAAIA,EAAEqT,OAAO3uB,GACbyQ,EAAIzQ,EAAE8uB,SACNlQ,EAAIA,EAAE+P,OAAOle,GACbhC,EAAI7I,CACN,CAEA,OAAO0V,CACT,EAEAuS,EAAItsB,UAAUyrB,KAAO,SAAeta,GAClC,IAAI2e,EAAM3e,EAAEia,OAAO3e,KAAKS,GACxB,OAAqB,IAAjB4iB,EAAIzW,UACNyW,EAAIzW,SAAW,EACR5M,KAAKqiB,KAAKgB,GAAKjC,UAEfphB,KAAKqiB,KAAKgB,EAErB,EAEAxD,EAAItsB,UAAUmC,IAAM,SAAcgP,EAAG+I,GACnC,GAAIA,EAAI+B,SAAU,OAAO,IAAIjD,EAAG,GAAGuT,MAAM9f,MACzC,GAAoB,IAAhByN,EAAIsR,KAAK,GAAU,OAAOra,EAAEmK,QAEhC,IACIyU,EAAM,IAAIlrB,MAAM,IACpBkrB,EAAI,GAAK,IAAI/W,EAAG,GAAGuT,MAAM9f,MACzBsjB,EAAI,GAAK5e,EACT,IAAK,IAAI9M,EAAI,EAAGA,EAAI0rB,EAAI9wB,OAAQoF,IAC9B0rB,EAAI1rB,GAAKoI,KAAKsH,IAAIgc,EAAI1rB,EAAI,GAAI8M,GAGhC,IAAI5B,EAAMwgB,EAAI,GACVC,EAAU,EACVC,EAAa,EACbxnB,EAAQyR,EAAIqD,YAAc,GAK9B,IAJc,IAAV9U,IACFA,EAAQ,IAGLpE,EAAI6V,EAAIjb,OAAS,EAAGoF,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAImD,EAAO0S,EAAIZ,MAAMjV,GACZ4J,EAAIxF,EAAQ,EAAGwF,GAAK,EAAGA,IAAK,CACnC,IAAIiR,EAAO1X,GAAQyG,EAAK,EACpBsB,IAAQwgB,EAAI,KACdxgB,EAAM9C,KAAKob,IAAItY,IAGL,IAAR2P,GAAyB,IAAZ8Q,GAKjBA,IAAY,EACZA,GAAW9Q,GA9BE,MA+Bb+Q,GACwC,IAAN5rB,GAAiB,IAAN4J,KAE7CsB,EAAM9C,KAAKsH,IAAIxE,EAAKwgB,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,CAYjB,CACAxnB,EAAQ,EACV,CAEA,OAAO8G,CACT,EAEA+c,EAAItsB,UAAUysB,UAAY,SAAoBvS,GAC5C,IAAIH,EAAIG,EAAI8P,KAAKvd,KAAKS,GAEtB,OAAO6M,IAAMG,EAAMH,EAAEuB,QAAUvB,CACjC,EAEAuS,EAAItsB,UAAU4sB,YAAc,SAAsB1S,GAChD,IAAI3K,EAAM2K,EAAIoB,QAEd,OADA/L,EAAIgK,IAAM,KACHhK,CACT,EAMAyJ,EAAGkX,KAAO,SAAehW,GACvB,OAAO,IAAI2U,EAAK3U,EAClB,EAkBAvB,EAASkW,EAAMvC,GAEfuC,EAAK7uB,UAAUysB,UAAY,SAAoBvS,GAC7C,OAAOzN,KAAKqiB,KAAK5U,EAAI2O,MAAMpc,KAAKjH,OAClC,EAEAqpB,EAAK7uB,UAAU4sB,YAAc,SAAsB1S,GACjD,IAAIH,EAAItN,KAAKqiB,KAAK5U,EAAInG,IAAItH,KAAKsiB,OAE/B,OADAhV,EAAER,IAAM,KACDQ,CACT,EAEA8U,EAAK7uB,UAAUujB,KAAO,SAAepS,EAAG1S,GACtC,GAAI0S,EAAE8K,UAAYxd,EAAEwd,SAGlB,OAFA9K,EAAEmI,MAAM,GAAK,EACbnI,EAAElS,OAAS,EACJkS,EAGT,IAAIkM,EAAIlM,EAAEoS,KAAK9kB,GACXyQ,EAAImO,EAAE4L,MAAMxc,KAAKjH,OAAOuO,IAAItH,KAAKuiB,MAAMhG,OAAOvc,KAAKjH,OAAOuO,IAAItH,KAAKS,GACnEijB,EAAI9S,EAAEgC,KAAKnQ,GAAGmZ,OAAO5b,KAAKjH,OAC1B+J,EAAM4gB,EAQV,OANIA,EAAE9V,IAAI5N,KAAKS,IAAM,EACnBqC,EAAM4gB,EAAE9Q,KAAK5S,KAAKS,GACTijB,EAAE3E,KAAK,GAAK,IACrBjc,EAAM4gB,EAAE/Q,KAAK3S,KAAKS,IAGbqC,EAAImd,UAAUjgB,KACvB,EAEAoiB,EAAK7uB,UAAU+T,IAAM,SAAc5C,EAAG1S,GACpC,GAAI0S,EAAE8K,UAAYxd,EAAEwd,SAAU,OAAO,IAAIjD,EAAG,GAAG0T,UAAUjgB,MAEzD,IAAI4Q,EAAIlM,EAAE4C,IAAItV,GACVyQ,EAAImO,EAAE4L,MAAMxc,KAAKjH,OAAOuO,IAAItH,KAAKuiB,MAAMhG,OAAOvc,KAAKjH,OAAOuO,IAAItH,KAAKS,GACnEijB,EAAI9S,EAAEgC,KAAKnQ,GAAGmZ,OAAO5b,KAAKjH,OAC1B+J,EAAM4gB,EAOV,OANIA,EAAE9V,IAAI5N,KAAKS,IAAM,EACnBqC,EAAM4gB,EAAE9Q,KAAK5S,KAAKS,GACTijB,EAAE3E,KAAK,GAAK,IACrBjc,EAAM4gB,EAAE/Q,KAAK3S,KAAKS,IAGbqC,EAAImd,UAAUjgB,KACvB,EAEAoiB,EAAK7uB,UAAUyrB,KAAO,SAAeta,GAGnC,OADU1E,KAAKqiB,KAAK3d,EAAEia,OAAO3e,KAAKS,GAAG6G,IAAItH,KAAK2d,KACnCsC,UAAUjgB,KACvB,CACD,CA19GD,YA09G4CA,oCCh9G5C,MAAMhD,EAASlL,EAAQ,MACjBmL,EAAUnL,EAAQ,OAClBoL,EACe,oBAAXC,QAAkD,oBAAlBA,OAAY,IAChDA,OAAY,IAAE,8BACd,KAENJ,EAAQ,GAAS3K,EAEjB2K,EAAQ,GAAoB,GAE5B,MAAMQ,EAAe,WAwDrB,SAASC,EAAchL,GACrB,GAAIA,EAAS+K,EACX,MAAM,IAAIrK,WAAW,cAAgBV,EAAS,kCAGhD,MAAMiL,EAAM,IAAIxL,WAAWO,GAE3B,OADAa,OAAOqK,eAAeD,EAAKrL,EAAOmB,WAC3BkK,CACT,CAYA,SAASrL,EAAQuL,EAAKC,EAAkBpL,GAEtC,GAAmB,kBAARmL,EAAkB,CAC3B,GAAgC,kBAArBC,EACT,MAAM,IAAI1L,UACR,sEAGJ,OAAO2L,EAAYF,EACrB,CACA,OAAOtL,EAAKsL,EAAKC,EAAkBpL,EACrC,CAIA,SAASH,EAAM4I,EAAO2C,EAAkBpL,GACtC,GAAqB,kBAAVyI,EACT,OAqHJ,SAAqB6C,EAAQC,GACH,kBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAK3L,EAAO4L,WAAWD,GACrB,MAAM,IAAI7L,UAAU,qBAAuB6L,GAG7C,MAAMvL,EAAwC,EAA/ByL,EAAWH,EAAQC,GAClC,IAAIN,EAAMD,EAAahL,GAEvB,MAAM0L,EAAST,EAAInB,MAAMwB,EAAQC,GAE7BG,IAAW1L,IAIbiL,EAAMA,EAAIrB,MAAM,EAAG8B,IAGrB,OAAOT,CACT,CA3IWU,CAAWlD,EAAO2C,GAG3B,GAAIQ,YAAYC,OAAOpD,GACrB,OAkJJ,SAAwBqD,GACtB,GAAIC,EAAWD,EAAWrM,YAAa,CACrC,MAAM0K,EAAO,IAAI1K,WAAWqM,GAC5B,OAAOE,EAAgB7B,EAAKrK,OAAQqK,EAAKpK,WAAYoK,EAAKsB,WAC5D,CACA,OAAOQ,EAAcH,EACvB,CAxJWI,CAAczD,GAGvB,GAAa,MAATA,EACF,MAAM,IAAI/I,UACR,yHACiD+I,GAIrD,GAAIsD,EAAWtD,EAAOmD,cACjBnD,GAASsD,EAAWtD,EAAM3I,OAAQ8L,aACrC,OAAOI,EAAgBvD,EAAO2C,EAAkBpL,GAGlD,GAAiC,qBAAtBmM,oBACNJ,EAAWtD,EAAO0D,oBAClB1D,GAASsD,EAAWtD,EAAM3I,OAAQqM,oBACrC,OAAOH,EAAgBvD,EAAO2C,EAAkBpL,GAGlD,GAAqB,kBAAVyI,EACT,MAAM,IAAI/I,UACR,yEAIJ,MAAM0M,EAAU3D,EAAM2D,SAAW3D,EAAM2D,UACvC,GAAe,MAAXA,GAAmBA,IAAY3D,EACjC,OAAO7I,EAAOC,KAAKuM,EAAShB,EAAkBpL,GAGhD,MAAMR,EAkJR,SAAqB6M,GACnB,GAAIzM,EAAO0M,SAASD,GAAM,CACxB,MAAME,EAA4B,EAAtBC,EAAQH,EAAIrM,QAClBiL,EAAMD,EAAauB,GAEzB,OAAmB,IAAftB,EAAIjL,QAIRqM,EAAIlC,KAAKc,EAAK,EAAG,EAAGsB,GAHXtB,CAKX,CAEA,QAAmBrJ,IAAfyK,EAAIrM,OACN,MAA0B,kBAAfqM,EAAIrM,QAAuByM,EAAYJ,EAAIrM,QAC7CgL,EAAa,GAEfiB,EAAcI,GAGvB,GAAiB,WAAbA,EAAIK,MAAqB9G,MAAMC,QAAQwG,EAAIM,MAC7C,OAAOV,EAAcI,EAAIM,KAE7B,CAzKYC,CAAWnE,GACrB,GAAIjJ,EAAG,OAAOA,EAEd,GAAsB,qBAAXmL,QAAgD,MAAtBA,OAAOkC,aACH,oBAA9BpE,EAAMkC,OAAOkC,aACtB,OAAOjN,EAAOC,KAAK4I,EAAMkC,OAAOkC,aAAa,UAAWzB,EAAkBpL,GAG5E,MAAM,IAAIN,UACR,yHACiD+I,EAErD,CAmBA,SAASqE,EAAYC,GACnB,GAAoB,kBAATA,EACT,MAAM,IAAIrN,UAAU,0CACf,GAAIqN,EAAO,EAChB,MAAM,IAAIrM,WAAW,cAAgBqM,EAAO,iCAEhD,CA0BA,SAAS1B,EAAa0B,GAEpB,OADAD,EAAWC,GACJ/B,EAAa+B,EAAO,EAAI,EAAoB,EAAhBP,EAAQO,GAC7C,CAuCA,SAASd,EAAee,GACtB,MAAMhN,EAASgN,EAAMhN,OAAS,EAAI,EAA4B,EAAxBwM,EAAQQ,EAAMhN,QAC9CiL,EAAMD,EAAahL,GACzB,IAAK,IAAIoF,EAAI,EAAGA,EAAIpF,EAAQoF,GAAK,EAC/B6F,EAAI7F,GAAgB,IAAX4H,EAAM5H,GAEjB,OAAO6F,CACT,CAUA,SAASe,EAAiBgB,EAAOjN,EAAYC,GAC3C,GAAID,EAAa,GAAKiN,EAAMvB,WAAa1L,EACvC,MAAM,IAAIW,WAAW,wCAGvB,GAAIsM,EAAMvB,WAAa1L,GAAcC,GAAU,GAC7C,MAAM,IAAIU,WAAW,wCAGvB,IAAIuK,EAYJ,OAVEA,OADiBrJ,IAAf7B,QAAuC6B,IAAX5B,EACxB,IAAIP,WAAWuN,QACDpL,IAAX5B,EACH,IAAIP,WAAWuN,EAAOjN,GAEtB,IAAIN,WAAWuN,EAAOjN,EAAYC,GAI1Ca,OAAOqK,eAAeD,EAAKrL,EAAOmB,WAE3BkK,CACT,CA2BA,SAASuB,EAASxM,GAGhB,GAAIA,GAAU+K,EACZ,MAAM,IAAIrK,WAAW,0DACaqK,EAAahB,SAAS,IAAM,UAEhE,OAAgB,EAAT/J,CACT,CAsGA,SAASyL,EAAYH,EAAQC,GAC3B,GAAI3L,EAAO0M,SAAShB,GAClB,OAAOA,EAAOtL,OAEhB,GAAI4L,YAAYC,OAAOP,IAAWS,EAAWT,EAAQM,aACnD,OAAON,EAAOG,WAEhB,GAAsB,kBAAXH,EACT,MAAM,IAAI5L,UACR,kGAC0B4L,GAI9B,MAAMiB,EAAMjB,EAAOtL,OACbiN,EAAatL,UAAU3B,OAAS,IAAsB,IAAjB2B,UAAU,GACrD,IAAKsL,GAAqB,IAARV,EAAW,OAAO,EAGpC,IAAIW,GAAc,EAClB,OACE,OAAQ3B,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOgB,EACT,IAAK,OACL,IAAK,QACH,OAAOY,EAAY7B,GAAQtL,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANuM,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOa,EAAc9B,GAAQtL,OAC/B,QACE,GAAIkN,EACF,OAAOD,GAAa,EAAIE,EAAY7B,GAAQtL,OAE9CuL,GAAY,GAAKA,GAAU8B,cAC3BH,GAAc,EAGtB,CAGA,SAASI,EAAc/B,EAAU/B,EAAO+D,GACtC,IAAIL,GAAc,EAclB,SALctL,IAAV4H,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQgE,KAAKxN,OACf,MAAO,GAOT,SAJY4B,IAAR2L,GAAqBA,EAAMC,KAAKxN,UAClCuN,EAAMC,KAAKxN,QAGTuN,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACT/D,KAAW,GAGT,MAAO,GAKT,IAFK+B,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOkC,EAASD,KAAMhE,EAAO+D,GAE/B,IAAK,OACL,IAAK,QACH,OAAOG,EAAUF,KAAMhE,EAAO+D,GAEhC,IAAK,QACH,OAAOI,EAAWH,KAAMhE,EAAO+D,GAEjC,IAAK,SACL,IAAK,SACH,OAAOK,EAAYJ,KAAMhE,EAAO+D,GAElC,IAAK,SACH,OAAOM,EAAYL,KAAMhE,EAAO+D,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOO,EAAaN,KAAMhE,EAAO+D,GAEnC,QACE,GAAIL,EAAa,MAAM,IAAIxN,UAAU,qBAAuB6L,GAC5DA,GAAYA,EAAW,IAAI8B,cAC3BH,GAAc,EAGtB,CAUA,SAASa,EAAMvO,EAAGwO,EAAGC,GACnB,MAAM7I,EAAI5F,EAAEwO,GACZxO,EAAEwO,GAAKxO,EAAEyO,GACTzO,EAAEyO,GAAK7I,CACT,CA2IA,SAAS8I,EAAsBpO,EAAQqO,EAAKpO,EAAYwL,EAAU6C,GAEhE,GAAsB,IAAlBtO,EAAOE,OAAc,OAAQ,EAmBjC,GAhB0B,kBAAfD,GACTwL,EAAWxL,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZ0M,EADJ1M,GAAcA,KAGZA,EAAaqO,EAAM,EAAKtO,EAAOE,OAAS,GAItCD,EAAa,IAAGA,EAAaD,EAAOE,OAASD,GAC7CA,GAAcD,EAAOE,OAAQ,CAC/B,GAAIoO,EAAK,OAAQ,EACZrO,EAAaD,EAAOE,OAAS,CACpC,MAAO,GAAID,EAAa,EAAG,CACzB,IAAIqO,EACC,OAAQ,EADJrO,EAAa,CAExB,CAQA,GALmB,kBAARoO,IACTA,EAAMvO,EAAOC,KAAKsO,EAAK5C,IAIrB3L,EAAO0M,SAAS6B,GAElB,OAAmB,IAAfA,EAAInO,QACE,EAEHqO,EAAavO,EAAQqO,EAAKpO,EAAYwL,EAAU6C,GAClD,GAAmB,kBAARD,EAEhB,OADAA,GAAY,IACgC,oBAAjC1O,WAAWsB,UAAUuN,QAC1BF,EACK3O,WAAWsB,UAAUuN,QAAQ3G,KAAK7H,EAAQqO,EAAKpO,GAE/CN,WAAWsB,UAAUwN,YAAY5G,KAAK7H,EAAQqO,EAAKpO,GAGvDsO,EAAavO,EAAQ,CAACqO,GAAMpO,EAAYwL,EAAU6C,GAG3D,MAAM,IAAI1O,UAAU,uCACtB,CAEA,SAAS2O,EAAcG,EAAKL,EAAKpO,EAAYwL,EAAU6C,GACrD,IA0BIhJ,EA1BAqJ,EAAY,EACZC,EAAYF,EAAIxO,OAChB2O,EAAYR,EAAInO,OAEpB,QAAiB4B,IAAb2J,IAEe,UADjBA,EAAWtB,OAAOsB,GAAU8B,gBACY,UAAb9B,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIiD,EAAIxO,OAAS,GAAKmO,EAAInO,OAAS,EACjC,OAAQ,EAEVyO,EAAY,EACZC,GAAa,EACbC,GAAa,EACb5O,GAAc,CAChB,CAGF,SAAS6O,EAAM3D,EAAK7F,GAClB,OAAkB,IAAdqJ,EACKxD,EAAI7F,GAEJ6F,EAAI4D,aAAazJ,EAAIqJ,EAEhC,CAGA,GAAIL,EAAK,CACP,IAAIU,GAAc,EAClB,IAAK1J,EAAIrF,EAAYqF,EAAIsJ,EAAWtJ,IAClC,GAAIwJ,EAAKJ,EAAKpJ,KAAOwJ,EAAKT,GAAqB,IAAhBW,EAAoB,EAAI1J,EAAI0J,IAEzD,IADoB,IAAhBA,IAAmBA,EAAa1J,GAChCA,EAAI0J,EAAa,IAAMH,EAAW,OAAOG,EAAaL,OAEtC,IAAhBK,IAAmB1J,GAAKA,EAAI0J,GAChCA,GAAc,CAGpB,MAEE,IADI/O,EAAa4O,EAAYD,IAAW3O,EAAa2O,EAAYC,GAC5DvJ,EAAIrF,EAAYqF,GAAK,EAAGA,IAAK,CAChC,IAAI2J,GAAQ,EACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAWK,IAC7B,GAAIJ,EAAKJ,EAAKpJ,EAAI4J,KAAOJ,EAAKT,EAAKa,GAAI,CACrCD,GAAQ,EACR,KACF,CAEF,GAAIA,EAAO,OAAO3J,CACpB,CAGF,OAAQ,CACV,CAcA,SAAS6J,EAAUhE,EAAKK,EAAQ7K,EAAQT,GACtCS,EAASJ,OAAOI,IAAW,EAC3B,MAAMyO,EAAYjE,EAAIjL,OAASS,EAC1BT,GAGHA,EAASK,OAAOL,IACHkP,IACXlP,EAASkP,GAJXlP,EAASkP,EAQX,MAAMC,EAAS7D,EAAOtL,OAKtB,IAAIoF,EACJ,IAJIpF,EAASmP,EAAS,IACpBnP,EAASmP,EAAS,GAGf/J,EAAI,EAAGA,EAAIpF,IAAUoF,EAAG,CAC3B,MAAMgK,EAASC,SAAS/D,EAAOgE,OAAW,EAAJlK,EAAO,GAAI,IACjD,GAAIqH,EAAY2C,GAAS,OAAOhK,EAChC6F,EAAIxK,EAAS2E,GAAKgK,CACpB,CACA,OAAOhK,CACT,CAEA,SAASmK,EAAWtE,EAAKK,EAAQ7K,EAAQT,GACvC,OAAOwP,EAAWrC,EAAY7B,EAAQL,EAAIjL,OAASS,GAASwK,EAAKxK,EAAQT,EAC3E,CAEA,SAASyP,EAAYxE,EAAKK,EAAQ7K,EAAQT,GACxC,OAAOwP,EAypCT,SAAuBE,GACrB,MAAMC,EAAY,GAClB,IAAK,IAAIvK,EAAI,EAAGA,EAAIsK,EAAI1P,SAAUoF,EAEhCuK,EAAUtK,KAAyB,IAApBqK,EAAIE,WAAWxK,IAEhC,OAAOuK,CACT,CAhqCoBE,CAAavE,GAASL,EAAKxK,EAAQT,EACvD,CAEA,SAAS8P,EAAa7E,EAAKK,EAAQ7K,EAAQT,GACzC,OAAOwP,EAAWpC,EAAc9B,GAASL,EAAKxK,EAAQT,EACxD,CAEA,SAAS+P,EAAW9E,EAAKK,EAAQ7K,EAAQT,GACvC,OAAOwP,EA0pCT,SAAyBE,EAAKM,GAC5B,IAAIC,EAAGC,EAAI7O,EACX,MAAMsO,EAAY,GAClB,IAAK,IAAIvK,EAAI,EAAGA,EAAIsK,EAAI1P,WACjBgQ,GAAS,GAAK,KADa5K,EAGhC6K,EAAIP,EAAIE,WAAWxK,GACnB8K,EAAKD,GAAK,EACV5O,EAAK4O,EAAI,IACTN,EAAUtK,KAAKhE,GACfsO,EAAUtK,KAAK6K,GAGjB,OAAOP,CACT,CAxqCoBQ,CAAe7E,EAAQL,EAAIjL,OAASS,GAASwK,EAAKxK,EAAQT,EAC9E,CA8EA,SAAS6N,EAAa5C,EAAKzB,EAAO+D,GAChC,OAAc,IAAV/D,GAAe+D,IAAQtC,EAAIjL,OACtBwK,EAAO4F,cAAcnF,GAErBT,EAAO4F,cAAcnF,EAAIrB,MAAMJ,EAAO+D,GAEjD,CAEA,SAASG,EAAWzC,EAAKzB,EAAO+D,GAC9BA,EAAMxL,KAAKsO,IAAIpF,EAAIjL,OAAQuN,GAC3B,MAAM+C,EAAM,GAEZ,IAAIlL,EAAIoE,EACR,KAAOpE,EAAImI,GAAK,CACd,MAAMgD,EAAYtF,EAAI7F,GACtB,IAAIoL,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAInL,EAAIqL,GAAoBlD,EAAK,CAC/B,IAAImD,EAAYC,EAAWC,EAAYC,EAEvC,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHG,EAAazF,EAAI7F,EAAI,GACO,OAAV,IAAbsL,KACHG,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,EACzCG,EAAgB,MAClBL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAazF,EAAI7F,EAAI,GACrBuL,EAAY1F,EAAI7F,EAAI,GACQ,OAAV,IAAbsL,IAAsD,OAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,IAGhB,MACF,KAAK,EACHH,EAAazF,EAAI7F,EAAI,GACrBuL,EAAY1F,EAAI7F,EAAI,GACpBwL,EAAa3F,EAAI7F,EAAI,GACO,OAAV,IAAbsL,IAAsD,OAAV,IAAZC,IAAsD,OAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CL,EAAYK,IAItB,CAEkB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbF,EAAIjL,KAAKmL,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBF,EAAIjL,KAAKmL,GACTpL,GAAKqL,CACP,CAEA,OAQF,SAAgCK,GAC9B,MAAMvE,EAAMuE,EAAW9Q,OACvB,GAAIuM,GAAOwE,EACT,OAAO9G,OAAO+G,aAAaC,MAAMhH,OAAQ6G,GAI3C,IAAIR,EAAM,GACNlL,EAAI,EACR,KAAOA,EAAImH,GACT+D,GAAOrG,OAAO+G,aAAaC,MACzBhH,OACA6G,EAAWlH,MAAMxE,EAAGA,GAAK2L,IAG7B,OAAOT,CACT,CAxBSY,CAAsBZ,EAC/B,CA39BA1Q,EAAOwR,oBAUP,WAEE,IACE,MAAM5C,EAAM,IAAI/O,WAAW,GACrB4R,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAG,GAG7C,OAFAzQ,OAAOqK,eAAemG,EAAO5R,WAAWsB,WACxCF,OAAOqK,eAAesD,EAAK6C,GACN,KAAd7C,EAAI8C,KACb,CAAE,MAAOtL,GACP,OAAO,CACT,CACF,CArB6BuL,GAExB3R,EAAOwR,qBAA0C,qBAAZI,SACb,oBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJ5Q,OAAO6Q,eAAe9R,EAAOmB,UAAW,SAAU,CAChD4Q,YAAY,EACZC,IAAK,WACH,GAAKhS,EAAO0M,SAASkB,MACrB,OAAOA,KAAK1N,MACd,IAGFe,OAAO6Q,eAAe9R,EAAOmB,UAAW,SAAU,CAChD4Q,YAAY,EACZC,IAAK,WACH,GAAKhS,EAAO0M,SAASkB,MACrB,OAAOA,KAAKzN,UACd,IAoCFH,EAAOiS,SAAW,KA8DlBjS,EAAOC,KAAO,SAAU4I,EAAO2C,EAAkBpL,GAC/C,OAAOH,EAAK4I,EAAO2C,EAAkBpL,EACvC,EAIAa,OAAOqK,eAAetL,EAAOmB,UAAWtB,WAAWsB,WACnDF,OAAOqK,eAAetL,EAAQH,YA8B9BG,EAAOiL,MAAQ,SAAUkC,EAAM+E,EAAMvG,GACnC,OArBF,SAAgBwB,EAAM+E,EAAMvG,GAE1B,OADAuB,EAAWC,GACPA,GAAQ,EACH/B,EAAa+B,QAETnL,IAATkQ,EAIyB,kBAAbvG,EACVP,EAAa+B,GAAM+E,KAAKA,EAAMvG,GAC9BP,EAAa+B,GAAM+E,KAAKA,GAEvB9G,EAAa+B,EACtB,CAOSlC,CAAMkC,EAAM+E,EAAMvG,EAC3B,EAUA3L,EAAOyL,YAAc,SAAU0B,GAC7B,OAAO1B,EAAY0B,EACrB,EAIAnN,EAAOmS,gBAAkB,SAAUhF,GACjC,OAAO1B,EAAY0B,EACrB,EA6GAnN,EAAO0M,SAAW,SAAmB9M,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAEwS,WACpBxS,IAAMI,EAAOmB,SACjB,EAEAnB,EAAOqS,QAAU,SAAkBC,EAAG1S,GAGpC,GAFIuM,EAAWmG,EAAGzS,cAAayS,EAAItS,EAAOC,KAAKqS,EAAGA,EAAEzR,OAAQyR,EAAEzG,aAC1DM,EAAWvM,EAAGC,cAAaD,EAAII,EAAOC,KAAKL,EAAGA,EAAEiB,OAAQjB,EAAEiM,cACzD7L,EAAO0M,SAAS4F,KAAOtS,EAAO0M,SAAS9M,GAC1C,MAAM,IAAIE,UACR,yEAIJ,GAAIwS,IAAM1S,EAAG,OAAO,EAEpB,IAAI2S,EAAID,EAAElS,OACNoS,EAAI5S,EAAEQ,OAEV,IAAK,IAAIoF,EAAI,EAAGmH,EAAMxK,KAAKsO,IAAI8B,EAAGC,GAAIhN,EAAImH,IAAOnH,EAC/C,GAAI8M,EAAE9M,KAAO5F,EAAE4F,GAAI,CACjB+M,EAAID,EAAE9M,GACNgN,EAAI5S,EAAE4F,GACN,KACF,CAGF,OAAI+M,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EAEAvS,EAAO4L,WAAa,SAAqBD,GACvC,OAAQtB,OAAOsB,GAAU8B,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEAzN,EAAOyS,OAAS,SAAiBC,EAAMtS,GACrC,IAAK4F,MAAMC,QAAQyM,GACjB,MAAM,IAAI5S,UAAU,+CAGtB,GAAoB,IAAhB4S,EAAKtS,OACP,OAAOJ,EAAOiL,MAAM,GAGtB,IAAIzF,EACJ,QAAexD,IAAX5B,EAEF,IADAA,EAAS,EACJoF,EAAI,EAAGA,EAAIkN,EAAKtS,SAAUoF,EAC7BpF,GAAUsS,EAAKlN,GAAGpF,OAItB,MAAMF,EAASF,EAAOyL,YAAYrL,GAClC,IAAIuS,EAAM,EACV,IAAKnN,EAAI,EAAGA,EAAIkN,EAAKtS,SAAUoF,EAAG,CAChC,IAAI6F,EAAMqH,EAAKlN,GACf,GAAI2G,EAAWd,EAAKxL,YACd8S,EAAMtH,EAAIjL,OAASF,EAAOE,QACvBJ,EAAO0M,SAASrB,KAAMA,EAAMrL,EAAOC,KAAKoL,IAC7CA,EAAId,KAAKrK,EAAQyS,IAEjB9S,WAAWsB,UAAUyR,IAAI7K,KACvB7H,EACAmL,EACAsH,OAGC,KAAK3S,EAAO0M,SAASrB,GAC1B,MAAM,IAAIvL,UAAU,+CAEpBuL,EAAId,KAAKrK,EAAQyS,EACnB,CACAA,GAAOtH,EAAIjL,MACb,CACA,OAAOF,CACT,EAiDAF,EAAO6L,WAAaA,EA8EpB7L,EAAOmB,UAAUiR,WAAY,EAQ7BpS,EAAOmB,UAAU0R,OAAS,WACxB,MAAMlG,EAAMiB,KAAKxN,OACjB,GAAIuM,EAAM,IAAM,EACd,MAAM,IAAI7L,WAAW,6CAEvB,IAAK,IAAI0E,EAAI,EAAGA,EAAImH,EAAKnH,GAAK,EAC5B2I,EAAKP,KAAMpI,EAAGA,EAAI,GAEpB,OAAOoI,IACT,EAEA5N,EAAOmB,UAAU2R,OAAS,WACxB,MAAMnG,EAAMiB,KAAKxN,OACjB,GAAIuM,EAAM,IAAM,EACd,MAAM,IAAI7L,WAAW,6CAEvB,IAAK,IAAI0E,EAAI,EAAGA,EAAImH,EAAKnH,GAAK,EAC5B2I,EAAKP,KAAMpI,EAAGA,EAAI,GAClB2I,EAAKP,KAAMpI,EAAI,EAAGA,EAAI,GAExB,OAAOoI,IACT,EAEA5N,EAAOmB,UAAU4R,OAAS,WACxB,MAAMpG,EAAMiB,KAAKxN,OACjB,GAAIuM,EAAM,IAAM,EACd,MAAM,IAAI7L,WAAW,6CAEvB,IAAK,IAAI0E,EAAI,EAAGA,EAAImH,EAAKnH,GAAK,EAC5B2I,EAAKP,KAAMpI,EAAGA,EAAI,GAClB2I,EAAKP,KAAMpI,EAAI,EAAGA,EAAI,GACtB2I,EAAKP,KAAMpI,EAAI,EAAGA,EAAI,GACtB2I,EAAKP,KAAMpI,EAAI,EAAGA,EAAI,GAExB,OAAOoI,IACT,EAEA5N,EAAOmB,UAAUgJ,SAAW,WAC1B,MAAM/J,EAASwN,KAAKxN,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArB2B,UAAU3B,OAAqB0N,EAAUF,KAAM,EAAGxN,GAC/CsN,EAAa2D,MAAMzD,KAAM7L,UAClC,EAEA/B,EAAOmB,UAAU6R,eAAiBhT,EAAOmB,UAAUgJ,SAEnDnK,EAAOmB,UAAU8R,OAAS,SAAiBrT,GACzC,IAAKI,EAAO0M,SAAS9M,GAAI,MAAM,IAAIE,UAAU,6BAC7C,OAAI8N,OAAShO,GACsB,IAA5BI,EAAOqS,QAAQzE,KAAMhO,EAC9B,EAEAI,EAAOmB,UAAU+R,QAAU,WACzB,IAAIpD,EAAM,GACV,MAAMqD,EAAMxI,EAAQ,GAGpB,OAFAmF,EAAMlC,KAAKzD,SAAS,MAAO,EAAGgJ,GAAKC,QAAQ,UAAW,OAAOC,OACzDzF,KAAKxN,OAAS+S,IAAKrD,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACIhF,IACF9K,EAAOmB,UAAU2J,GAAuB9K,EAAOmB,UAAU+R,SAG3DlT,EAAOmB,UAAUkR,QAAU,SAAkBiB,EAAQ1J,EAAO+D,EAAK4F,EAAWC,GAI1E,GAHIrH,EAAWmH,EAAQzT,cACrByT,EAAStT,EAAOC,KAAKqT,EAAQA,EAAOzS,OAAQyS,EAAOzH,cAEhD7L,EAAO0M,SAAS4G,GACnB,MAAM,IAAIxT,UACR,wFAC2BwT,GAiB/B,QAbctR,IAAV4H,IACFA,EAAQ,QAEE5H,IAAR2L,IACFA,EAAM2F,EAASA,EAAOlT,OAAS,QAEf4B,IAAduR,IACFA,EAAY,QAEEvR,IAAZwR,IACFA,EAAU5F,KAAKxN,QAGbwJ,EAAQ,GAAK+D,EAAM2F,EAAOlT,QAAUmT,EAAY,GAAKC,EAAU5F,KAAKxN,OACtE,MAAM,IAAIU,WAAW,sBAGvB,GAAIyS,GAAaC,GAAW5J,GAAS+D,EACnC,OAAO,EAET,GAAI4F,GAAaC,EACf,OAAQ,EAEV,GAAI5J,GAAS+D,EACX,OAAO,EAQT,GAAIC,OAAS0F,EAAQ,OAAO,EAE5B,IAAIf,GAJJiB,KAAa,IADbD,KAAe,GAMXf,GAPJ7E,KAAS,IADT/D,KAAW,GASX,MAAM+C,EAAMxK,KAAKsO,IAAI8B,EAAGC,GAElBiB,EAAW7F,KAAK5D,MAAMuJ,EAAWC,GACjCE,EAAaJ,EAAOtJ,MAAMJ,EAAO+D,GAEvC,IAAK,IAAInI,EAAI,EAAGA,EAAImH,IAAOnH,EACzB,GAAIiO,EAASjO,KAAOkO,EAAWlO,GAAI,CACjC+M,EAAIkB,EAASjO,GACbgN,EAAIkB,EAAWlO,GACf,KACF,CAGF,OAAI+M,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EA2HAvS,EAAOmB,UAAUwS,SAAW,SAAmBpF,EAAKpO,EAAYwL,GAC9D,OAAoD,IAA7CiC,KAAKc,QAAQH,EAAKpO,EAAYwL,EACvC,EAEA3L,EAAOmB,UAAUuN,QAAU,SAAkBH,EAAKpO,EAAYwL,GAC5D,OAAO2C,EAAqBV,KAAMW,EAAKpO,EAAYwL,GAAU,EAC/D,EAEA3L,EAAOmB,UAAUwN,YAAc,SAAsBJ,EAAKpO,EAAYwL,GACpE,OAAO2C,EAAqBV,KAAMW,EAAKpO,EAAYwL,GAAU,EAC/D,EA4CA3L,EAAOmB,UAAU+I,MAAQ,SAAgBwB,EAAQ7K,EAAQT,EAAQuL,GAE/D,QAAe3J,IAAXnB,EACF8K,EAAW,OACXvL,EAASwN,KAAKxN,OACdS,EAAS,OAEJ,QAAemB,IAAX5B,GAA0C,kBAAXS,EACxC8K,EAAW9K,EACXT,EAASwN,KAAKxN,OACdS,EAAS,MAEJ,KAAI+S,SAAS/S,GAUlB,MAAM,IAAIe,MACR,2EAVFf,KAAoB,EAChB+S,SAASxT,IACXA,KAAoB,OACH4B,IAAb2J,IAAwBA,EAAW,UAEvCA,EAAWvL,EACXA,OAAS4B,EAMb,CAEA,MAAMsN,EAAY1B,KAAKxN,OAASS,EAGhC,SAFemB,IAAX5B,GAAwBA,EAASkP,KAAWlP,EAASkP,GAEpD5D,EAAOtL,OAAS,IAAMA,EAAS,GAAKS,EAAS,IAAOA,EAAS+M,KAAKxN,OACrE,MAAM,IAAIU,WAAW,0CAGlB6K,IAAUA,EAAW,QAE1B,IAAI2B,GAAc,EAClB,OACE,OAAQ3B,GACN,IAAK,MACH,OAAO0D,EAASzB,KAAMlC,EAAQ7K,EAAQT,GAExC,IAAK,OACL,IAAK,QACH,OAAOuP,EAAU/B,KAAMlC,EAAQ7K,EAAQT,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOyP,EAAWjC,KAAMlC,EAAQ7K,EAAQT,GAE1C,IAAK,SAEH,OAAO8P,EAAYtC,KAAMlC,EAAQ7K,EAAQT,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO+P,EAAUvC,KAAMlC,EAAQ7K,EAAQT,GAEzC,QACE,GAAIkN,EAAa,MAAM,IAAIxN,UAAU,qBAAuB6L,GAC5DA,GAAY,GAAKA,GAAU8B,cAC3BH,GAAc,EAGtB,EAEAtN,EAAOmB,UAAU0S,OAAS,WACxB,MAAO,CACL/G,KAAM,SACNC,KAAM/G,MAAM7E,UAAU6I,MAAMjC,KAAK6F,KAAKkG,MAAQlG,KAAM,GAExD,EAyFA,MAAMuD,EAAuB,KAoB7B,SAASpD,EAAY1C,EAAKzB,EAAO+D,GAC/B,IAAIoG,EAAM,GACVpG,EAAMxL,KAAKsO,IAAIpF,EAAIjL,OAAQuN,GAE3B,IAAK,IAAInI,EAAIoE,EAAOpE,EAAImI,IAAOnI,EAC7BuO,GAAO1J,OAAO+G,aAAsB,IAAT/F,EAAI7F,IAEjC,OAAOuO,CACT,CAEA,SAAS/F,EAAa3C,EAAKzB,EAAO+D,GAChC,IAAIoG,EAAM,GACVpG,EAAMxL,KAAKsO,IAAIpF,EAAIjL,OAAQuN,GAE3B,IAAK,IAAInI,EAAIoE,EAAOpE,EAAImI,IAAOnI,EAC7BuO,GAAO1J,OAAO+G,aAAa/F,EAAI7F,IAEjC,OAAOuO,CACT,CAEA,SAASlG,EAAUxC,EAAKzB,EAAO+D,GAC7B,MAAMhB,EAAMtB,EAAIjL,SAEXwJ,GAASA,EAAQ,KAAGA,EAAQ,KAC5B+D,GAAOA,EAAM,GAAKA,EAAMhB,KAAKgB,EAAMhB,GAExC,IAAIqH,EAAM,GACV,IAAK,IAAIxO,EAAIoE,EAAOpE,EAAImI,IAAOnI,EAC7BwO,GAAOC,EAAoB5I,EAAI7F,IAEjC,OAAOwO,CACT,CAEA,SAAS9F,EAAc7C,EAAKzB,EAAO+D,GACjC,MAAMuG,EAAQ7I,EAAIrB,MAAMJ,EAAO+D,GAC/B,IAAI+C,EAAM,GAEV,IAAK,IAAIlL,EAAI,EAAGA,EAAI0O,EAAM9T,OAAS,EAAGoF,GAAK,EACzCkL,GAAOrG,OAAO+G,aAAa8C,EAAM1O,GAAqB,IAAf0O,EAAM1O,EAAI,IAEnD,OAAOkL,CACT,CAiCA,SAASyD,EAAatT,EAAQuT,EAAKhU,GACjC,GAAKS,EAAS,IAAO,GAAKA,EAAS,EAAG,MAAM,IAAIC,WAAW,sBAC3D,GAAID,EAASuT,EAAMhU,EAAQ,MAAM,IAAIU,WAAW,wCAClD,CAyQA,SAASuT,EAAUhJ,EAAKxC,EAAOhI,EAAQuT,EAAKjB,EAAK1C,GAC/C,IAAKzQ,EAAO0M,SAASrB,GAAM,MAAM,IAAIvL,UAAU,+CAC/C,GAAI+I,EAAQsK,GAAOtK,EAAQ4H,EAAK,MAAM,IAAI3P,WAAW,qCACrD,GAAID,EAASuT,EAAM/I,EAAIjL,OAAQ,MAAM,IAAIU,WAAW,qBACtD,CA+FA,SAASwT,EAAgBjJ,EAAKxC,EAAOhI,EAAQ4P,EAAK0C,GAChDoB,EAAW1L,EAAO4H,EAAK0C,EAAK9H,EAAKxK,EAAQ,GAEzC,IAAIY,EAAKhB,OAAOoI,EAAQ2L,OAAO,aAC/BnJ,EAAIxK,KAAYY,EAChBA,IAAW,EACX4J,EAAIxK,KAAYY,EAChBA,IAAW,EACX4J,EAAIxK,KAAYY,EAChBA,IAAW,EACX4J,EAAIxK,KAAYY,EAChB,IAAI6O,EAAK7P,OAAOoI,GAAS2L,OAAO,IAAMA,OAAO,aAQ7C,OAPAnJ,EAAIxK,KAAYyP,EAChBA,IAAW,EACXjF,EAAIxK,KAAYyP,EAChBA,IAAW,EACXjF,EAAIxK,KAAYyP,EAChBA,IAAW,EACXjF,EAAIxK,KAAYyP,EACTzP,CACT,CAEA,SAAS4T,EAAgBpJ,EAAKxC,EAAOhI,EAAQ4P,EAAK0C,GAChDoB,EAAW1L,EAAO4H,EAAK0C,EAAK9H,EAAKxK,EAAQ,GAEzC,IAAIY,EAAKhB,OAAOoI,EAAQ2L,OAAO,aAC/BnJ,EAAIxK,EAAS,GAAKY,EAClBA,IAAW,EACX4J,EAAIxK,EAAS,GAAKY,EAClBA,IAAW,EACX4J,EAAIxK,EAAS,GAAKY,EAClBA,IAAW,EACX4J,EAAIxK,EAAS,GAAKY,EAClB,IAAI6O,EAAK7P,OAAOoI,GAAS2L,OAAO,IAAMA,OAAO,aAQ7C,OAPAnJ,EAAIxK,EAAS,GAAKyP,EAClBA,IAAW,EACXjF,EAAIxK,EAAS,GAAKyP,EAClBA,IAAW,EACXjF,EAAIxK,EAAS,GAAKyP,EAClBA,IAAW,EACXjF,EAAIxK,GAAUyP,EACPzP,EAAS,CAClB,CAkHA,SAAS6T,EAAcrJ,EAAKxC,EAAOhI,EAAQuT,EAAKjB,EAAK1C,GACnD,GAAI5P,EAASuT,EAAM/I,EAAIjL,OAAQ,MAAM,IAAIU,WAAW,sBACpD,GAAID,EAAS,EAAG,MAAM,IAAIC,WAAW,qBACvC,CAEA,SAAS6T,EAAYtJ,EAAKxC,EAAOhI,EAAQ+T,EAAcC,GAOrD,OANAhM,GAASA,EACThI,KAAoB,EACfgU,GACHH,EAAarJ,EAAKxC,EAAOhI,EAAQ,GAEnCgK,EAAQX,MAAMmB,EAAKxC,EAAOhI,EAAQ+T,EAAc,GAAI,GAC7C/T,EAAS,CAClB,CAUA,SAASiU,EAAazJ,EAAKxC,EAAOhI,EAAQ+T,EAAcC,GAOtD,OANAhM,GAASA,EACThI,KAAoB,EACfgU,GACHH,EAAarJ,EAAKxC,EAAOhI,EAAQ,GAEnCgK,EAAQX,MAAMmB,EAAKxC,EAAOhI,EAAQ+T,EAAc,GAAI,GAC7C/T,EAAS,CAClB,CAzkBAb,EAAOmB,UAAU6I,MAAQ,SAAgBJ,EAAO+D,GAC9C,MAAMhB,EAAMiB,KAAKxN,QACjBwJ,IAAUA,GAGE,GACVA,GAAS+C,GACG,IAAG/C,EAAQ,GACdA,EAAQ+C,IACjB/C,EAAQ+C,IANVgB,OAAc3L,IAAR2L,EAAoBhB,IAAQgB,GASxB,GACRA,GAAOhB,GACG,IAAGgB,EAAM,GACVA,EAAMhB,IACfgB,EAAMhB,GAGJgB,EAAM/D,IAAO+D,EAAM/D,GAEvB,MAAMmL,EAASnH,KAAKoH,SAASpL,EAAO+D,GAIpC,OAFA1M,OAAOqK,eAAeyJ,EAAQ/U,EAAOmB,WAE9B4T,CACT,EAUA/U,EAAOmB,UAAU8T,WACjBjV,EAAOmB,UAAUwB,WAAa,SAAqB9B,EAAQgL,EAAYgJ,GACrEhU,KAAoB,EACpBgL,KAA4B,EACvBgJ,GAAUV,EAAYtT,EAAQgL,EAAY+B,KAAKxN,QAEpD,IAAImO,EAAMX,KAAK/M,GACXqU,EAAM,EACN1P,EAAI,EACR,OAASA,EAAIqG,IAAeqJ,GAAO,MACjC3G,GAAOX,KAAK/M,EAAS2E,GAAK0P,EAG5B,OAAO3G,CACT,EAEAvO,EAAOmB,UAAUgU,WACjBnV,EAAOmB,UAAU0B,WAAa,SAAqBhC,EAAQgL,EAAYgJ,GACrEhU,KAAoB,EACpBgL,KAA4B,EACvBgJ,GACHV,EAAYtT,EAAQgL,EAAY+B,KAAKxN,QAGvC,IAAImO,EAAMX,KAAK/M,IAAWgL,GACtBqJ,EAAM,EACV,KAAOrJ,EAAa,IAAMqJ,GAAO,MAC/B3G,GAAOX,KAAK/M,IAAWgL,GAAcqJ,EAGvC,OAAO3G,CACT,EAEAvO,EAAOmB,UAAUiU,UACjBpV,EAAOmB,UAAUkU,UAAY,SAAoBxU,EAAQgU,GAGvD,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCwN,KAAK/M,EACd,EAEAb,EAAOmB,UAAUmU,aACjBtV,EAAOmB,UAAUoU,aAAe,SAAuB1U,EAAQgU,GAG7D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCwN,KAAK/M,GAAW+M,KAAK/M,EAAS,IAAM,CAC7C,EAEAb,EAAOmB,UAAUqU,aACjBxV,EAAOmB,UAAU8N,aAAe,SAAuBpO,EAAQgU,GAG7D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACnCwN,KAAK/M,IAAW,EAAK+M,KAAK/M,EAAS,EAC7C,EAEAb,EAAOmB,UAAUsU,aACjBzV,EAAOmB,UAAUyC,aAAe,SAAuB/C,EAAQgU,GAI7D,OAHAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,SAElCwN,KAAK/M,GACT+M,KAAK/M,EAAS,IAAM,EACpB+M,KAAK/M,EAAS,IAAM,IACD,SAAnB+M,KAAK/M,EAAS,EACrB,EAEAb,EAAOmB,UAAUuU,aACjB1V,EAAOmB,UAAU6C,aAAe,SAAuBnD,EAAQgU,GAI7D,OAHAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAEpB,SAAfwN,KAAK/M,IACT+M,KAAK/M,EAAS,IAAM,GACrB+M,KAAK/M,EAAS,IAAM,EACrB+M,KAAK/M,EAAS,GAClB,EAEAb,EAAOmB,UAAUwU,gBAAkBC,GAAmB,SAA0B/U,GAE9EgV,EADAhV,KAAoB,EACG,UACvB,MAAMiV,EAAQlI,KAAK/M,GACbkV,EAAOnI,KAAK/M,EAAS,QACbmB,IAAV8T,QAAgC9T,IAAT+T,GACzBC,EAAYnV,EAAQ+M,KAAKxN,OAAS,GAGpC,MAAMqB,EAAKqU,EACQ,IAAjBlI,OAAO/M,GACU,MAAjB+M,OAAO/M,GACP+M,OAAO/M,GAAU,GAAK,GAElByP,EAAK1C,OAAO/M,GACC,IAAjB+M,OAAO/M,GACU,MAAjB+M,OAAO/M,GACPkV,EAAO,GAAK,GAEd,OAAOvB,OAAO/S,IAAO+S,OAAOlE,IAAOkE,OAAO,IAC5C,IAEAxU,EAAOmB,UAAU8U,gBAAkBL,GAAmB,SAA0B/U,GAE9EgV,EADAhV,KAAoB,EACG,UACvB,MAAMiV,EAAQlI,KAAK/M,GACbkV,EAAOnI,KAAK/M,EAAS,QACbmB,IAAV8T,QAAgC9T,IAAT+T,GACzBC,EAAYnV,EAAQ+M,KAAKxN,OAAS,GAGpC,MAAMkQ,EAAKwF,EAAQ,GAAK,GACL,MAAjBlI,OAAO/M,GACU,IAAjB+M,OAAO/M,GACP+M,OAAO/M,GAEHY,EAAKmM,OAAO/M,GAAU,GAAK,GACd,MAAjB+M,OAAO/M,GACU,IAAjB+M,OAAO/M,GACPkV,EAEF,OAAQvB,OAAOlE,IAAOkE,OAAO,KAAOA,OAAO/S,EAC7C,IAEAzB,EAAOmB,UAAU6B,UAAY,SAAoBnC,EAAQgL,EAAYgJ,GACnEhU,KAAoB,EACpBgL,KAA4B,EACvBgJ,GAAUV,EAAYtT,EAAQgL,EAAY+B,KAAKxN,QAEpD,IAAImO,EAAMX,KAAK/M,GACXqU,EAAM,EACN1P,EAAI,EACR,OAASA,EAAIqG,IAAeqJ,GAAO,MACjC3G,GAAOX,KAAK/M,EAAS2E,GAAK0P,EAM5B,OAJAA,GAAO,IAEH3G,GAAO2G,IAAK3G,GAAOpM,KAAKmB,IAAI,EAAG,EAAIuI,IAEhC0C,CACT,EAEAvO,EAAOmB,UAAUgC,UAAY,SAAoBtC,EAAQgL,EAAYgJ,GACnEhU,KAAoB,EACpBgL,KAA4B,EACvBgJ,GAAUV,EAAYtT,EAAQgL,EAAY+B,KAAKxN,QAEpD,IAAIoF,EAAIqG,EACJqJ,EAAM,EACN3G,EAAMX,KAAK/M,IAAW2E,GAC1B,KAAOA,EAAI,IAAM0P,GAAO,MACtB3G,GAAOX,KAAK/M,IAAW2E,GAAK0P,EAM9B,OAJAA,GAAO,IAEH3G,GAAO2G,IAAK3G,GAAOpM,KAAKmB,IAAI,EAAG,EAAIuI,IAEhC0C,CACT,EAEAvO,EAAOmB,UAAU+U,SAAW,SAAmBrV,EAAQgU,GAGrD,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACtB,IAAfwN,KAAK/M,IAC0B,GAA5B,IAAO+M,KAAK/M,GAAU,GADK+M,KAAK/M,EAE3C,EAEAb,EAAOmB,UAAUgV,YAAc,SAAsBtV,EAAQgU,GAC3DhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAC3C,MAAMmO,EAAMX,KAAK/M,GAAW+M,KAAK/M,EAAS,IAAM,EAChD,OAAc,MAAN0N,EAAsB,WAANA,EAAmBA,CAC7C,EAEAvO,EAAOmB,UAAUiV,YAAc,SAAsBvV,EAAQgU,GAC3DhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAC3C,MAAMmO,EAAMX,KAAK/M,EAAS,GAAM+M,KAAK/M,IAAW,EAChD,OAAc,MAAN0N,EAAsB,WAANA,EAAmBA,CAC7C,EAEAvO,EAAOmB,UAAUgD,YAAc,SAAsBtD,EAAQgU,GAI3D,OAHAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAEnCwN,KAAK/M,GACV+M,KAAK/M,EAAS,IAAM,EACpB+M,KAAK/M,EAAS,IAAM,GACpB+M,KAAK/M,EAAS,IAAM,EACzB,EAEAb,EAAOmB,UAAUmD,YAAc,SAAsBzD,EAAQgU,GAI3D,OAHAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QAEnCwN,KAAK/M,IAAW,GACrB+M,KAAK/M,EAAS,IAAM,GACpB+M,KAAK/M,EAAS,IAAM,EACpB+M,KAAK/M,EAAS,EACnB,EAEAb,EAAOmB,UAAUkV,eAAiBT,GAAmB,SAAyB/U,GAE5EgV,EADAhV,KAAoB,EACG,UACvB,MAAMiV,EAAQlI,KAAK/M,GACbkV,EAAOnI,KAAK/M,EAAS,QACbmB,IAAV8T,QAAgC9T,IAAT+T,GACzBC,EAAYnV,EAAQ+M,KAAKxN,OAAS,GAGpC,MAAMmO,EAAMX,KAAK/M,EAAS,GACL,IAAnB+M,KAAK/M,EAAS,GACK,MAAnB+M,KAAK/M,EAAS,IACbkV,GAAQ,IAEX,OAAQvB,OAAOjG,IAAQiG,OAAO,KAC5BA,OAAOsB,EACU,IAAjBlI,OAAO/M,GACU,MAAjB+M,OAAO/M,GACP+M,OAAO/M,GAAU,GAAK,GAC1B,IAEAb,EAAOmB,UAAUmV,eAAiBV,GAAmB,SAAyB/U,GAE5EgV,EADAhV,KAAoB,EACG,UACvB,MAAMiV,EAAQlI,KAAK/M,GACbkV,EAAOnI,KAAK/M,EAAS,QACbmB,IAAV8T,QAAgC9T,IAAT+T,GACzBC,EAAYnV,EAAQ+M,KAAKxN,OAAS,GAGpC,MAAMmO,GAAOuH,GAAS,IACH,MAAjBlI,OAAO/M,GACU,IAAjB+M,OAAO/M,GACP+M,OAAO/M,GAET,OAAQ2T,OAAOjG,IAAQiG,OAAO,KAC5BA,OAAO5G,OAAO/M,GAAU,GAAK,GACZ,MAAjB+M,OAAO/M,GACU,IAAjB+M,OAAO/M,GACPkV,EACJ,IAEA/V,EAAOmB,UAAUsD,YAAc,SAAsB5D,EAAQgU,GAG3D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCyK,EAAQmE,KAAKpB,KAAM/M,GAAQ,EAAM,GAAI,EAC9C,EAEAb,EAAOmB,UAAUyD,YAAc,SAAsB/D,EAAQgU,GAG3D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCyK,EAAQmE,KAAKpB,KAAM/M,GAAQ,EAAO,GAAI,EAC/C,EAEAb,EAAOmB,UAAU4D,aAAe,SAAuBlE,EAAQgU,GAG7D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCyK,EAAQmE,KAAKpB,KAAM/M,GAAQ,EAAM,GAAI,EAC9C,EAEAb,EAAOmB,UAAU+D,aAAe,SAAuBrE,EAAQgU,GAG7D,OAFAhU,KAAoB,EACfgU,GAAUV,EAAYtT,EAAQ,EAAG+M,KAAKxN,QACpCyK,EAAQmE,KAAKpB,KAAM/M,GAAQ,EAAO,GAAI,EAC/C,EAQAb,EAAOmB,UAAUoV,YACjBvW,EAAOmB,UAAUyB,YAAc,SAAsBiG,EAAOhI,EAAQgL,EAAYgJ,GAI9E,GAHAhM,GAASA,EACThI,KAAoB,EACpBgL,KAA4B,GACvBgJ,EAAU,CAEbR,EAASzG,KAAM/E,EAAOhI,EAAQgL,EADb1J,KAAKmB,IAAI,EAAG,EAAIuI,GAAc,EACK,EACtD,CAEA,IAAIqJ,EAAM,EACN1P,EAAI,EAER,IADAoI,KAAK/M,GAAkB,IAARgI,IACNrD,EAAIqG,IAAeqJ,GAAO,MACjCtH,KAAK/M,EAAS2E,GAAMqD,EAAQqM,EAAO,IAGrC,OAAOrU,EAASgL,CAClB,EAEA7L,EAAOmB,UAAUqV,YACjBxW,EAAOmB,UAAU2B,YAAc,SAAsB+F,EAAOhI,EAAQgL,EAAYgJ,GAI9E,GAHAhM,GAASA,EACThI,KAAoB,EACpBgL,KAA4B,GACvBgJ,EAAU,CAEbR,EAASzG,KAAM/E,EAAOhI,EAAQgL,EADb1J,KAAKmB,IAAI,EAAG,EAAIuI,GAAc,EACK,EACtD,CAEA,IAAIrG,EAAIqG,EAAa,EACjBqJ,EAAM,EAEV,IADAtH,KAAK/M,EAAS2E,GAAa,IAARqD,IACVrD,GAAK,IAAM0P,GAAO,MACzBtH,KAAK/M,EAAS2E,GAAMqD,EAAQqM,EAAO,IAGrC,OAAOrU,EAASgL,CAClB,EAEA7L,EAAOmB,UAAUsV,WACjBzW,EAAOmB,UAAUuV,WAAa,SAAqB7N,EAAOhI,EAAQgU,GAKhE,OAJAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,IAAM,GACtD+M,KAAK/M,GAAmB,IAARgI,EACThI,EAAS,CAClB,EAEAb,EAAOmB,UAAUwV,cACjB3W,EAAOmB,UAAUyV,cAAgB,SAAwB/N,EAAOhI,EAAQgU,GAMtE,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,MAAQ,GACxD+M,KAAK/M,GAAmB,IAARgI,EAChB+E,KAAK/M,EAAS,GAAMgI,IAAU,EACvBhI,EAAS,CAClB,EAEAb,EAAOmB,UAAU0V,cACjB7W,EAAOmB,UAAU2V,cAAgB,SAAwBjO,EAAOhI,EAAQgU,GAMtE,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,MAAQ,GACxD+M,KAAK/M,GAAWgI,IAAU,EAC1B+E,KAAK/M,EAAS,GAAc,IAARgI,EACbhI,EAAS,CAClB,EAEAb,EAAOmB,UAAU4V,cACjB/W,EAAOmB,UAAU2C,cAAgB,SAAwB+E,EAAOhI,EAAQgU,GAQtE,OAPAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,WAAY,GAC5D+M,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,EAC9B+E,KAAK/M,GAAmB,IAARgI,EACThI,EAAS,CAClB,EAEAb,EAAOmB,UAAU6V,cACjBhX,EAAOmB,UAAU8C,cAAgB,SAAwB4E,EAAOhI,EAAQgU,GAQtE,OAPAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,WAAY,GAC5D+M,KAAK/M,GAAWgI,IAAU,GAC1B+E,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,EAC9B+E,KAAK/M,EAAS,GAAc,IAARgI,EACbhI,EAAS,CAClB,EA8CAb,EAAOmB,UAAU8V,iBAAmBrB,GAAmB,SAA2B/M,GAChF,OAAOyL,EAAe1G,KAAM/E,EADiE9G,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrDyS,OAAO,GAAIA,OAAO,sBAC/D,IAEAxU,EAAOmB,UAAU+V,iBAAmBtB,GAAmB,SAA2B/M,GAChF,OAAO4L,EAAe7G,KAAM/E,EADiE9G,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrDyS,OAAO,GAAIA,OAAO,sBAC/D,IAEAxU,EAAOmB,UAAU8B,WAAa,SAAqB4F,EAAOhI,EAAQgL,EAAYgJ,GAG5E,GAFAhM,GAASA,EACThI,KAAoB,GACfgU,EAAU,CACb,MAAMsC,EAAQhV,KAAKmB,IAAI,EAAI,EAAIuI,EAAc,GAE7CwI,EAASzG,KAAM/E,EAAOhI,EAAQgL,EAAYsL,EAAQ,GAAIA,EACxD,CAEA,IAAI3R,EAAI,EACJ0P,EAAM,EACNkC,EAAM,EAEV,IADAxJ,KAAK/M,GAAkB,IAARgI,IACNrD,EAAIqG,IAAeqJ,GAAO,MAC7BrM,EAAQ,GAAa,IAARuO,GAAsC,IAAzBxJ,KAAK/M,EAAS2E,EAAI,KAC9C4R,EAAM,GAERxJ,KAAK/M,EAAS2E,IAAOqD,EAAQqM,GAAQ,GAAKkC,EAAM,IAGlD,OAAOvW,EAASgL,CAClB,EAEA7L,EAAOmB,UAAUiC,WAAa,SAAqByF,EAAOhI,EAAQgL,EAAYgJ,GAG5E,GAFAhM,GAASA,EACThI,KAAoB,GACfgU,EAAU,CACb,MAAMsC,EAAQhV,KAAKmB,IAAI,EAAI,EAAIuI,EAAc,GAE7CwI,EAASzG,KAAM/E,EAAOhI,EAAQgL,EAAYsL,EAAQ,GAAIA,EACxD,CAEA,IAAI3R,EAAIqG,EAAa,EACjBqJ,EAAM,EACNkC,EAAM,EAEV,IADAxJ,KAAK/M,EAAS2E,GAAa,IAARqD,IACVrD,GAAK,IAAM0P,GAAO,MACrBrM,EAAQ,GAAa,IAARuO,GAAsC,IAAzBxJ,KAAK/M,EAAS2E,EAAI,KAC9C4R,EAAM,GAERxJ,KAAK/M,EAAS2E,IAAOqD,EAAQqM,GAAQ,GAAKkC,EAAM,IAGlD,OAAOvW,EAASgL,CAClB,EAEA7L,EAAOmB,UAAUkW,UAAY,SAAoBxO,EAAOhI,EAAQgU,GAM9D,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,KAAO,KACnDgI,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtC+E,KAAK/M,GAAmB,IAARgI,EACThI,EAAS,CAClB,EAEAb,EAAOmB,UAAUmW,aAAe,SAAuBzO,EAAOhI,EAAQgU,GAMpE,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,OAAS,OACzD+M,KAAK/M,GAAmB,IAARgI,EAChB+E,KAAK/M,EAAS,GAAMgI,IAAU,EACvBhI,EAAS,CAClB,EAEAb,EAAOmB,UAAUoW,aAAe,SAAuB1O,EAAOhI,EAAQgU,GAMpE,OALAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,OAAS,OACzD+M,KAAK/M,GAAWgI,IAAU,EAC1B+E,KAAK/M,EAAS,GAAc,IAARgI,EACbhI,EAAS,CAClB,EAEAb,EAAOmB,UAAUiD,aAAe,SAAuByE,EAAOhI,EAAQgU,GAQpE,OAPAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,YAAa,YAC7D+M,KAAK/M,GAAmB,IAARgI,EAChB+E,KAAK/M,EAAS,GAAMgI,IAAU,EAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,GACvBhI,EAAS,CAClB,EAEAb,EAAOmB,UAAUoD,aAAe,SAAuBsE,EAAOhI,EAAQgU,GASpE,OARAhM,GAASA,EACThI,KAAoB,EACfgU,GAAUR,EAASzG,KAAM/E,EAAOhI,EAAQ,EAAG,YAAa,YACzDgI,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C+E,KAAK/M,GAAWgI,IAAU,GAC1B+E,KAAK/M,EAAS,GAAMgI,IAAU,GAC9B+E,KAAK/M,EAAS,GAAMgI,IAAU,EAC9B+E,KAAK/M,EAAS,GAAc,IAARgI,EACbhI,EAAS,CAClB,EAEAb,EAAOmB,UAAUqW,gBAAkB5B,GAAmB,SAA0B/M,GAC9E,OAAOyL,EAAe1G,KAAM/E,EAD+D9G,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAClDyS,OAAO,sBAAuBA,OAAO,sBACnF,IAEAxU,EAAOmB,UAAUsW,gBAAkB7B,GAAmB,SAA0B/M,GAC9E,OAAO4L,EAAe7G,KAAM/E,EAD+D9G,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAClDyS,OAAO,sBAAuBA,OAAO,sBACnF,IAiBAxU,EAAOmB,UAAUuD,aAAe,SAAuBmE,EAAOhI,EAAQgU,GACpE,OAAOF,EAAW/G,KAAM/E,EAAOhI,GAAQ,EAAMgU,EAC/C,EAEA7U,EAAOmB,UAAU0D,aAAe,SAAuBgE,EAAOhI,EAAQgU,GACpE,OAAOF,EAAW/G,KAAM/E,EAAOhI,GAAQ,EAAOgU,EAChD,EAYA7U,EAAOmB,UAAU6D,cAAgB,SAAwB6D,EAAOhI,EAAQgU,GACtE,OAAOC,EAAYlH,KAAM/E,EAAOhI,GAAQ,EAAMgU,EAChD,EAEA7U,EAAOmB,UAAUgE,cAAgB,SAAwB0D,EAAOhI,EAAQgU,GACtE,OAAOC,EAAYlH,KAAM/E,EAAOhI,GAAQ,EAAOgU,EACjD,EAGA7U,EAAOmB,UAAUoJ,KAAO,SAAe+I,EAAQoE,EAAa9N,EAAO+D,GACjE,IAAK3N,EAAO0M,SAAS4G,GAAS,MAAM,IAAIxT,UAAU,+BAQlD,GAPK8J,IAAOA,EAAQ,GACf+D,GAAe,IAARA,IAAWA,EAAMC,KAAKxN,QAC9BsX,GAAepE,EAAOlT,SAAQsX,EAAcpE,EAAOlT,QAClDsX,IAAaA,EAAc,GAC5B/J,EAAM,GAAKA,EAAM/D,IAAO+D,EAAM/D,GAG9B+D,IAAQ/D,EAAO,OAAO,EAC1B,GAAsB,IAAlB0J,EAAOlT,QAAgC,IAAhBwN,KAAKxN,OAAc,OAAO,EAGrD,GAAIsX,EAAc,EAChB,MAAM,IAAI5W,WAAW,6BAEvB,GAAI8I,EAAQ,GAAKA,GAASgE,KAAKxN,OAAQ,MAAM,IAAIU,WAAW,sBAC5D,GAAI6M,EAAM,EAAG,MAAM,IAAI7M,WAAW,2BAG9B6M,EAAMC,KAAKxN,SAAQuN,EAAMC,KAAKxN,QAC9BkT,EAAOlT,OAASsX,EAAc/J,EAAM/D,IACtC+D,EAAM2F,EAAOlT,OAASsX,EAAc9N,GAGtC,MAAM+C,EAAMgB,EAAM/D,EAalB,OAXIgE,OAAS0F,GAAqD,oBAApCzT,WAAWsB,UAAUwW,WAEjD/J,KAAK+J,WAAWD,EAAa9N,EAAO+D,GAEpC9N,WAAWsB,UAAUyR,IAAI7K,KACvBuL,EACA1F,KAAKoH,SAASpL,EAAO+D,GACrB+J,GAIG/K,CACT,EAMA3M,EAAOmB,UAAU+Q,KAAO,SAAe3D,EAAK3E,EAAO+D,EAAKhC,GAEtD,GAAmB,kBAAR4C,EAAkB,CAS3B,GARqB,kBAAV3E,GACT+B,EAAW/B,EACXA,EAAQ,EACR+D,EAAMC,KAAKxN,QACa,kBAARuN,IAChBhC,EAAWgC,EACXA,EAAMC,KAAKxN,aAEI4B,IAAb2J,GAA8C,kBAAbA,EACnC,MAAM,IAAI7L,UAAU,6BAEtB,GAAwB,kBAAb6L,IAA0B3L,EAAO4L,WAAWD,GACrD,MAAM,IAAI7L,UAAU,qBAAuB6L,GAE7C,GAAmB,IAAf4C,EAAInO,OAAc,CACpB,MAAMwX,EAAOrJ,EAAIyB,WAAW,IACV,SAAbrE,GAAuBiM,EAAO,KAClB,WAAbjM,KAEF4C,EAAMqJ,EAEV,CACF,KAA0B,kBAARrJ,EAChBA,GAAY,IACY,mBAARA,IAChBA,EAAM9N,OAAO8N,IAIf,GAAI3E,EAAQ,GAAKgE,KAAKxN,OAASwJ,GAASgE,KAAKxN,OAASuN,EACpD,MAAM,IAAI7M,WAAW,sBAGvB,GAAI6M,GAAO/D,EACT,OAAOgE,KAQT,IAAIpI,EACJ,GANAoE,KAAkB,EAClB+D,OAAc3L,IAAR2L,EAAoBC,KAAKxN,OAASuN,IAAQ,EAE3CY,IAAKA,EAAM,GAGG,kBAARA,EACT,IAAK/I,EAAIoE,EAAOpE,EAAImI,IAAOnI,EACzBoI,KAAKpI,GAAK+I,MAEP,CACL,MAAM2F,EAAQlU,EAAO0M,SAAS6B,GAC1BA,EACAvO,EAAOC,KAAKsO,EAAK5C,GACfgB,EAAMuH,EAAM9T,OAClB,GAAY,IAARuM,EACF,MAAM,IAAI7M,UAAU,cAAgByO,EAClC,qCAEJ,IAAK/I,EAAI,EAAGA,EAAImI,EAAM/D,IAASpE,EAC7BoI,KAAKpI,EAAIoE,GAASsK,EAAM1O,EAAImH,EAEhC,CAEA,OAAOiB,IACT,EAMA,MAAMiK,EAAS,CAAC,EAChB,SAASC,EAAGC,EAAKC,EAAYC,GAC3BJ,EAAOE,GAAO,cAAwBE,EACpC3X,cACE4X,QAEAjX,OAAO6Q,eAAelE,KAAM,UAAW,CACrC/E,MAAOmP,EAAW3G,MAAMzD,KAAM7L,WAC9BoW,UAAU,EACVC,cAAc,IAIhBxK,KAAKpM,KAAQ,GAAEoM,KAAKpM,SAASuW,KAG7BnK,KAAKyK,aAEEzK,KAAKpM,IACd,CAEIoW,WACF,OAAOG,CACT,CAEIH,SAAM/O,GACR5H,OAAO6Q,eAAelE,KAAM,OAAQ,CAClCwK,cAAc,EACdrG,YAAY,EACZlJ,QACAsP,UAAU,GAEd,CAEAhO,WACE,MAAQ,GAAEyD,KAAKpM,SAASuW,OAASnK,KAAK0K,SACxC,EAEJ,CA+BA,SAASC,EAAuBhK,GAC9B,IAAImC,EAAM,GACNlL,EAAI+I,EAAInO,OACZ,MAAMwJ,EAAmB,MAAX2E,EAAI,GAAa,EAAI,EACnC,KAAO/I,GAAKoE,EAAQ,EAAGpE,GAAK,EAC1BkL,EAAO,IAAGnC,EAAIvE,MAAMxE,EAAI,EAAGA,KAAKkL,IAElC,MAAQ,GAAEnC,EAAIvE,MAAM,EAAGxE,KAAKkL,GAC9B,CAYA,SAAS6D,EAAY1L,EAAO4H,EAAK0C,EAAK9H,EAAKxK,EAAQgL,GACjD,GAAIhD,EAAQsK,GAAOtK,EAAQ4H,EAAK,CAC9B,MAAMrC,EAAmB,kBAARqC,EAAmB,IAAM,GAC1C,IAAI+H,EAWJ,MARIA,EAFA3M,EAAa,EACH,IAAR4E,GAAaA,IAAQ+D,OAAO,GACrB,OAAMpG,YAAYA,QAA2B,GAAlBvC,EAAa,KAASuC,IAEjD,SAAQA,QAA2B,GAAlBvC,EAAa,GAAS,IAAIuC,iBACtB,GAAlBvC,EAAa,GAAS,IAAIuC,IAG/B,MAAKqC,IAAMrC,YAAY+E,IAAM/E,IAElC,IAAIyJ,EAAOY,iBAAiB,QAASD,EAAO3P,EACpD,EAtBF,SAAsBwC,EAAKxK,EAAQgL,GACjCgK,EAAehV,EAAQ,eACHmB,IAAhBqJ,EAAIxK,SAAsDmB,IAA7BqJ,EAAIxK,EAASgL,IAC5CmK,EAAYnV,EAAQwK,EAAIjL,QAAUyL,EAAa,GAEnD,CAkBE6M,CAAYrN,EAAKxK,EAAQgL,EAC3B,CAEA,SAASgK,EAAgBhN,EAAOrH,GAC9B,GAAqB,kBAAVqH,EACT,MAAM,IAAIgP,EAAOc,qBAAqBnX,EAAM,SAAUqH,EAE1D,CAEA,SAASmN,EAAanN,EAAOzI,EAAQ0M,GACnC,GAAI3K,KAAKC,MAAMyG,KAAWA,EAExB,MADAgN,EAAehN,EAAOiE,GAChB,IAAI+K,EAAOY,iBAAiB3L,GAAQ,SAAU,aAAcjE,GAGpE,GAAIzI,EAAS,EACX,MAAM,IAAIyX,EAAOe,yBAGnB,MAAM,IAAIf,EAAOY,iBAAiB3L,GAAQ,SACP,MAAKA,EAAO,EAAI,YAAY1M,IAC7ByI,EACpC,CAvFAiP,EAAE,4BACA,SAAUtW,GACR,OAAIA,EACM,GAAEA,gCAGL,gDACT,GAAGV,YACLgX,EAAE,wBACA,SAAUtW,EAAMsK,GACd,MAAQ,QAAOtK,4DAA+DsK,GAChF,GAAGhM,WACLgY,EAAE,oBACA,SAAUhI,EAAK0I,EAAOK,GACpB,IAAIC,EAAO,iBAAgBhJ,sBACvBiJ,EAAWF,EAWf,OAVIpY,OAAOC,UAAUmY,IAAU1W,KAAK6W,IAAIH,GAAS,GAAK,GACpDE,EAAWR,EAAsBlO,OAAOwO,IACd,kBAAVA,IAChBE,EAAW1O,OAAOwO,IACdA,EAAQrE,OAAO,IAAMA,OAAO,KAAOqE,IAAUrE,OAAO,IAAMA,OAAO,QACnEuE,EAAWR,EAAsBQ,IAEnCA,GAAY,KAEdD,GAAQ,eAAcN,eAAmBO,IAClCD,CACT,GAAGhY,YAiEL,MAAMmY,EAAoB,oBAgB1B,SAAS1L,EAAa7B,EAAQ0E,GAE5B,IAAIQ,EADJR,EAAQA,GAAS8I,IAEjB,MAAM9Y,EAASsL,EAAOtL,OACtB,IAAI+Y,EAAgB,KACpB,MAAMjF,EAAQ,GAEd,IAAK,IAAI1O,EAAI,EAAGA,EAAIpF,IAAUoF,EAAG,CAI/B,GAHAoL,EAAYlF,EAAOsE,WAAWxK,GAG1BoL,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAKuI,EAAe,CAElB,GAAIvI,EAAY,MAAQ,EAEjBR,GAAS,IAAM,GAAG8D,EAAMzO,KAAK,IAAM,IAAM,KAC9C,QACF,CAAO,GAAID,EAAI,IAAMpF,EAAQ,EAEtBgQ,GAAS,IAAM,GAAG8D,EAAMzO,KAAK,IAAM,IAAM,KAC9C,QACF,CAGA0T,EAAgBvI,EAEhB,QACF,CAGA,GAAIA,EAAY,MAAQ,EACjBR,GAAS,IAAM,GAAG8D,EAAMzO,KAAK,IAAM,IAAM,KAC9C0T,EAAgBvI,EAChB,QACF,CAGAA,EAAkE,OAArDuI,EAAgB,OAAU,GAAKvI,EAAY,MAC1D,MAAWuI,IAEJ/I,GAAS,IAAM,GAAG8D,EAAMzO,KAAK,IAAM,IAAM,KAMhD,GAHA0T,EAAgB,KAGZvI,EAAY,IAAM,CACpB,IAAKR,GAAS,GAAK,EAAG,MACtB8D,EAAMzO,KAAKmL,EACb,MAAO,GAAIA,EAAY,KAAO,CAC5B,IAAKR,GAAS,GAAK,EAAG,MACtB8D,EAAMzO,KACJmL,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEvB,MAAO,GAAIA,EAAY,MAAS,CAC9B,IAAKR,GAAS,GAAK,EAAG,MACtB8D,EAAMzO,KACJmL,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEvB,KAAO,MAAIA,EAAY,SASrB,MAAM,IAAIhP,MAAM,sBARhB,IAAKwO,GAAS,GAAK,EAAG,MACtB8D,EAAMzO,KACJmL,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAIvB,CACF,CAEA,OAAOsD,CACT,CA2BA,SAAS1G,EAAesC,GACtB,OAAOlF,EAAOwO,YAxHhB,SAAsBtJ,GAMpB,IAFAA,GAFAA,EAAMA,EAAIjM,MAAM,KAAK,IAEXwP,OAAOD,QAAQ6F,EAAmB,KAEpC7Y,OAAS,EAAG,MAAO,GAE3B,KAAO0P,EAAI1P,OAAS,IAAM,GACxB0P,GAAY,IAEd,OAAOA,CACT,CA4G4BuJ,CAAYvJ,GACxC,CAEA,SAASF,EAAYtN,EAAKgX,EAAKzY,EAAQT,GACrC,IAAIoF,EACJ,IAAKA,EAAI,EAAGA,EAAIpF,KACToF,EAAI3E,GAAUyY,EAAIlZ,QAAYoF,GAAKlD,EAAIlC,UADpBoF,EAExB8T,EAAI9T,EAAI3E,GAAUyB,EAAIkD,GAExB,OAAOA,CACT,CAKA,SAAS2G,EAAYM,EAAKK,GACxB,OAAOL,aAAeK,GACZ,MAAPL,GAAkC,MAAnBA,EAAInM,aAA+C,MAAxBmM,EAAInM,YAAYkB,MACzDiL,EAAInM,YAAYkB,OAASsL,EAAKtL,IACpC,CACA,SAASqL,EAAaJ,GAEpB,OAAOA,IAAQA,CACjB,CAIA,MAAMwH,EAAuB,WAC3B,MAAMsF,EAAW,mBACXC,EAAQ,IAAIxT,MAAM,KACxB,IAAK,IAAIR,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAMiU,EAAU,GAAJjU,EACZ,IAAK,IAAI4J,EAAI,EAAGA,EAAI,KAAMA,EACxBoK,EAAMC,EAAMrK,GAAKmK,EAAS/T,GAAK+T,EAASnK,EAE5C,CACA,OAAOoK,CACT,CAV6B,GAa7B,SAAS5D,EAAoB8D,GAC3B,MAAyB,qBAAXlF,OAAyBmF,EAAyBD,CAClE,CAEA,SAASC,IACP,MAAM,IAAI/X,MAAM,uBAClB,0bCzjEM,SAAUwY,EAAOhM,GACrB,IAAK3N,OAAO8wB,cAAcnjB,IAAMA,EAAI,EAAG,MAAM,IAAIxM,MAAM,2BAA2BwM,IACpF,CAMM,SAAU8F,EAAMtU,GACpB,KAAMA,aAAaC,YAAa,MAAM,IAAIC,UAAU,uBAAuB,QAAA0xB,EAAAzvB,UAAA3B,OADzBqxB,EAAiB,IAAAzrB,MAAAwrB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAjBD,EAAiBC,EAAA,GAAA3vB,UAAA2vB,GAEnE,GAAID,EAAQrxB,OAAS,IAAMqxB,EAAQ9d,SAAS/T,EAAEQ,QAC5C,MAAM,IAAIN,UAAU,iCAAiC2xB,oBAA0B7xB,EAAEQ,SACrF,CA2BA,MAAMyZ,EAAS,CACbO,SACAuX,KArCI,SAAe/xB,GACnB,GAAiB,mBAANA,EAAiB,MAAM,IAAIgC,MAAM,yBAAyBhC,IACvE,EAoCEsU,QACA0d,KAvBI,SAAeA,GACnB,GAAoB,oBAATA,GAA8C,oBAAhBA,EAAK1wB,OAC5C,MAAM,IAAIU,MAAM,mDAClBwY,EAAOwX,EAAKC,WACZzX,EAAOwX,EAAKE,SACd,EAmBEC,OAjBI,SAAiBC,GAAmC,IAApBC,IAAalwB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,KAAAA,UAAA,GACjD,GAAIiwB,EAASE,UAAW,MAAM,IAAItwB,MAAM,oCACxC,GAAIqwB,GAAiBD,EAASG,SAAU,MAAM,IAAIvwB,MAAM,wCAC1D,EAeE4uB,OAdI,SAAiBxc,EAAUge,GAC/B9d,EAAMF,GACN,MAAMvD,EAAMuhB,EAASH,UACrB,GAAI7d,EAAI5T,OAASqQ,EACf,MAAM,IAAI7O,MAAM,yDAAyD6O,IAE7E,GAWA,IChCa2hB,GCZU,kBAATzU,MAAqB,WAAYA,MAAOA,KAAK0U,ODYhCzjB,GACzB,IAAI0jB,SAAS1jB,EAAI1O,OAAQ0O,EAAIzO,WAAYyO,EAAI/C,aAGlC0mB,EAAOA,CAAC5pB,EAAchC,IAAmBgC,GAAS,GAAKhC,EAAWgC,IAAShC,EAKxF,KAHgF,KAA5D,IAAI9G,WAAW,IAAI2yB,YAAY,CAAC,YAAatyB,QAAQ,IAG9D,MAAM,IAAI0B,MAAM,+CAEboE,MAAM/F,KAAK,CAAEG,OAAQ,MAAO,CAACwF,EAAGJ,IAAMA,EAAE2E,SAAS,IAAIsoB,SAAS,EAAG,OA+DzE,SAAUC,EAAQ3lB,GAEtB,GADoB,kBAATA,IAAmBA,EAT1B,SAAsB+C,GAC1B,GAAmB,kBAARA,EACT,MAAM,IAAIhQ,UAAU,2CAA2CgQ,GAEjE,OAAO,IAAI6iB,aAActwB,OAAOyN,EAClC,CAIuCvC,CAAYR,MAC3CA,aAAgBlN,YACpB,MAAM,IAAIC,UAAU,iDAAiDiN,MACvE,OAAOA,CACT,CAoBM,MAAgB6lB,EAiBpBnW,QACE,OAAO7O,KAAKilB,YACd,EA8BI,SAAUC,EAAmCC,GACjD,MAAMC,EAAS1a,GAA+Bya,IAAkBE,OAAOP,EAAQpa,IAAU4a,SACnF1D,EAAMuD,IAIZ,OAHAC,EAAMnB,UAAYrC,EAAIqC,UACtBmB,EAAMlB,SAAWtC,EAAIsC,SACrBkB,EAAM9xB,OAAS,IAAM6xB,IACdC,CACT,CE1JM,MAAgBG,UAAgCP,EAcpDtyB,YACWwxB,EACFD,EACEuB,EACAC,GAETnb,QALS,KAAA4Z,SAAAA,EACF,KAAAD,UAAAA,EACE,KAAAuB,UAAAA,EACA,KAAAC,KAAAA,EATD,KAAAlB,UAAW,EACX,KAAA/xB,OAAS,EACT,KAAAuS,IAAM,EACN,KAAAuf,WAAY,EASpBtkB,KAAK1N,OAAS,IAAIL,WAAWiyB,GAC7BlkB,KAAK0lB,KAAOlB,EAAWxkB,KAAK1N,OAC9B,CACA+yB,OAAOlmB,GACL8M,EAAAA,OAAcjM,MACd,MAAM,KAAE0lB,EAAI,OAAEpzB,EAAM,SAAE4xB,GAAalkB,KAE7BjB,GADNI,EAAO2lB,EAAQ3lB,IACE3M,OACjB,IAAK,IAAIuS,EAAM,EAAGA,EAAMhG,GAAO,CAC7B,MAAM4mB,EAAOpxB,KAAKsO,IAAIqhB,EAAWlkB,KAAK+E,IAAKhG,EAAMgG,GAEjD,GAAI4gB,IAASzB,EAKb5xB,EAAO0S,IAAI7F,EAAKiI,SAASrC,EAAKA,EAAM4gB,GAAO3lB,KAAK+E,KAChD/E,KAAK+E,KAAO4gB,EACZ5gB,GAAO4gB,EACH3lB,KAAK+E,MAAQmf,IACflkB,KAAK4lB,QAAQF,EAAM,GACnB1lB,KAAK+E,IAAM,OAVb,CACE,MAAM8gB,EAAWrB,EAAWrlB,GAC5B,KAAO+kB,GAAYnlB,EAAMgG,EAAKA,GAAOmf,EAAUlkB,KAAK4lB,QAAQC,EAAU9gB,IAa1E,OAFA/E,KAAKxN,QAAU2M,EAAK3M,OACpBwN,KAAK8lB,aACE9lB,IACT,CACA+lB,WAAW3f,GACT6F,EAAAA,OAAcjM,MACdiM,EAAAA,OAAc7F,EAAKpG,MACnBA,KAAKukB,UAAW,EAIhB,MAAM,OAAEjyB,EAAM,KAAEozB,EAAI,SAAExB,EAAQ,KAAEuB,GAASzlB,KACzC,IAAI,IAAE+E,GAAQ/E,KAEd1N,EAAOyS,KAAS,IAChB/E,KAAK1N,OAAO8U,SAASrC,GAAKT,KAAK,GAE3BtE,KAAKwlB,UAAYtB,EAAWnf,IAC9B/E,KAAK4lB,QAAQF,EAAM,GACnB3gB,EAAM,GAGR,IAAK,IAAInN,EAAImN,EAAKnN,EAAIssB,EAAUtsB,IAAKtF,EAAOsF,GAAK,GAhFrD,SAAsB8tB,EAAgBnzB,EAAoB0I,EAAewqB,GACvE,GAAiC,oBAAtBC,EAAKM,aAA6B,OAAON,EAAKM,aAAazzB,EAAY0I,EAAOwqB,GACzF,MAAMQ,EAAOrf,OAAO,IACdsf,EAAWtf,OAAO,YAClBuf,EAAKtzB,OAAQoI,GAASgrB,EAAQC,GAC9BE,EAAKvzB,OAAOoI,EAAQirB,GACpBnK,EAAI0J,EAAO,EAAI,EACfjN,EAAIiN,EAAO,EAAI,EACrBC,EAAKW,UAAU9zB,EAAawpB,EAAGoK,EAAIV,GACnCC,EAAKW,UAAU9zB,EAAaimB,EAAG4N,EAAIX,EACrC,CA0EIO,CAAaN,EAAMxB,EAAW,EAAGtd,OAAqB,EAAd5G,KAAKxN,QAAaizB,GAC1DzlB,KAAK4lB,QAAQF,EAAM,GACnB,MAAMY,EAAQ9B,EAAWpe,GACnBrH,EAAMiB,KAAKikB,UAEjB,GAAIllB,EAAM,EAAG,MAAM,IAAI/K,MAAM,+CAC7B,MAAM6uB,EAAS9jB,EAAM,EACfwnB,EAAQvmB,KAAKoE,MACnB,GAAIye,EAAS0D,EAAM/zB,OAAQ,MAAM,IAAIwB,MAAM,sCAC3C,IAAK,IAAI4D,EAAI,EAAGA,EAAIirB,EAAQjrB,IAAK0uB,EAAMD,UAAU,EAAIzuB,EAAG2uB,EAAM3uB,GAAI6tB,EACpE,CACAH,SACE,MAAM,OAAEhzB,EAAM,UAAE2xB,GAAcjkB,KAC9BA,KAAK+lB,WAAWzzB,GAChB,MAAMwQ,EAAMxQ,EAAO8J,MAAM,EAAG6nB,GAE5B,OADAjkB,KAAKwmB,UACE1jB,CACT,CACAmiB,WAAWwB,GACTA,IAAAA,EAAO,IAAKzmB,KAAKtN,aACjB+zB,EAAGzhB,OAAOhF,KAAKoE,OACf,MAAM,SAAE8f,EAAQ,OAAE5xB,EAAM,OAAEE,EAAM,SAAE+xB,EAAQ,UAAED,EAAS,IAAEvf,GAAQ/E,KAM/D,OALAymB,EAAGj0B,OAASA,EACZi0B,EAAG1hB,IAAMA,EACT0hB,EAAGlC,SAAWA,EACdkC,EAAGnC,UAAYA,EACX9xB,EAAS0xB,GAAUuC,EAAGn0B,OAAO0S,IAAI1S,GAC9Bm0B,CACT,ECpHF,MAAMC,EAAa9f,OAAO,GAAK,GAAK,GAC9Bqf,EAAOrf,OAAO,IAGd,SAAU+f,EAAQnmB,GACtB,OADmCrM,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACpB,CAAE4nB,EAAGlpB,OAAO2N,EAAIkmB,GAAalO,EAAG3lB,OAAQ2N,GAAKylB,EAAQS,IAC7D,CAAE3K,EAAsC,EAAnClpB,OAAQ2N,GAAKylB,EAAQS,GAAiBlO,EAA4B,EAAzB3lB,OAAO2N,EAAIkmB,GAClE,CAwCA,MAqBA,EARY,CACVC,UAAS1wB,MApDL,SAAgB2wB,GAAyB,IAAVC,EAAE1yB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACjC2yB,EAAK,IAAIlC,YAAYgC,EAAIp0B,QACzBu0B,EAAK,IAAInC,YAAYgC,EAAIp0B,QAC7B,IAAK,IAAIoF,EAAI,EAAGA,EAAIgvB,EAAIp0B,OAAQoF,IAAK,CACnC,MAAM,EAAEmkB,EAAC,EAAEvD,GAAMmO,EAAQC,EAAIhvB,GAAIivB,IAChCC,EAAGlvB,GAAImvB,EAAGnvB,IAAM,CAACmkB,EAAGvD,GAEvB,MAAO,CAACsO,EAAIC,EACd,EA4CkBC,MA1CGA,CAACjL,EAAWvD,IAAe5R,OAAOmV,IAAM,IAAMkK,EAAQrf,OAAO4R,IAAM,GA2CtFyO,MAzCYA,CAAClL,EAAWvD,EAAWU,IAAc6C,IAAM7C,EAyChDgO,MAxCKA,CAACnL,EAAWvD,EAAWU,IAAe6C,GAAM,GAAK7C,EAAOV,IAAMU,EAyC1EiO,OAvCaA,CAACpL,EAAWvD,EAAWU,IAAe6C,IAAM7C,EAAMV,GAAM,GAAKU,EAuClEkO,OAtCKA,CAACrL,EAAWvD,EAAWU,IAAe6C,GAAM,GAAK7C,EAAOV,IAAMU,EAsC3DmO,OApCHA,CAACtL,EAAWvD,EAAWU,IAAe6C,GAAM,GAAK7C,EAAOV,IAAOU,EAAI,GAoCxDoO,OAnCXA,CAACvL,EAAWvD,EAAWU,IAAe6C,IAAO7C,EAAI,GAAQV,GAAM,GAAKU,EAoCjFqO,QAlCcA,CAACxL,EAAWvD,IAAcA,EAkC/BgP,QAjCKA,CAACzL,EAAWvD,IAAcuD,EAkCxC0L,OAhCaA,CAAC1L,EAAWvD,EAAWU,IAAe6C,GAAK7C,EAAMV,IAAO,GAAKU,EAgClEwO,OA/BKA,CAAC3L,EAAWvD,EAAWU,IAAeV,GAAKU,EAAM6C,IAAO,GAAK7C,EA+B1DyO,OA7BHA,CAAC5L,EAAWvD,EAAWU,IAAeV,GAAMU,EAAI,GAAQ6C,IAAO,GAAK7C,EA6BzD0O,OA5BXA,CAAC7L,EAAWvD,EAAWU,IAAe6C,GAAM7C,EAAI,GAAQV,IAAO,GAAKU,EA6BjFrG,IAxBI,SAAciU,EAAYC,EAAYc,EAAYC,GACtD,MAAMtP,GAAKuO,IAAO,IAAMe,IAAO,GAC/B,MAAO,CAAE/L,EAAI+K,EAAKe,GAAOrP,EAAI,GAAK,GAAM,GAAM,EAAGA,EAAO,EAAJA,EACtD,EAqBOuP,MAnBOA,CAAChB,EAAYe,EAAYE,KAAgBjB,IAAO,IAAMe,IAAO,IAAME,IAAO,GAmB1EC,MAlBAA,CAACC,EAAapB,EAAYe,EAAYM,IACjDrB,EAAKe,EAAKM,GAAOD,EAAM,GAAK,GAAM,GAAM,EAiBtBE,MAhBPA,CAACrB,EAAYe,EAAYE,EAAYK,KAChDtB,IAAO,IAAMe,IAAO,IAAME,IAAO,IAAMK,IAAO,GAerBC,MAddA,CAACJ,EAAapB,EAAYe,EAAYM,EAAYI,IAC7DzB,EAAKe,EAAKM,EAAKI,GAAOL,EAAM,GAAK,GAAM,GAAM,EAabM,MAVrBA,CAACN,EAAapB,EAAYe,EAAYM,EAAYI,EAAYE,IACzE3B,EAAKe,EAAKM,EAAKI,EAAKE,GAAOP,EAAM,GAAK,GAAM,GAAM,EASXQ,MAZ5BA,CAAC3B,EAAYe,EAAYE,EAAYK,EAAYM,KAC5D5B,IAAO,IAAMe,IAAO,IAAME,IAAO,IAAMK,IAAO,IAAMM,IAAO,KCjDvDC,EAAWC,GAAaC,EAAAA,MAAU,CACvC,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,sBAClEC,KAAIvoB,GAAKoG,OAAOpG,MAGZwoB,EAAa,IAAIpE,YAAY,IAC7BqE,EAAa,IAAIrE,YAAY,IAE7B,MAAOsE,UAAe3D,EAsB1B7yB,cACE4X,MAAM,IAAK,GAAI,IAAI,GAlBrB,KAAAwc,GAAK,WACL,KAAAC,IAAK,UACL,KAAAc,IAAK,WACL,KAAAC,IAAK,WACL,KAAAK,GAAK,WACL,KAAAH,IAAK,SACL,KAAAO,IAAK,WACL,KAAAF,GAAK,WACL,KAAAI,GAAK,WACL,KAAAE,IAAK,WACL,KAAAQ,IAAK,WACL,KAAAC,GAAK,UACL,KAAAC,GAAK,UACL,KAAAC,IAAK,SACL,KAAAC,GAAK,WACL,KAAAC,GAAK,SAIL,CAEUplB,MAIR,MAAM,GAAE0iB,EAAE,GAAEC,EAAE,GAAEc,EAAE,GAAEC,EAAE,GAAEK,EAAE,GAAEH,EAAE,GAAEO,EAAE,GAAEF,EAAE,GAAEI,EAAE,GAAEE,EAAE,GAAEQ,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,GAAOxpB,KAC3E,MAAO,CAAC8mB,EAAIC,EAAIc,EAAIC,EAAIK,EAAIH,EAAIO,EAAIF,EAAII,EAAIE,EAAIQ,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACtE,CAEUxkB,IACR8hB,EAAYC,EAAYc,EAAYC,EAAYK,EAAYH,EAAYO,EAAYF,EACpFI,EAAYE,EAAYQ,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,GAEpFxpB,KAAK8mB,GAAU,EAALA,EACV9mB,KAAK+mB,GAAU,EAALA,EACV/mB,KAAK6nB,GAAU,EAALA,EACV7nB,KAAK8nB,GAAU,EAALA,EACV9nB,KAAKmoB,GAAU,EAALA,EACVnoB,KAAKgoB,GAAU,EAALA,EACVhoB,KAAKuoB,GAAU,EAALA,EACVvoB,KAAKqoB,GAAU,EAALA,EACVroB,KAAKyoB,GAAU,EAALA,EACVzoB,KAAK2oB,GAAU,EAALA,EACV3oB,KAAKmpB,GAAU,EAALA,EACVnpB,KAAKopB,GAAU,EAALA,EACVppB,KAAKqpB,GAAU,EAALA,EACVrpB,KAAKspB,GAAU,EAALA,EACVtpB,KAAKupB,GAAU,EAALA,EACVvpB,KAAKwpB,GAAU,EAALA,CACZ,CACU5D,QAAQF,EAAgBzyB,GAEhC,IAAK,IAAI2E,EAAI,EAAGA,EAAI,GAAIA,IAAK3E,GAAU,EACrC+1B,EAAWpxB,GAAK8tB,EAAK+D,UAAUx2B,GAC/Bg2B,EAAWrxB,GAAK8tB,EAAK+D,UAAWx2B,GAAU,GAE5C,IAAK,IAAI2E,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAE5B,MAAM8xB,EAA4B,EAArBV,EAAWpxB,EAAI,IACtB+xB,EAA4B,EAArBV,EAAWrxB,EAAI,IACtBgyB,EAAMd,EAAAA,OAAWY,EAAMC,EAAM,GAAKb,EAAAA,OAAWY,EAAMC,EAAM,GAAKb,EAAAA,MAAUY,EAAMC,EAAM,GACpFE,EAAMf,EAAAA,OAAWY,EAAMC,EAAM,GAAKb,EAAAA,OAAWY,EAAMC,EAAM,GAAKb,EAAAA,MAAUY,EAAMC,EAAM,GAEpFG,EAA0B,EAApBd,EAAWpxB,EAAI,GACrBmyB,EAA0B,EAApBd,EAAWrxB,EAAI,GACrBoyB,EAAMlB,EAAAA,OAAWgB,EAAKC,EAAK,IAAMjB,EAAAA,OAAWgB,EAAKC,EAAK,IAAMjB,EAAAA,MAAUgB,EAAKC,EAAK,GAChFE,EAAMnB,EAAAA,OAAWgB,EAAKC,EAAK,IAAMjB,EAAAA,OAAWgB,EAAKC,EAAK,IAAMjB,EAAAA,MAAUgB,EAAKC,EAAK,GAEhFG,EAAOpB,EAAAA,MAAUe,EAAKI,EAAKhB,EAAWrxB,EAAI,GAAIqxB,EAAWrxB,EAAI,KAC7DuyB,EAAOrB,EAAAA,MAAUoB,EAAMN,EAAKI,EAAKhB,EAAWpxB,EAAI,GAAIoxB,EAAWpxB,EAAI,KACzEoxB,EAAWpxB,GAAY,EAAPuyB,EAChBlB,EAAWrxB,GAAY,EAAPsyB,EAElB,IAAI,GAAEpD,EAAE,GAAEC,EAAE,GAAEc,EAAE,GAAEC,EAAE,GAAEK,EAAE,GAAEH,EAAE,GAAEO,EAAE,GAAEF,EAAE,GAAEI,EAAE,GAAEE,EAAE,GAAEQ,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,EAAE,GAAEC,GAAOxpB,KAEzE,IAAK,IAAIpI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAE3B,MAAMwyB,EAAUtB,EAAAA,OAAWL,EAAIE,EAAI,IAAMG,EAAAA,OAAWL,EAAIE,EAAI,IAAMG,EAAAA,OAAWL,EAAIE,EAAI,IAC/E0B,EAAUvB,EAAAA,OAAWL,EAAIE,EAAI,IAAMG,EAAAA,OAAWL,EAAIE,EAAI,IAAMG,EAAAA,OAAWL,EAAIE,EAAI,IAE/E2B,EAAQ7B,EAAKU,GAAQV,EAAKY,EAC1BkB,EAAQ5B,EAAKS,GAAQT,EAAKW,EAG1BkB,EAAO1B,EAAAA,MAAUU,EAAIa,EAASE,EAAM1B,EAAUjxB,GAAIqxB,EAAWrxB,IAC7D6yB,EAAM3B,EAAAA,MAAU0B,EAAMjB,EAAIa,EAASE,EAAM1B,EAAUhxB,GAAIoxB,EAAWpxB,IAClE8yB,EAAa,EAAPF,EAENG,EAAU7B,EAAAA,OAAWhC,EAAIC,EAAI,IAAM+B,EAAAA,OAAWhC,EAAIC,EAAI,IAAM+B,EAAAA,OAAWhC,EAAIC,EAAI,IAC/E6D,EAAU9B,EAAAA,OAAWhC,EAAIC,EAAI,IAAM+B,EAAAA,OAAWhC,EAAIC,EAAI,IAAM+B,EAAAA,OAAWhC,EAAIC,EAAI,IAC/E8D,EAAQ/D,EAAKe,EAAOf,EAAKqB,EAAON,EAAKM,EACrC2C,EAAQ/D,EAAKe,EAAOf,EAAKiB,EAAOF,EAAKE,EAC3CuB,EAAU,EAALF,EACLG,EAAU,EAALF,EACLD,EAAU,EAALF,EACLG,EAAU,EAALF,EACLD,EAAU,EAALV,EACLW,EAAU,EAALT,IACF5M,EAAG0M,EAAIjQ,EAAGmQ,GAAOG,EAAAA,IAAa,EAALP,EAAa,EAALF,EAAc,EAANoC,EAAe,EAANC,IACrDnC,EAAU,EAALJ,EACLE,EAAU,EAALL,EACLG,EAAU,EAALN,EACLG,EAAU,EAALF,EACLD,EAAU,EAALf,EACLgB,EAAU,EAALf,EACL,MAAMgE,EAAMjC,EAAAA,MAAU4B,EAAKE,EAASE,GACpChE,EAAKgC,EAAAA,MAAUiC,EAAKN,EAAKE,EAASE,GAClC9D,EAAW,EAANgE,IAGJhP,EAAG+K,EAAItO,EAAGuO,GAAO+B,EAAAA,IAAkB,EAAV9oB,KAAK8mB,GAAkB,EAAV9mB,KAAK+mB,GAAa,EAALD,EAAa,EAALC,MAC3DhL,EAAG8L,EAAIrP,EAAGsP,GAAOgB,EAAAA,IAAkB,EAAV9oB,KAAK6nB,GAAkB,EAAV7nB,KAAK8nB,GAAa,EAALD,EAAa,EAALC,MAC3D/L,EAAGoM,EAAI3P,EAAGwP,GAAOc,EAAAA,IAAkB,EAAV9oB,KAAKmoB,GAAkB,EAAVnoB,KAAKgoB,GAAa,EAALG,EAAa,EAALH,MAC3DjM,EAAGwM,EAAI/P,EAAG6P,GAAOS,EAAAA,IAAkB,EAAV9oB,KAAKuoB,GAAkB,EAAVvoB,KAAKqoB,GAAa,EAALE,EAAa,EAALF,MAC3DtM,EAAG0M,EAAIjQ,EAAGmQ,GAAOG,EAAAA,IAAkB,EAAV9oB,KAAKyoB,GAAkB,EAAVzoB,KAAK2oB,GAAa,EAALF,EAAa,EAALE,MAC3D5M,EAAGoN,EAAI3Q,EAAG4Q,GAAON,EAAAA,IAAkB,EAAV9oB,KAAKmpB,GAAkB,EAAVnpB,KAAKopB,GAAa,EAALD,EAAa,EAALC,MAC3DrN,EAAGsN,EAAI7Q,EAAG8Q,GAAOR,EAAAA,IAAkB,EAAV9oB,KAAKqpB,GAAkB,EAAVrpB,KAAKspB,GAAa,EAALD,EAAa,EAALC,MAC3DvN,EAAGwN,EAAI/Q,EAAGgR,GAAOV,EAAAA,IAAkB,EAAV9oB,KAAKupB,GAAkB,EAAVvpB,KAAKwpB,GAAa,EAALD,EAAa,EAALC,IAC9DxpB,KAAKgF,IAAI8hB,EAAIC,EAAIc,EAAIC,EAAIK,EAAIH,EAAIO,EAAIF,EAAII,EAAIE,EAAIQ,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACvE,CACU1D,aACRkD,EAAW1kB,KAAK,GAChB2kB,EAAW3kB,KAAK,EAClB,CACAkiB,UACExmB,KAAK1N,OAAOgS,KAAK,GACjBtE,KAAKgF,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxD,EAGF,MAAMgmB,UAAmB9B,EAmBvBx2B,cACE4X,QAlBF,KAAAwc,IAAK,WACL,KAAAC,GAAK,UACL,KAAAc,GAAK,WACL,KAAAC,IAAK,WACL,KAAAK,GAAK,UACL,KAAAH,GAAK,UACL,KAAAO,GAAK,WACL,KAAAF,GAAK,WACL,KAAAI,GAAK,UACL,KAAAE,GAAK,WACL,KAAAQ,GAAK,WACL,KAAAC,GAAK,SACL,KAAAC,GAAK,WACL,KAAAC,GAAK,WACL,KAAAC,GAAK,UACL,KAAAC,IAAK,WAIHxpB,KAAKikB,UAAY,EACnB,EAGF,MAAMgH,UAAmB/B,EAmBvBx2B,cACE4X,QAlBF,KAAAwc,GAAK,UACL,KAAAC,IAAK,SACL,KAAAc,IAAK,WACL,KAAAC,IAAK,UACL,KAAAK,GAAK,UACL,KAAAH,GAAK,WACL,KAAAO,IAAK,WACL,KAAAF,GAAK,WACL,KAAAI,IAAK,WACL,KAAAE,IAAK,WACL,KAAAQ,IAAK,WACL,KAAAC,GAAK,WACL,KAAAC,GAAK,UACL,KAAAC,GAAK,UACL,KAAAC,GAAK,UACL,KAAAC,IAAK,WAIHxpB,KAAKikB,UAAY,EACnB,EAGF,MAAMiH,UAAehC,EAmBnBx2B,cACE4X,QAlBF,KAAAwc,IAAK,UACL,KAAAC,IAAK,WACL,KAAAc,GAAK,WACL,KAAAC,GAAK,UACL,KAAAK,IAAK,WACL,KAAAH,GAAK,UACL,KAAAO,GAAK,UACL,KAAAF,IAAK,UACL,KAAAI,GAAK,WACL,KAAAE,IAAK,QACL,KAAAQ,IAAK,WACL,KAAAC,GAAK,WACL,KAAAC,IAAK,UACL,KAAAC,GAAK,WACL,KAAAC,GAAK,WACL,KAAAC,IAAK,WAIHxpB,KAAKikB,UAAY,EACnB,EAGK,MAAMkH,EAASjG,GAAgB,IAAM,IAAIgE,IACtBhE,GAAgB,IAAM,IAAI8F,IAC1B9F,GAAgB,IAAM,IAAI+F,IAC9B/F,GAAgB,IAAM,IAAIgG,6BCpPhD,MAAME,EAAMxkB,OAAO,GACbykB,EAAMzkB,OAAO,GACb0kB,EAAM1kB,OAAO,GACb2kB,EAAM3kB,OAAO,GACb4kB,EAAO5kB,OAAO,gFACd6kB,EAAQp4B,OAAOq4B,OAAO,CACxBhnB,EAAGkC,QAAQ,GACX+kB,EAAG/kB,OAAO,iFACVglB,EAAGhlB,OAAO,iFACV4R,EAAGgT,EACHhrB,EAAGgrB,EACHzP,EAAGnV,OAAO,GACVilB,GAAIjlB,OAAO,iFACXklB,GAAIllB,OAAO,mFAGTmlB,EAAYnlB,OAAO,uEACnBolB,EAAUplB,OAAO,iFAEjBqlB,GADSrlB,OAAO,gFACIA,OAAO,kFAC3BslB,GAAoBtlB,OAAO,iFAC3BulB,GAAiBvlB,OAAO,gFACxBwlB,GAAiBxlB,OAAO,iFAC9B,MAAMylB,GACF35B,YAAYiS,EAAGC,EAAGwe,EAAGxS,GACjB5Q,KAAK2E,EAAIA,EACT3E,KAAK4E,EAAIA,EACT5E,KAAKojB,EAAIA,EACTpjB,KAAK4Q,EAAIA,CACb,CACA0b,kBAAkB9S,GACd,KAAMA,aAAa+S,IACf,MAAM,IAAIr6B,UAAU,4CAExB,OAAIsnB,EAAEnU,OAAOknB,GAAMC,MACRH,GAAcG,KAClB,IAAIH,GAAc7S,EAAE7U,EAAG6U,EAAE5U,EAAGymB,EAAK5c,GAAI+K,EAAE7U,EAAI6U,EAAE5U,GACxD,CACA0nB,qBAAqBG,GACjB,MAAMC,EA6ed,SAAqBC,GAAmB,IAAbnT,EAACrlB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAGs3B,EAAMG,EACjC,MAAMhK,EAAM,IAAIxpB,MAAMu0B,EAAKn6B,QAOrBo6B,EAAWC,GANMF,EAAK50B,QAAO,CAACO,EAAKmV,EAAK7V,IACtC6V,IAAQ2d,EACD9yB,GACXspB,EAAIhqB,GAAKU,EACFmW,GAAInW,EAAMmV,EAAK+L,KACvB6R,GACqC7R,GAOxC,OANAmT,EAAKG,aAAY,CAACx0B,EAAKmV,EAAK7V,IACpB6V,IAAQ2d,EACD9yB,GACXspB,EAAIhqB,GAAK6W,GAAInW,EAAMspB,EAAIhqB,GAAI4hB,GACpB/K,GAAInW,EAAMmV,EAAK+L,KACvBoT,GACIhL,CACX,CA7fsBmL,CAAYN,EAAO1D,KAAKvP,GAAMA,EAAE4J,KAC9C,OAAOqJ,EAAO1D,KAAI,CAACvP,EAAG5hB,IAAM4hB,EAAEwT,SAASN,EAAM90B,KACjD,CACA00B,kBAAkBG,GACd,OAAOzsB,KAAKitB,cAAcR,GAAQ1D,IAAI/oB,KAAKktB,WAC/C,CACA7nB,OAAO8nB,GACHC,GAAeD,GACf,MAAQxoB,EAAG0oB,EAAIzoB,EAAG0oB,EAAIlK,EAAGmK,GAAOvtB,MACxB2E,EAAG6oB,EAAI5oB,EAAG6oB,EAAIrK,EAAGsK,GAAOP,EAC1BQ,EAAOlf,GAAI4e,EAAKK,GAChBE,EAAOnf,GAAI+e,EAAKD,GAChBM,EAAOpf,GAAI6e,EAAKI,GAChBI,EAAOrf,GAAIgf,EAAKF,GACtB,OAAOI,IAASC,GAAQC,IAASC,CACrC,CACAC,SACI,OAAO,IAAI1B,GAAc5d,IAAKzO,KAAK2E,GAAI3E,KAAK4E,EAAG5E,KAAKojB,EAAG3U,IAAKzO,KAAK4Q,GACrE,CACAod,SACI,MAAQrpB,EAAG0oB,EAAIzoB,EAAG0oB,EAAIlK,EAAGmK,GAAOvtB,MAC1B,EAAE0E,GAAM+mB,EACR1N,EAAItP,GAAI4e,EAAKA,GACbrP,EAAIvP,GAAI6e,EAAKA,GACbrP,EAAIxP,GAAI6c,EAAM7c,GAAI8e,EAAKA,IACvBrP,EAAIzP,GAAI/J,EAAIqZ,GACZkQ,EAAOZ,EAAKC,EACZpjB,EAAIuE,GAAIA,GAAIwf,EAAOA,GAAQlQ,EAAIC,GAC/BkQ,EAAIhQ,EAAIF,EACRmQ,EAAID,EAAIjQ,EACRmQ,EAAIlQ,EAAIF,EACRqQ,EAAK5f,GAAIvE,EAAIikB,GACbG,EAAK7f,GAAIyf,EAAIE,GACbG,EAAK9f,GAAIvE,EAAIkkB,GACbI,EAAK/f,GAAI0f,EAAID,GACnB,OAAO,IAAI7B,GAAcgC,EAAIC,EAAIE,EAAID,EACzC,CACA1b,IAAIsa,GACAC,GAAeD,GACf,MAAQxoB,EAAG0oB,EAAIzoB,EAAG0oB,EAAIlK,EAAGmK,EAAI3c,EAAG6d,GAAOzuB,MAC/B2E,EAAG6oB,EAAI5oB,EAAG6oB,EAAIrK,EAAGsK,EAAI9c,EAAG8d,GAAOvB,EACjCpP,EAAItP,IAAK6e,EAAKD,IAAOI,EAAKD,IAC1BxP,EAAIvP,IAAK6e,EAAKD,IAAOI,EAAKD,IAC1BW,EAAI1f,GAAIuP,EAAID,GAClB,GAAIoQ,IAAM/C,EACN,OAAOprB,KAAKguB,SAChB,MAAM/P,EAAIxP,GAAI8e,EAAKjC,EAAMoD,GACnBxQ,EAAIzP,GAAIggB,EAAKnD,EAAMoC,GACnBxjB,EAAIgU,EAAID,EACRiQ,EAAIlQ,EAAID,EACRqQ,EAAIlQ,EAAID,EACRoQ,EAAK5f,GAAIvE,EAAIikB,GACbG,EAAK7f,GAAIyf,EAAIE,GACbG,EAAK9f,GAAIvE,EAAIkkB,GACbI,EAAK/f,GAAI0f,EAAID,GACnB,OAAO,IAAI7B,GAAcgC,EAAIC,EAAIE,EAAID,EACzC,CACAI,SAASxB,GACL,OAAOntB,KAAK6S,IAAIsa,EAAMY,SAC1B,CACAa,iBAAiBC,GACb,MAAMC,EAAU,EAAI,IAAMD,EACpBpC,EAAS,GACf,IAAIjT,EAAIxZ,KACJyM,EAAO+M,EACX,IAAK,IAAIvM,EAAS,EAAGA,EAAS6hB,EAAS7hB,IAAU,CAC7CR,EAAO+M,EACPiT,EAAO50B,KAAK4U,GACZ,IAAK,IAAI7U,EAAI,EAAGA,EAAI,IAAMi3B,EAAI,GAAIj3B,IAC9B6U,EAAOA,EAAKoG,IAAI2G,GAChBiT,EAAO50B,KAAK4U,GAEhB+M,EAAI/M,EAAKuhB,QACb,CACA,OAAOvB,CACX,CACAsC,KAAKvuB,EAAGwuB,IACCA,GAAehvB,KAAKqF,OAAOgnB,GAAc4C,QAC1CD,EAAczC,GAAM0C,MACxB,MAAMJ,EAAKG,GAAeA,EAAYE,cAAiB,EACvD,GAAI,IAAML,EACN,MAAM,IAAI76B,MAAM,iEAEpB,IAAIm7B,EAAcH,GAAeI,GAAiBhrB,IAAI4qB,GACjDG,IACDA,EAAcnvB,KAAK4uB,iBAAiBC,GAChCG,GAAqB,IAANH,IACfM,EAAc9C,GAAcgD,WAAWF,GACvCC,GAAiBpqB,IAAIgqB,EAAaG,KAG1C,IAAI3V,EAAI6S,GAAcG,KAClB8C,EAAIjD,GAAc4C,KACtB,MAAMH,EAAU,EAAI,IAAMD,EACpBU,EAAa,IAAMV,EAAI,GACvB7S,EAAOpV,OAAO,GAAKioB,EAAI,GACvBW,EAAY,GAAKX,EACjBY,EAAU7oB,OAAOioB,GACvB,IAAK,IAAI5hB,EAAS,EAAGA,EAAS6hB,EAAS7hB,IAAU,CAC7C,MAAMha,EAASga,EAASsiB,EACxB,IAAIG,EAAQ78B,OAAO2N,EAAIwb,GACvBxb,IAAMivB,EACFC,EAAQH,IACRG,GAASF,EACThvB,GAAK6qB,GAET,MAAMsE,EAAU18B,EACV28B,EAAU38B,EAASsB,KAAK6W,IAAIskB,GAAS,EACrCG,EAAQ5iB,EAAS,IAAM,EACvB6iB,EAAQJ,EAAQ,EACR,IAAVA,EACAJ,EAAIA,EAAEzc,IAAIkd,GAAgBF,EAAOV,EAAYQ,KAG7CnW,EAAIA,EAAE3G,IAAIkd,GAAgBD,EAAOX,EAAYS,IAErD,CACA,OAAOvD,GAAcgD,WAAW,CAAC7V,EAAG8V,IAAI,EAC5C,CACAU,SAASC,EAAQjB,GACb,OAAOhvB,KAAK+uB,KAAKmB,GAAgBD,EAAQxE,EAAMjT,GAAIwW,EACvD,CACAmB,eAAeF,GACX,IAAIzvB,EAAI0vB,GAAgBD,EAAQxE,EAAMjT,GAAG,GACzC,MAAM0V,EAAI7B,GAAc4C,KAClBmB,EAAK/D,GAAcG,KACzB,GAAIhsB,IAAM4qB,EACN,OAAOgF,EACX,GAAIpwB,KAAKqF,OAAO+qB,IAAO5vB,IAAM6qB,EACzB,OAAOrrB,KACX,GAAIA,KAAKqF,OAAO6oB,GACZ,OAAOluB,KAAK+uB,KAAKvuB,GACrB,IAAIgZ,EAAI4W,EACJzE,EAAI3rB,KACR,KAAOQ,EAAI4qB,GACH5qB,EAAI6qB,IACJ7R,EAAIA,EAAE3G,IAAI8Y,IACdA,EAAIA,EAAEqC,SACNxtB,IAAM6qB,EAEV,OAAO7R,CACX,CACA6W,eACI,OAAOrwB,KAAKmwB,eAAe1E,EAAM1P,GAAG1W,OAAOgnB,GAAcG,KAC7D,CACA8D,gBACI,IAAI9W,EAAIxZ,KAAKmwB,eAAe1E,EAAMjT,EAAI8S,GAAK0C,SAG3C,OAFIvC,EAAMjT,EAAI8S,IACV9R,EAAIA,EAAE3G,IAAI7S,OACPwZ,EAAEnU,OAAOgnB,GAAcG,KAClC,CACAQ,SAASuD,GACL,MAAM,EAAE5rB,EAAC,EAAEC,EAAC,EAAEwe,GAAMpjB,KACdwwB,EAAMxwB,KAAKqF,OAAOgnB,GAAcG,MAC1B,MAAR+D,IACAA,EAAOC,EAAMjF,EAAMsB,GAAOzJ,IAC9B,MAAMqN,EAAKhiB,GAAI9J,EAAI4rB,GACbG,EAAKjiB,GAAI7J,EAAI2rB,GACbI,EAAKliB,GAAI2U,EAAImN,GACnB,GAAIC,EACA,OAAOjE,GAAMC,KACjB,GAAImE,IAAOtF,EACP,MAAM,IAAIr3B,MAAM,oBACpB,OAAO,IAAIu4B,GAAMkE,EAAIC,EACzB,CACAE,qBACIC,IACJ,CACAC,mBACID,IACJ,CACAE,oBACIF,IACJ,EAIJ,SAASd,GAAgBiB,EAAWC,GAChC,MAAMxf,EAAMwf,EAAKlD,SACjB,OAAOiD,EAAYvf,EAAMwf,CAC7B,CACA,SAAS7D,GAAeD,GACpB,KAAMA,aAAiBd,IACnB,MAAM,IAAIn6B,UAAU,yBAC5B,CACA,SAASg/B,GAAe/D,GACpB,KAAMA,aAAiBgE,IACnB,MAAM,IAAIj/B,UAAU,0BAC5B,CACA,SAAS2+B,KACL,MAAM,IAAI78B,MAAM,0CACpB,CAhBAq4B,GAAc4C,KAAO,IAAI5C,GAAcZ,EAAMI,GAAIJ,EAAMK,GAAIT,EAAK5c,GAAIgd,EAAMI,GAAKJ,EAAMK,KACrFO,GAAcG,KAAO,IAAIH,GAAcjB,EAAKC,EAAKA,EAAKD,GAgBtD,MAAM+F,GACFz+B,YAAY0+B,GACRpxB,KAAKoxB,GAAKA,CACd,CACA9E,iCAAiC+E,GAC7B,MAAM,EAAE1F,GAAMF,EACRne,EAAImB,GAAIud,EAAUqF,EAAKA,GACvBC,EAAK7iB,IAAKnB,EAAI+d,GAAOc,IAC3B,IAAI1pB,EAAImE,QAAQ,GAChB,MAAMsX,EAAIzP,IAAKhM,EAAIkpB,EAAIre,GAAKmB,GAAInB,EAAIqe,IACpC,IAAM4F,QAASC,EAAYv2B,MAAOie,GAAMuY,GAAQH,EAAIpT,GAChDwT,EAAKjjB,GAAIyK,EAAImY,GACZM,GAAaD,KACdA,EAAKjjB,IAAKijB,IACTF,IACDtY,EAAIwY,GACHF,IACD/uB,EAAI6K,GACR,MAAMskB,EAAKnjB,GAAIhM,GAAK6K,EAAI+d,GAAOe,GAAiBlO,GAC1C2T,EAAK3Y,EAAIA,EACT4Y,EAAKrjB,IAAKyK,EAAIA,GAAKgF,GACnB6T,EAAKtjB,GAAImjB,EAAK3F,GACd+F,EAAKvjB,GAAI4c,EAAMwG,GACfI,EAAKxjB,GAAI4c,EAAMwG,GACrB,OAAO,IAAIxF,GAAc5d,GAAIqjB,EAAKG,GAAKxjB,GAAIujB,EAAKD,GAAKtjB,GAAIsjB,EAAKE,GAAKxjB,GAAIqjB,EAAKE,GAChF,CACA1F,mBAAmB4F,GAEf,MAAMC,EAAKC,IADXF,EAAMG,GAAYH,EAAK,KACW91B,MAAM,EAAG,KACrCk2B,EAAKtyB,KAAKuyB,0BAA0BJ,GACpCxU,EAAKyU,GAAmBF,EAAI91B,MAAM,GAAI,KACtCo2B,EAAKxyB,KAAKuyB,0BAA0B5U,GAC1C,OAAO,IAAIwT,GAAemB,EAAGzf,IAAI2f,GACrC,CACAlG,eAAe4F,GACXA,EAAMG,GAAYH,EAAK,IACvB,MAAM,EAAExtB,EAAC,EAAEinB,GAAMF,EACXgH,EAAO,0EACPvZ,EAAIkZ,GAAmBF,GAC7B,IA8UR,SAAoBhd,EAAIG,GACpB,GAAIH,EAAG1iB,SAAW6iB,EAAG7iB,OACjB,OAAO,EAEX,IAAK,IAAIoF,EAAI,EAAGA,EAAIsd,EAAG1iB,OAAQoF,IAC3B,GAAIsd,EAAGtd,KAAOyd,EAAGzd,GACb,OAAO,EAGf,OAAO,CACX,CAxVa86B,CAAWC,GAAkBzZ,GAAIgZ,IAAQP,GAAazY,GACvD,MAAM,IAAIllB,MAAMy+B,GACpB,MAAMZ,EAAKpjB,GAAIyK,EAAIA,GACb0Z,EAAKnkB,GAAI4c,EAAM3mB,EAAImtB,GACnBgB,EAAKpkB,GAAI4c,EAAM3mB,EAAImtB,GACnBiB,EAAOrkB,GAAImkB,EAAKA,GAChBG,EAAOtkB,GAAIokB,EAAKA,GAChB76B,EAAIyW,GAAI/J,EAAIinB,EAAImH,EAAOC,IACvB,QAAExB,EAASt2B,MAAO+3B,GAAMC,GAAWxkB,GAAIzW,EAAI+6B,IAC3CG,EAAKzkB,GAAIukB,EAAIH,GACbM,EAAK1kB,GAAIukB,EAAIE,EAAKl7B,GACxB,IAAI2M,EAAI8J,IAAKyK,EAAIA,GAAKga,GAClBvB,GAAahtB,KACbA,EAAI8J,IAAK9J,IACb,MAAMC,EAAI6J,GAAImkB,EAAKO,GACbviB,EAAInC,GAAI9J,EAAIC,GAClB,IAAK2sB,GAAWI,GAAa/gB,IAAMhM,IAAMwmB,EACrC,MAAM,IAAIp3B,MAAMy+B,GACpB,OAAO,IAAItB,GAAe,IAAI9E,GAAc1nB,EAAGC,EAAGymB,EAAKza,GAC3D,CACAwiB,aACI,IAAI,EAAEzuB,EAAC,EAAEC,EAAC,EAAEwe,EAAC,EAAExS,GAAM5Q,KAAKoxB,GAC1B,MAAMwB,EAAKnkB,GAAIA,GAAI2U,EAAIxe,GAAK6J,GAAI2U,EAAIxe,IAC9BiuB,EAAKpkB,GAAI9J,EAAIC,GACbyuB,EAAO5kB,GAAIokB,EAAKA,IACd53B,MAAOq4B,GAAYL,GAAWxkB,GAAImkB,EAAKS,IACzCE,EAAK9kB,GAAI6kB,EAAUV,GACnBY,EAAK/kB,GAAI6kB,EAAUT,GACnBY,EAAOhlB,GAAI8kB,EAAKC,EAAK5iB,GAC3B,IAAIsN,EACJ,GAAIyT,GAAa/gB,EAAI6iB,GAAO,CACxB,IAAIC,EAAKjlB,GAAI7J,EAAIonB,GACb2H,EAAKllB,GAAI9J,EAAIqnB,GACjBrnB,EAAI+uB,EACJ9uB,EAAI+uB,EACJzV,EAAIzP,GAAI8kB,EAAKrH,GACjB,MAEIhO,EAAIsV,EAEJ7B,GAAahtB,EAAI8uB,KACjB7uB,EAAI6J,IAAK7J,IACb,IAAIsU,EAAIzK,IAAK2U,EAAIxe,GAAKsZ,GAGtB,OAFIyT,GAAazY,KACbA,EAAIzK,IAAKyK,IACNyZ,GAAkBzZ,EAC7B,CACA0a,QACI,OAAOC,GAAW7zB,KAAKozB,aAC3B,CACA72B,WACI,OAAOyD,KAAK4zB,OAChB,CACAvuB,OAAO8nB,GACH+D,GAAe/D,GACf,MAAMzoB,EAAI1E,KAAKoxB,GACTp/B,EAAIm7B,EAAMiE,GACVnO,EAAMxU,GAAI/J,EAAEC,EAAI3S,EAAE4S,KAAO6J,GAAI/J,EAAEE,EAAI5S,EAAE2S,GACrCmvB,EAAMrlB,GAAI/J,EAAEE,EAAI5S,EAAE4S,KAAO6J,GAAI/J,EAAEC,EAAI3S,EAAE2S,GAC3C,OAAOse,GAAO6Q,CAClB,CACAjhB,IAAIsa,GAEA,OADA+D,GAAe/D,GACR,IAAIgE,GAAenxB,KAAKoxB,GAAGve,IAAIsa,EAAMiE,IAChD,CACAzC,SAASxB,GAEL,OADA+D,GAAe/D,GACR,IAAIgE,GAAenxB,KAAKoxB,GAAGzC,SAASxB,EAAMiE,IACrD,CACApB,SAASC,GACL,OAAO,IAAIkB,GAAenxB,KAAKoxB,GAAGpB,SAASC,GAC/C,CACAE,eAAeF,GACX,OAAO,IAAIkB,GAAenxB,KAAKoxB,GAAGjB,eAAeF,GACrD,EAEJkB,GAAelC,KAAO,IAAIkC,GAAe9E,GAAc4C,MACvDkC,GAAe3E,KAAO,IAAI2E,GAAe9E,GAAcG,MACvD,MAAM4C,GAAmB,IAAI2E,QAC7B,MAAMxH,GACF75B,YAAYiS,EAAGC,GACX5E,KAAK2E,EAAIA,EACT3E,KAAK4E,EAAIA,CACb,CACAovB,eAAezE,GACXvvB,KAAKkvB,aAAeK,EACpBH,GAAiB6E,OAAOj0B,KAC5B,CACAssB,eAAe4F,GAAoB,IAAfgC,IAAM//B,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,KAAAA,UAAA,GACtB,MAAM,EAAEw3B,EAAC,EAAEC,GAAMH,EAEX0I,GADNjC,EAAMG,GAAYH,EAAK,KACJ91B,QACnB+3B,EAAO,KAAgB,IAAVjC,EAAI,IACjB,MAAMttB,EAAIwvB,GAAgBD,GAC1B,GAAID,GAAUtvB,GAAKgnB,EACf,MAAM,IAAI53B,MAAM,wBACpB,IAAKkgC,GAAUtvB,GAAKmnB,EAChB,MAAM,IAAI/3B,MAAM,6BACpB,MAAMqgC,EAAK5lB,GAAI7J,EAAIA,GACb8e,EAAIjV,GAAI4lB,EAAKhJ,GACbrzB,EAAIyW,GAAIkd,EAAI0I,EAAKhJ,GACvB,IAAI,QAAEkG,EAASt2B,MAAO0J,GAAM8sB,GAAQ/N,EAAG1rB,GACvC,IAAKu5B,EACD,MAAM,IAAIv9B,MAAM,uCACpB,MAAMsgC,GAAU3vB,EAAI0mB,KAASA,EAK7B,OAJ2C,KAAV,IAAV6G,EAAI,OACLoC,IAClB3vB,EAAI8J,IAAK9J,IAEN,IAAI4nB,GAAM5nB,EAAGC,EACxB,CACA0nB,4BAA4BiI,GACxB,aAAcC,GAAqBD,IAAaE,KACpD,CACArB,aACI,MAAM9sB,EAAQqsB,GAAkB3yB,KAAK4E,GAErC,OADA0B,EAAM,KAAOtG,KAAK2E,EAAI0mB,EAAM,IAAO,EAC5B/kB,CACX,CACAstB,QACI,OAAOC,GAAW7zB,KAAKozB,aAC3B,CACAsB,WACI,MAAM,EAAE9vB,GAAM5E,KAEd,OAAO2yB,GADGlkB,IAAK4c,EAAMzmB,GAAKioB,GAAOxB,EAAMzmB,IAE3C,CACA0rB,gBACI,OAAOjE,GAAca,WAAWltB,MAAMswB,eAC1C,CACAjrB,OAAO8nB,GACH,OAAOntB,KAAK2E,IAAMwoB,EAAMxoB,GAAK3E,KAAK4E,IAAMuoB,EAAMvoB,CAClD,CACAmpB,SACI,OAAO,IAAIxB,GAAM9d,IAAKzO,KAAK2E,GAAI3E,KAAK4E,EACxC,CACAiO,IAAIsa,GACA,OAAOd,GAAca,WAAWltB,MAAM6S,IAAIwZ,GAAca,WAAWC,IAAQH,UAC/E,CACA2B,SAASxB,GACL,OAAOntB,KAAK6S,IAAIsa,EAAMY,SAC1B,CACAiC,SAASC,GACL,OAAO5D,GAAca,WAAWltB,MAAMgwB,SAASC,EAAQjwB,MAAMgtB,UACjE,EAEJT,GAAM0C,KAAO,IAAI1C,GAAMd,EAAMI,GAAIJ,EAAMK,IACvCS,GAAMC,KAAO,IAAID,GAAMnB,EAAKC,GAC5B,MAAMsJ,GACFjiC,YAAY4a,EAAG4L,GACXlZ,KAAKsN,EAAIA,EACTtN,KAAKkZ,EAAIA,EACTlZ,KAAK40B,gBACT,CACAtI,eAAe4F,GACX,MAAM5rB,EAAQ+rB,GAAYH,EAAK,IACzB5kB,EAAIif,GAAMsI,QAAQvuB,EAAMlK,MAAM,EAAG,KAAK,GACtC8c,EAAIkb,GAAgB9tB,EAAMlK,MAAM,GAAI,KAC1C,OAAO,IAAIu4B,GAAUrnB,EAAG4L,EAC5B,CACA0b,iBACI,MAAM,EAAEtnB,EAAC,EAAE4L,GAAMlZ,KACjB,KAAMsN,aAAaif,IACf,MAAM,IAAIv4B,MAAM,2BAEpB,OADAk8B,GAAgBhX,EAAGuS,EAAMjT,GAAG,GACrBxY,IACX,CACAozB,aACI,MAAM0B,EAAK,IAAI7iC,WAAW,IAG1B,OAFA6iC,EAAG9vB,IAAIhF,KAAKsN,EAAE8lB,cACd0B,EAAG9vB,IAAI2tB,GAAkB3yB,KAAKkZ,GAAI,IAC3B4b,CACX,CACAlB,QACI,OAAOC,GAAW7zB,KAAKozB,aAC3B,EAGJ,SAAS2B,KAAuB,QAAAnR,EAAAzvB,UAAA3B,OAARwiC,EAAM,IAAA58B,MAAAwrB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAANkR,EAAMlR,GAAA3vB,UAAA2vB,GAC1B,IAAKkR,EAAOC,OAAOvwB,GAAMA,aAAazS,aAClC,MAAM,IAAI+B,MAAM,4BACpB,GAAsB,IAAlBghC,EAAOxiC,OACP,OAAOwiC,EAAO,GAClB,MAAMxiC,EAASwiC,EAAOj9B,QAAO,CAAC2M,EAAG1D,IAAQ0D,EAAI1D,EAAIxO,QAAQ,GACnD0iC,EAAS,IAAIjjC,WAAWO,GAC9B,IAAK,IAAIoF,EAAI,EAAGu9B,EAAM,EAAGv9B,EAAIo9B,EAAOxiC,OAAQoF,IAAK,CAC7C,MAAMoJ,EAAMg0B,EAAOp9B,GACnBs9B,EAAOlwB,IAAIhE,EAAKm0B,GAChBA,GAAOn0B,EAAIxO,MACf,CACA,OAAO0iC,CACX,CACA,MAAME,GAAQh9B,MAAM/F,KAAK,CAAEG,OAAQ,MAAO,CAACwF,EAAGJ,IAAMA,EAAE2E,SAAS,IAAIsoB,SAAS,EAAG,OAC/E,SAASgP,GAAWwB,GAChB,KAAMA,aAAkBpjC,YACpB,MAAM,IAAI+B,MAAM,uBACpB,IAAIk+B,EAAM,GACV,IAAK,IAAIt6B,EAAI,EAAGA,EAAIy9B,EAAO7iC,OAAQoF,IAC/Bs6B,GAAOkD,GAAMC,EAAOz9B,IAExB,OAAOs6B,CACX,CACA,SAASoD,GAAWpD,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAIhgC,UAAU,2CAA6CggC,GAErE,GAAIA,EAAI1/B,OAAS,EACb,MAAM,IAAIwB,MAAM,6CACpB,MAAMwL,EAAQ,IAAIvN,WAAWigC,EAAI1/B,OAAS,GAC1C,IAAK,IAAIoF,EAAI,EAAGA,EAAI4H,EAAMhN,OAAQoF,IAAK,CACnC,MAAM4J,EAAQ,EAAJ5J,EACJ29B,EAAUrD,EAAI91B,MAAMoF,EAAGA,EAAI,GAC3Bg0B,EAAO3iC,OAAOgP,SAAS0zB,EAAS,IACtC,GAAI1iC,OAAO4iC,MAAMD,IAASA,EAAO,EAC7B,MAAM,IAAIxhC,MAAM,yBACpBwL,EAAM5H,GAAK49B,CACf,CACA,OAAOh2B,CACX,CACA,SAASk2B,GAAkBjoB,GAGvB,OAAO6nB,GADK7nB,EAAIlR,SAAS,IAAIsoB,SAASryB,GAAY,KAEtD,CACA,SAASmgC,GAAkBllB,GACvB,OAAOioB,GAAkBjoB,GAAKkoB,SAClC,CACA,SAAShE,GAAalkB,GAClB,OAAQgB,GAAIhB,GAAO4d,KAASA,CAChC,CACA,SAAS+I,GAAgBiB,GACrB,KAAMA,aAAkBpjC,YACpB,MAAM,IAAI+B,MAAM,uBACpB,OAAO4S,OAAO,KAAOitB,GAAW5hC,WAAWI,KAAKgjC,GAAQM,WAC5D,CACA,MAAMC,GAAWhvB,OAAO,sEACxB,SAASwrB,GAAmB9rB,GACxB,OAAOmI,GAAI2lB,GAAgB9tB,GAASsvB,GACxC,CACA,SAASnnB,GAAI/J,GAAgB,IAAb1S,EAACmC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAGs3B,EAAMG,EACtB,MAAM9oB,EAAM4B,EAAI1S,EAChB,OAAO8Q,GAAOsoB,EAAMtoB,EAAM9Q,EAAI8Q,CAClC,CACA,SAAS+pB,GAAOrgB,GAA0B,IAAlBqpB,EAAM1hC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAGs3B,EAAMG,EACnC,GAAIpf,IAAW4e,GAAOyK,GAAUzK,EAC5B,MAAM,IAAIp3B,MAAO,6CAA4CwY,SAAcqpB,KAE/E,IAAInxB,EAAI+J,GAAIjC,EAAQqpB,GAChB7jC,EAAI6jC,EACJlxB,EAAIymB,EAAKxmB,EAAIymB,EAAK3H,EAAI2H,EAAKrzB,EAAIozB,EACnC,KAAO1mB,IAAM0mB,GAAK,CACd,MAAM7P,EAAIvpB,EAAI0S,EACR4I,EAAItb,EAAI0S,EACRjE,EAAIkE,EAAI+e,EAAInI,EACZ/a,EAAIoE,EAAI5M,EAAIujB,EAClBvpB,EAAI0S,EAAGA,EAAI4I,EAAG3I,EAAI+e,EAAG9e,EAAI5M,EAAG0rB,EAAIjjB,EAAGzI,EAAIwI,CAC3C,CAEA,GADYxO,IACAq5B,EACR,MAAM,IAAIr3B,MAAM,0BACpB,OAAOya,GAAI9J,EAAGkxB,EAClB,CAkBA,SAASC,GAAKnxB,EAAGoxB,GACb,MAAM,EAAEnK,GAAMH,EACd,IAAI3oB,EAAM6B,EACV,KAAOoxB,KAAU3K,GACbtoB,GAAOA,EACPA,GAAO8oB,EAEX,OAAO9oB,CACX,CACA,SAASkzB,GAAYrxB,GACjB,MAAM,EAAEinB,GAAMH,EACRwK,EAAMrvB,OAAO,GACbsvB,EAAOtvB,OAAO,IACduvB,EAAOvvB,OAAO,IACdwvB,EAAOxvB,OAAO,IACdyvB,EAAOzvB,OAAO,IAEdyO,EADM1Q,EAAIA,EAAKinB,EACJjnB,EAAKinB,EAChBjW,EAAMmgB,GAAKzgB,EAAIiW,GAAOjW,EAAMuW,EAC5B9V,EAAMggB,GAAKngB,EAAI0V,GAAO1mB,EAAKinB,EAC3B0K,EAAOR,GAAKhgB,EAAImgB,GAAOngB,EAAM8V,EAC7B2K,EAAOT,GAAKQ,EAAKJ,GAAQI,EAAO1K,EAChC4K,EAAOV,GAAKS,EAAKJ,GAAQI,EAAO3K,EAChC6K,EAAOX,GAAKU,EAAKJ,GAAQI,EAAO5K,EAChC8K,EAAQZ,GAAKW,EAAKJ,GAAQI,EAAO7K,EACjC+K,EAAQb,GAAKY,EAAML,GAAQI,EAAO7K,EAClCgL,EAAQd,GAAKa,EAAMT,GAAQI,EAAO1K,EAExC,MAAO,CAAEiL,UADUf,GAAKc,EAAMtL,GAAO3mB,EAAKinB,EACtBvW,KACxB,CACA,SAASoc,GAAQ/N,EAAG1rB,GAChB,MAAM8+B,EAAKroB,GAAIzW,EAAIA,EAAIA,GACjB++B,EAAKtoB,GAAIqoB,EAAKA,EAAK9+B,GAEzB,IAAI2M,EAAI8J,GAAIiV,EAAIoT,EADJd,GAAYtS,EAAIqT,GAAIF,WAEhC,MAAMG,EAAMvoB,GAAIzW,EAAI2M,EAAIA,GAClBsyB,EAAQtyB,EACRuyB,EAAQzoB,GAAI9J,EAAIqnB,GAChBmL,EAAWH,IAAQtT,EACnB0T,EAAWJ,IAAQvoB,IAAKiV,GACxB2T,EAASL,IAAQvoB,IAAKiV,EAAIsI,GAOhC,OANImL,IACAxyB,EAAIsyB,IACJG,GAAYC,KACZ1yB,EAAIuyB,GACJvF,GAAahtB,KACbA,EAAI8J,IAAK9J,IACN,CAAE4sB,QAAS4F,GAAYC,EAAUn8B,MAAO0J,EACnD,CACA,SAASsuB,GAAWzmB,GAChB,OAAOilB,GAAQpG,EAAK7e,EACxB,CACA,SAAS8qB,GAAOtT,GACZ,OAAOvV,GAAI2lB,GAAgBpQ,GAAOyH,EAAMjT,EAC5C,CAYA,SAAS6Z,GAAYH,EAAKqF,GACtB,MAAMjxB,EAAQ4rB,aAAejgC,WAAaA,WAAWI,KAAK6/B,GAAOoD,GAAWpD,GAC5E,GAA8B,kBAAnBqF,GAA+BjxB,EAAM9T,SAAW+kC,EACvD,MAAM,IAAIvjC,MAAO,YAAWujC,WAChC,OAAOjxB,CACX,CACA,SAAS4pB,GAAgBziB,EAAKlI,GAAoB,IAAf2uB,IAAM//B,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,KAAAA,UAAA,GACrC,IAAKoR,EACD,MAAM,IAAIrT,UAAU,qBAGxB,GAFmB,kBAARub,GAAoB5a,OAAO8wB,cAAclW,KAChDA,EAAM7G,OAAO6G,IACE,kBAARA,GAAoBA,EAAMlI,EACjC,GAAI2uB,GACA,GAAI9I,EAAM3d,EACN,OAAOA,OAGX,GAAI2d,GAAO3d,EACP,OAAOA,EAGnB,MAAM,IAAIvb,UAAU,0CACxB,CACA,SAASslC,GAAiBlxB,GAItB,OAHAA,EAAM,IAAM,IACZA,EAAM,KAAO,IACbA,EAAM,KAAO,GACNA,CACX,CAIA,SAASmxB,GAAgBC,GAKrB,GAAmB,MAJnBA,EACmB,kBAARA,GAAmC,kBAARA,EAC5BhC,GAAkBxF,GAAgBwH,EAAK3L,IACvCsG,GAAYqF,IACdllC,OACJ,MAAM,IAAIwB,MAAO,qBACrB,OAAO0jC,CACX,CACA,SAASC,GAAeC,GACpB,MAAMC,EAAOL,GAAiBI,EAAOx7B,MAAM,EAAG,KACxC07B,EAASF,EAAOx7B,MAAM,GAAI,IAC1B6zB,EAASqH,GAAOO,GAChBpD,EAAQlI,GAAM0C,KAAKe,SAASC,GAC5B8H,EAAatD,EAAMrB,aACzB,MAAO,CAAEyE,OAAMC,SAAQ7H,SAAQwE,QAAOsD,aAC1C,CACA,IAAIC,GACJ,SAASC,KACL,GAA2B,oBAAhBD,GACP,MAAM,IAAIhkC,MAAM,oDACpB,OAAOgkC,MAAY7jC,UACvB,CACA+jC,eAAe1D,GAAqBkD,GAChC,OAAOC,SAAqBQ,GAAMhN,OAAOsM,GAAgBC,IAC7D,CACA,SAASU,GAAyBV,GAC9B,OAAOC,GAAeM,GAAQR,GAAgBC,IAClD,CAyBA,SAASW,GAAoBC,EAAK5tB,EAAS6tB,GACvC7tB,EAAU2nB,GAAY3nB,GAChB6tB,aAAqBhM,KACvBgM,EAAYhM,GAAMsI,QAAQ0D,GAAW,IACzC,MAAM,EAAEjrB,EAAC,EAAE4L,GAAMof,aAAe3D,GAAY2D,EAAI1D,iBAAmBD,GAAUE,QAAQyD,GAErF,MAAO,CAAEhrB,IAAG4L,IAAGsf,GADJnM,GAAc4C,KAAKkB,eAAejX,GAC1Buf,IAAKF,EAAWrtB,IAAKR,EAC5C,CACA,SAASguB,GAAmBH,EAAWjrB,EAAGkrB,EAAIZ,GAC1C,MAAM5nB,EAAIsnB,GAAOM,GACXe,EAAKtM,GAAca,WAAWqL,GAAWpI,eAAengB,GAE9D,OADYqc,GAAca,WAAW5f,GAAGuF,IAAI8lB,GACjChK,SAAS6J,GAAIrI,eAAe1E,EAAM1P,GAAG1W,OAAOgnB,GAAcG,KACzE,CAWO,MAAMoM,GAAO,CAChBpE,qBAAsB4D,GACtBS,aA/CJ,SAA0BtE,GACtB,OAAO6D,GAAyB7D,GAAYwD,UAChD,EA8CIe,KApCJ,SAAkBpuB,EAAS6pB,GACvB7pB,EAAU2nB,GAAY3nB,GACtB,MAAM,OAAEotB,EAAM,OAAE7H,EAAM,WAAE8H,GAAeK,GAAyB7D,GAC1DjnB,EAAIgqB,GAAOW,GAAQH,EAAQptB,IAC3BquB,EAAIxM,GAAM0C,KAAKe,SAAS1iB,GAExB4L,EAAIzK,GAAInB,EADJgqB,GAAOW,GAAQc,EAAE3F,aAAc2E,EAAYrtB,IAC/BulB,EAAQxE,EAAMjT,GACpC,OAAO,IAAImc,GAAUoE,EAAG7f,GAAGka,YAC/B,EA6BI4F,OATJ,SAAoBV,EAAK5tB,EAAS6tB,GAC9B,MAAM,EAAEjrB,EAAC,GAAEkrB,EAAE,IAAEttB,EAAG,IAAEutB,GAAQJ,GAAoBC,EAAK5tB,EAAS6tB,GACxDX,EAASK,GAAQ3qB,EAAE8lB,aAAcqF,EAAIrF,aAAcloB,GACzD,OAAOwtB,GAAmBD,EAAKnrB,EAAGkrB,EAAIZ,EAC1C,GAYArL,GAAM0C,KAAK+E,eAAe,GA+DnB,MAcDvP,GAAS,CACXwU,KAAMC,EACNC,IAAqB,kBAATppB,MAAqB,WAAYA,KAAOA,KAAK0U,YAASrwB,GAEzD+jC,GAAQ,CACjBtE,WAAU,GACVyB,WAAU,GACVP,YAAW,GACXP,wBACA/lB,OACAoe,UACAuM,iBAAkB,CACd,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,oEAEJC,oBAAsBrV,IAElB,IADAA,EAAOqO,GAAYrO,IACVxxB,OAAS,IAAMwxB,EAAKxxB,OAAS,KAClC,MAAM,IAAIwB,MAAM,yDACpB,OAAOya,GAAI2lB,GAAgBpQ,GAAOyH,EAAMjT,EAAI6S,GAAOA,CAAG,EAE1DiO,YAAa,WAAsB,IAArBC,EAAWplC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACxB,GAAIswB,GAAO0U,IACP,OAAO1U,GAAO0U,IAAIK,gBAAgB,IAAIvnC,WAAWsnC,IAEhD,GAAI9U,GAAOwU,KAAM,CAClB,MAAM,YAAEK,GAAgB7U,GAAOwU,KAC/B,OAAO,IAAIhnC,WAAWqnC,EAAYC,GAAajnC,OACnD,CAEI,MAAM,IAAI0B,MAAM,oDAExB,EACAylC,iBAAkBA,IACPtB,GAAMmB,YAAY,IAE7BnO,OAAQ+M,iBACJ,MAAMxtB,EAAUqqB,MAAY5gC,WAC5B,GAAIswB,GAAO0U,IAAK,CACZ,MAAM7mC,QAAemyB,GAAO0U,IAAIO,OAAOpU,OAAO,UAAW5a,EAAQpY,QACjE,OAAO,IAAIL,WAAWK,EAC1B,CACK,GAAImyB,GAAOwU,KACZ,OAAOhnC,WAAWI,KAAKoyB,GAAOwU,KAAKU,WAAW,UAAUtU,OAAO3a,GAAS4a,UAGxE,MAAM,IAAItxB,MAAM,+CAExB,EACA4lC,aAA+C,IAApCrK,EAAUp7B,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGsgC,EAAKtgC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAGo4B,GAAM0C,KACrC,MAAM4K,EAASpF,EAAMpvB,OAAOknB,GAAM0C,MAAQwF,EAAQ,IAAIlI,GAAMkI,EAAM9vB,EAAG8vB,EAAM7vB,GAG3E,OAFAi1B,EAAO7F,eAAezE,GACtBsK,EAAO7J,SAAS1E,GACTuO,CACX,EACAC,gBAAY1lC,GAEhBf,OAAO0mC,iBAAiB5B,GAAO,CAC3B2B,WAAY,CACRtvB,cAAc,EACdpG,IAAGA,IACQ4zB,GAEXhzB,IAAIrE,GACKq3B,KACDA,GAAcr3B,EACtB,gCCl3BR,MAEMq5B,GAAMA,CAACt1B,EAAW1S,EAAWyQ,IAAeiC,EAAI1S,EAAM0S,EAAIjC,EAAMzQ,EAAIyQ,EAKpEw3B,GAAW,IAAIrV,YAAY,CAC/B,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAKhFsV,GAAK,IAAItV,YAAY,CACzB,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,aAKhFuV,GAAW,IAAIvV,YAAY,IACjC,MAAMwV,WAAe7U,EAYnB7yB,cACE4X,MAAM,GAAI,GAAI,GAAG,GAVnB,KAAAyT,EAAY,EAARmc,GAAG,GACP,KAAAlc,EAAY,EAARkc,GAAG,GACP,KAAAjc,EAAY,EAARic,GAAG,GACP,KAAAhc,EAAY,EAARgc,GAAG,GACP,KAAAhwB,EAAY,EAARgwB,GAAG,GACP,KAAA/L,EAAY,EAAR+L,GAAG,GACP,KAAAhM,EAAY,EAARgM,GAAG,GACP,KAAA9L,EAAY,EAAR8L,GAAG,EAIP,CACU91B,MACR,MAAM,EAAE2Z,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEhU,EAAC,EAAEikB,EAAC,EAAED,EAAC,EAAEE,GAAMpuB,KACnC,MAAO,CAAC+d,EAAGC,EAAGC,EAAGC,EAAGhU,EAAGikB,EAAGD,EAAGE,EAC/B,CAEUppB,IACR+Y,EAAWC,EAAWC,EAAWC,EAAWhU,EAAWikB,EAAWD,EAAWE,GAE7EpuB,KAAK+d,EAAQ,EAAJA,EACT/d,KAAKge,EAAQ,EAAJA,EACThe,KAAKie,EAAQ,EAAJA,EACTje,KAAKke,EAAQ,EAAJA,EACTle,KAAKkK,EAAQ,EAAJA,EACTlK,KAAKmuB,EAAQ,EAAJA,EACTnuB,KAAKkuB,EAAQ,EAAJA,EACTluB,KAAKouB,EAAQ,EAAJA,CACX,CACUxI,QAAQF,EAAgBzyB,GAEhC,IAAK,IAAI2E,EAAI,EAAGA,EAAI,GAAIA,IAAK3E,GAAU,EAAGknC,GAASviC,GAAK8tB,EAAK+D,UAAUx2B,GAAQ,GAC/E,IAAK,IAAI2E,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC5B,MAAMyiC,EAAMF,GAASviC,EAAI,IACnBo6B,EAAKmI,GAASviC,EAAI,GAClB0iC,EAAK3V,EAAK0V,EAAK,GAAK1V,EAAK0V,EAAK,IAAOA,IAAQ,EAC7CE,EAAK5V,EAAKqN,EAAI,IAAMrN,EAAKqN,EAAI,IAAOA,IAAO,GACjDmI,GAASviC,GAAM2iC,EAAKJ,GAASviC,EAAI,GAAK0iC,EAAKH,GAASviC,EAAI,IAAO,EAGjE,IAAI,EAAEmmB,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEhU,EAAC,EAAEikB,EAAC,EAAED,EAAC,EAAEE,GAAMpuB,KACjC,IAAK,IAAIpI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MACM62B,EAAML,GADGzJ,EAAKza,EAAG,GAAKya,EAAKza,EAAG,IAAMya,EAAKza,EAAG,OAxE3CxF,EAyEsBwF,GAAGikB,GAzEuBzpB,EAyEpBwpB,GAAK+L,GAASriC,GAAKuiC,GAASviC,GAAM,EAE/D82B,GADS/J,EAAK5G,EAAG,GAAK4G,EAAK5G,EAAG,IAAM4G,EAAK5G,EAAG,KAC7Bic,GAAIjc,EAAGC,EAAGC,GAAM,EACrCmQ,EAAIF,EACJA,EAAIC,EACJA,EAAIjkB,EACJA,EAAKgU,EAAIuQ,EAAM,EACfvQ,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAK0Q,EAAKC,EAAM,EAnFV8L,IAAC91B,EAsFTqZ,EAAKA,EAAI/d,KAAK+d,EAAK,EACnBC,EAAKA,EAAIhe,KAAKge,EAAK,EACnBC,EAAKA,EAAIje,KAAKie,EAAK,EACnBC,EAAKA,EAAIle,KAAKke,EAAK,EACnBhU,EAAKA,EAAIlK,KAAKkK,EAAK,EACnBikB,EAAKA,EAAInuB,KAAKmuB,EAAK,EACnBD,EAAKA,EAAIluB,KAAKkuB,EAAK,EACnBE,EAAKA,EAAIpuB,KAAKouB,EAAK,EACnBpuB,KAAKgF,IAAI+Y,EAAGC,EAAGC,EAAGC,EAAGhU,EAAGikB,EAAGD,EAAGE,EAChC,CACUtI,aACRqU,GAAS71B,KAAK,EAChB,CACAkiB,UACExmB,KAAKgF,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BhF,KAAK1N,OAAOgS,KAAK,EACnB,EAGF,MAAMm2B,WAAeL,GASnB1nC,cACE4X,QATF,KAAAyT,GAAI,WACJ,KAAAC,EAAI,UACJ,KAAAC,EAAI,UACJ,KAAAC,GAAI,UACJ,KAAAhU,GAAI,QACJ,KAAAikB,EAAI,WACJ,KAAAD,EAAI,WACJ,KAAAE,GAAI,WAGFpuB,KAAKikB,UAAY,EACnB,EAOK,MAAMyW,GAASxV,GAAgB,IAAM,IAAIkV,KAC1BlV,GAAgB,IAAM,IAAIuV,mDC1GnCE,WAAoBzoC,UAU/BQ,YAAYkoC,EAAkBC,GAC5B,IAAIhB,EACJ,MAAM,QAAEnvB,KAAYowB,GAASF,GACvB,KAAEG,GAASH,EAGjBtwB,MADkB,IAAhBywB,EAAKvoC,OAAekY,EAApB,YAA0CqwB,EAAKC,KAAK,KAApD,OAA+DtwB,GAEjErX,OAAOG,OAAOwM,KAAM86B,GACpB96B,KAAKpM,KAAOoM,KAAKtN,YAAYkB,KAC7BoM,KAAK66B,SAAW,WACd,cAAAI,EAAQpB,GAARoB,EAAQpB,EAAW,CAACe,KAAYC,IAAhC,CAEH,WC9BaK,GAASv2B,GACvB,MAAoB,kBAANA,GAAuB,MAALA,CACjC,UAmBew2B,GAAMlgC,GACpB,MAAwB,kBAAVA,EAAqBmgC,KAAKC,UAAUpgC,GAA3C,GAAuDA,CAC/D,UAgBeqgC,GACdpG,EACAqG,EACAC,EACAvgC,GAEA,IAAe,IAAXi6B,EACF,QACoB,IAAXA,EACTA,EAAS,CAAC,EACiB,kBAAXA,IAChBA,EAAS,CAAExqB,QAASwqB,IAGtB,MAAM,KAAE6F,EAAF,OAAQU,GAAWF,GACnB,KAAEr8B,GAASs8B,GACX,WACJE,EADI,QAEJhxB,EAAU,6BAA8BxL,EAAjC,KACLw8B,EAAa,qBAAsBA,EAAzB,IAA0C,IAD/C,oBAEcP,GAAMlgC,GAFpB,KAGLi6B,EAEJ,MAAO,CACLj6B,QACAiE,OACAw8B,aACAhE,IAAKqD,EAAKA,EAAKvoC,OAAS,GACxBuoC,OACAU,YACGvG,EACHxqB,UAEH,UAMgBixB,GACfzG,EACAqG,EACAC,EACAvgC,GA1FF,IAAuB0J,EACdu2B,GADcv2B,EA4FLuwB,IA3FoC,oBAAvBvwB,EAAExH,OAAOy+B,YA4FpC1G,EAAS,CAACA,IAGZ,IAAK,MAAM5nB,KAAK4nB,EAAQ,CACtB,MAAM0F,EAAUU,GAAUhuB,EAAGiuB,EAASC,EAAQvgC,GAE1C2/B,UACIA,EAET,CACF,UAOgBiB,GACf5gC,EACAugC,GAAA,IACAM,EAAA3nC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAKI,CAAC,EAAD,mBAEJ,MAAM,KAAE4mC,EAAO,GAAT,OAAaU,EAAS,CAACxgC,GAAvB,OAA+B8gC,GAAS,EAAxC,KAA+C/f,GAAO,GAAU8f,EAChE/b,EAAe,CAAEgb,OAAMU,UAE7B,GAAIM,IACF9gC,EAAQugC,EAAOQ,QAAQ/gC,EAAO8kB,GAG5B/D,GACgB,SAAhBwf,EAAOt8B,MACPg8B,GAASM,EAAOS,SAChBf,GAASjgC,KACR7C,MAAMC,QAAQ4C,IAEf,IAAK,MAAMy8B,KAAOz8B,OACW7G,IAAvBonC,EAAOS,OAAOvE,WACTz8B,EAAMy8B,GAMrB,IAAIwE,GAAQ,EAEZ,IAAK,MAAMtB,KAAWY,EAAOW,UAAUlhC,EAAO8kB,GAC5Cmc,GAAQ,OACF,CAACtB,OAASxmC,GAGlB,IAAK,IAAK4b,EAAGhY,EAAGkhB,KAAMsiB,EAAOY,QAAQnhC,EAAO8kB,GAAM,CAChD,MAAMsc,EAAKR,GAAI7jC,EAAGkhB,EAAa,CAC7B6hB,UAAY3mC,IAAN4b,EAAkB+qB,EAAO,IAAIA,EAAM/qB,GACzCyrB,YAAcrnC,IAAN4b,EAAkByrB,EAAS,IAAIA,EAAQzjC,GAC/C+jC,SACA/f,SAGF,IAAK,MAAMpL,KAAKyrB,EACVzrB,EAAE,IACJsrB,GAAQ,OACF,CAACtrB,EAAE,QAAIxc,IACJ2nC,IACT/jC,EAAI4Y,EAAE,QAEIxc,IAAN4b,EACF/U,EAAQjD,EACCiD,aAAiBqhC,IAC1BrhC,EAAM+J,IAAIgL,EAAGhY,GACJiD,aAAiBshC,IAC1BthC,EAAM4X,IAAI7a,GACDkjC,GAASjgC,KAClBA,EAAM+U,GAAKhY,GAIlB,CAED,GAAIkkC,EACF,IAAK,MAAMtB,KAAWY,EAAOgB,QAAQvhC,EAAY8kB,GAC/Cmc,GAAQ,OACF,CAACtB,OAASxmC,GAIhB8nC,SACI,MAAC9nC,EAAW6G,GAErB,CApEK,EAoEL,OCxLYwhC,GAYX/pC,YAAYgqC,GAQV,MAAM,KACJx9B,EADI,OAEJ+8B,EAFI,UAGJE,EAHI,QAIJK,EAJI,QAKJR,EAAW/gC,IAAmBA,GAL1B,QAMJmhC,EAAU,eACRM,EAEJ18B,KAAKd,KAAOA,EACZc,KAAKi8B,OAASA,EACdj8B,KAAKo8B,QAAUA,EACfp8B,KAAKg8B,QAAUA,EAGbh8B,KAAKm8B,UADHA,EACe,CAAClhC,EAAOsgC,IAEhBI,GADQQ,EAAUlhC,EAAOsgC,GACNA,EAASv7B,KAAM/E,GAG1B,IAAM,GAIvB+E,KAAKw8B,QADHA,EACa,CAACvhC,EAAOsgC,IAEdI,GADQa,EAAQvhC,EAAOsgC,GACJA,EAASv7B,KAAM/E,GAG5B,IAAM,EAExB,CAMDgR,OAAOhR,GACL,gBAoDFA,EACAugC,GAEA,MAAMtG,EAASyH,GAAS1hC,EAAOugC,GAE/B,GAAItG,EAAO,GACT,MAAMA,EAAO,EAEhB,CA5DUjpB,CAAOhR,EAAO+E,KACtB,CAMD1M,OAAO2H,GACL,OAAO3H,GAAO2H,EAAO+E,KACtB,CAMD48B,GAAG3hC,GACD,OAAO2hC,GAAG3hC,EAAO+E,KAClB,CAODgc,KAAK/gB,GACH,gBAuDuBA,EAAgBugC,GACzC,MAAMtG,EAASyH,GAAS1hC,EAAOugC,EAAQ,CAAEO,QAAQ,EAAM/f,MAAM,IAE7D,GAAIkZ,EAAO,GACT,MAAMA,EAAO,GAEb,OAAOA,EAAO,EAEjB,CA/DUlZ,CAAK/gB,EAAO+E,KACpB,CAWD28B,SACE1hC,GAKA,OAAO0hC,GAAS1hC,EAAO+E,KAJvB7L,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAEI,CAAC,EAGN,WAsBab,GAAa2H,EAAgBugC,GAC3C,MAAMtG,EAASyH,GAAS1hC,EAAOugC,EAAQ,CAAEO,QAAQ,IAEjD,GAAI7G,EAAO,GACT,MAAMA,EAAO,GAEb,OAAOA,EAAO,EAEjB,UAoBe0H,GAAS3hC,EAAgBugC,GAEvC,OADemB,GAAS1hC,EAAOugC,GAChB,EAChB,UAOemB,GACd1hC,EACAugC,GAMA,MAAMqB,EAAShB,GAAI5gC,EAAOugC,EAL1BrnC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAGI,CAAC,GAGC2oC,WDvIyB7xB,GAC/B,MAAM,KAAE8xB,EAAF,MAAQ9hC,GAAUgQ,EAAM8X,OAC9B,OAAOga,OAAO3oC,EAAY6G,CAC3B,CCoIe+hC,CAAcH,GAE5B,GAAIC,EAAM,GAAI,CASZ,MAAO,CARO,IAAInC,GAAYmC,EAAM,IAAI,YACtC,IAAK,MAAMlsB,KAAKisB,EACVjsB,EAAE,WACEA,EAAE,GAGb,SAEcxc,EAChB,CAEC,MAAO,MAACA,EADE0oC,EAAM,GAGnB,UCpIeG,GAAUrpC,EAAcuoC,GACtC,OAAO,IAAIM,GAAO,CAAEv9B,KAAMtL,EAAMqoC,OAAQ,KAAME,aAC/C,UCrCe38B,GAA6B09B,GAC3C,OAAO,IAAIT,GAAO,CAChBv9B,KAAM,QACN+8B,OAAQiB,EACR,SAASjiC,GACP,GAAIiiC,GAAW9kC,MAAMC,QAAQ4C,GAC3B,IAAK,MAAOrD,EAAGI,KAAMiD,EAAMmhC,eACnB,CAACxkC,EAAGI,EAAGklC,EAGlB,EACDlB,QAAQ/gC,GACC7C,MAAMC,QAAQ4C,GAASA,EAAMmB,QAAUnB,EAEhDkhC,UAAUlhC,GAEN7C,MAAMC,QAAQ4C,IAAd,0CAC0CkgC,GAAMlgC,IAIvD,UAMekiC,KACd,OAAOF,GAAO,WAAYhiC,GACA,mBAAVA,GAEjB,UAoEempB,GACdgZ,GAEA,OAAOH,GAAO,YAAahiC,GAEvBA,aAAiBmiC,GAAjB,eACgBA,EAAMxpC,KADtB,6BACwDunC,GAAMlgC,IAGnE,UAqGeoiC,GAAWC,GACzB,MAAMC,EAAcpC,GAAMmC,GACpB1sB,SAAW0sB,EACjB,OAAO,IAAIb,GAAO,CAChBv9B,KAAM,UACN+8B,OACQ,WAANrrB,GAAwB,WAANA,GAAwB,YAANA,EAAkB0sB,EAAW,KACnEnB,UAAUlhC,GAENA,IAAUqiC,GAAV,yBAC0BC,EAD1B,oBAC0DpC,GAAMlgC,IAIvE,UAwCeuiC,KACd,OAAOP,GAAO,SAAS,KAAM,GAC9B,UAMeQ,GAAejC,GAC7B,OAAO,IAAIiB,GAAO,IACbjB,EACHW,UAAWA,CAAClhC,EAAO8kB,IAAkB,OAAV9kB,GAAkBugC,EAAOW,UAAUlhC,EAAO8kB,GACrEyc,QAASA,CAACvhC,EAAO8kB,IAAkB,OAAV9kB,GAAkBugC,EAAOgB,QAAQvhC,EAAO8kB,IAEpE,UAMevT,KACd,OAAOywB,GAAO,UAAWhiC,GAEH,kBAAVA,IAAuBw6B,MAAMx6B,IAArC,oCACoCkgC,GAAMlgC,IAG/C,UAgDeyiC,GAAelC,GAC7B,OAAO,IAAIiB,GAAO,IACbjB,EACHW,UAAWA,CAAClhC,EAAO8kB,SACP3rB,IAAV6G,GAAuBugC,EAAOW,UAAUlhC,EAAO8kB,GACjDyc,QAASA,CAACvhC,EAAO8kB,SAAkB3rB,IAAV6G,GAAuBugC,EAAOgB,QAAQvhC,EAAO8kB,IAEzE,UASe4d,GACdC,EACAC,GAEA,OAAO,IAAIpB,GAAO,CAChBv9B,KAAM,SACN+8B,OAAQ,KACR,SAAShhC,GACP,GAAIigC,GAASjgC,GACX,IAAK,MAAM+U,KAAK/U,EAAO,CACrB,MAAMjD,EAAIiD,EAAM+U,QACV,CAACA,EAAGA,EAAG4tB,QACP,CAAC5tB,EAAGhY,EAAG6lC,EACd,CAEJ,EACD1B,UAAUlhC,GAENigC,GAASjgC,IAAT,qCAAwDkgC,GAAMlgC,IAIrE,UAiDe6C,KACd,OAAOm/B,GAAO,UAAWhiC,GAEJ,kBAAVA,GAAP,oCACoCkgC,GAAMlgC,IAG/C,UAsDe6hC,GAAMgB,GACpB,MAAMC,EAAQP,KAEd,OAAO,IAAIf,GAAO,CAChBv9B,KAAM,QACN+8B,OAAQ,KACR,SAAShhC,GACP,GAAI7C,MAAMC,QAAQ4C,GAAQ,CACxB,MAAMzI,EAAS+B,KAAKgR,IAAIu4B,EAAStrC,OAAQyI,EAAMzI,QAE/C,IAAK,IAAIoF,EAAI,EAAGA,EAAIpF,EAAQoF,SACpB,CAACA,EAAGqD,EAAMrD,GAAIkmC,EAASlmC,IAAMmmC,EAEtC,CACF,EACD5B,UAAUlhC,GAEN7C,MAAMC,QAAQ4C,IAAd,oCACoCkgC,GAAMlgC,IAIjD,UASeiE,GACd+8B,GAEA,MAAM+B,EAAO3qC,OAAO2qC,KAAK/B,GACzB,OAAO,IAAIQ,GAAO,CAChBv9B,KAAM,OACN+8B,SACA,SAAShhC,GACP,GAAIigC,GAASjgC,GACX,IAAK,MAAM+U,KAAKguB,OACR,CAAChuB,EAAG/U,EAAM+U,GAAIisB,EAAOjsB,GAGhC,EACDmsB,UAAUlhC,GAENigC,GAASjgC,IAAT,qCAAwDkgC,GAAMlgC,IAIrE,UAwDeL,GAAMqjC,GACpB,MAAMV,EAAcU,EAAQlV,KAAK7P,GAAMA,EAAEha,OAAM87B,KAAK,OACpD,OAAO,IAAIyB,GAAO,CAChBv9B,KAAM,QACN+8B,OAAQ,KACRE,UAAUlhC,EAAO8kB,GACf,MAAM8a,EAAW,GAEjB,IAAK,MAAMqD,KAAKD,EAAS,CACvB,SAAUpB,GAAUhB,GAAI5gC,EAAOijC,EAAGne,IAC3B7X,GAAS20B,EAEhB,IAAK30B,EAAM,GACT,MAAO,GAEP,IAAK,MAAO0yB,KAAYiC,EAClBjC,GACFC,EAAShjC,KAAK+iC,EAIrB,CAED,MAAO,CAAC,6CACwC2C,EADzC,oBACyEpC,GAC5ElgC,MAEC4/B,EAEN,GAEJ,UAMesD,KACd,OAAOlB,GAAO,WAAW,KAAM,GAChC,UCtoBelB,GACdP,EACAxK,EACAgL,GAEA,OAAO,IAAIS,GAAO,IACbjB,EACHQ,QAASA,CAAC/gC,EAAO8kB,IACR6c,GAAG3hC,EAAO+1B,GACbwK,EAAOQ,QAAQA,EAAQ/gC,EAAO8kB,GAAMA,GACpCyb,EAAOQ,QAAQ/gC,EAAO8kB,IAG/B,oDCfD,MAAOqe,GAASC,GAAWC,IAA8C,CAAC,GAAI,GAAI,IAC5ElT,GAAMxkB,OAAO,GACbykB,GAAMzkB,OAAO,GACb0kB,GAAM1kB,OAAO,GACb23B,GAAM33B,OAAO,GACb43B,GAAQ53B,OAAO,KACf63B,GAAS73B,OAAO,KACtB,IAAK,IAAIyT,GAAQ,EAAG0e,GAAI1N,GAAK1mB,GAAI,EAAGC,GAAI,EAAGyV,GAAQ,GAAIA,KAAS,EAE7D1V,GAAGC,IAAK,CAACA,IAAI,EAAID,GAAI,EAAIC,IAAK,GAC/Bw5B,GAAQvmC,KAAK,GAAK,EAAI+M,GAAID,KAE1B05B,GAAUxmC,MAAQwiB,GAAQ,IAAMA,GAAQ,GAAM,EAAK,IAEnD,IAAIzJ,EAAIwa,GACR,IAAK,IAAI5pB,EAAI,EAAGA,EAAI,EAAGA,IACrBu3B,IAAMA,IAAK1N,IAAS0N,IAAKwF,IAAOE,IAAWD,GACvCzF,GAAIzN,KAAK1a,GAAKya,KAASA,IAAOzkB,OAAOpF,IAAM6pB,IAEjDiT,GAAWzmC,KAAK+Y,GAElB,MAAO8tB,GAAaC,IAAe7V,EAAAA,MAAUwV,IAAY,GAGnDM,GAAQA,CAAC7iB,EAAWvD,EAAWU,IACnCA,EAAI,GAAK4P,EAAAA,OAAW/M,EAAGvD,EAAGU,GAAK4P,EAAAA,OAAW/M,EAAGvD,EAAGU,GAC5C2lB,GAAQA,CAAC9iB,EAAWvD,EAAWU,IACnCA,EAAI,GAAK4P,EAAAA,OAAW/M,EAAGvD,EAAGU,GAAK4P,EAAAA,OAAW/M,EAAGvD,EAAGU,GA8C5C,MAAO4lB,WAAe9Z,EAQ1BtyB,YACSwxB,EACA6a,EACA9a,GAEsB,IADnB+a,EAAA7qC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACA8qC,EAAA9qC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAiB,GAM3B,GAJAmW,QANO,KAAA4Z,SAAAA,EACA,KAAA6a,OAAAA,EACA,KAAA9a,UAAAA,EACG,KAAA+a,UAAAA,EACA,KAAAC,OAAAA,EAXF,KAAAl6B,IAAM,EACN,KAAAm6B,OAAS,EACT,KAAA3a,UAAW,EAEX,KAAAD,WAAY,EAWpBrY,EAAAA,OAAcgY,GAEV,GAAKjkB,KAAKkkB,UAAYlkB,KAAKkkB,UAAY,IACzC,MAAM,IAAIlwB,MAAM,4Cb9FFgN,Ma+FhBhB,KAAKumB,MAAQ,IAAIt0B,WAAW,KAC5B+N,KAAKm/B,SbhGWn+B,EagGGhB,KAAKumB,Mb/F1B,IAAI3B,YAAY5jB,EAAI1O,OAAQ0O,EAAIzO,WAAYgC,KAAKC,MAAMwM,EAAI/C,WAAa,IagGxE,CACUmhC,UAnEN,SAAkBlmB,GAAmC,IAAnB+lB,EAAA9qC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAiB,GACvD,MAAM6pB,EAAI,IAAI4G,YAAY,IAE1B,IAAK,IAAIvK,EAAQ,GAAK4kB,EAAQ5kB,EAAQ,GAAIA,IAAS,CAEjD,IAAK,IAAI1V,EAAI,EAAGA,EAAI,GAAIA,IAAKqZ,EAAErZ,GAAKuU,EAAEvU,GAAKuU,EAAEvU,EAAI,IAAMuU,EAAEvU,EAAI,IAAMuU,EAAEvU,EAAI,IAAMuU,EAAEvU,EAAI,IACrF,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,MAAM06B,GAAQ16B,EAAI,GAAK,GACjB26B,GAAQ36B,EAAI,GAAK,GACjB46B,EAAKvhB,EAAEshB,GACPE,EAAKxhB,EAAEshB,EAAO,GACdG,EAAKb,GAAMW,EAAIC,EAAI,GAAKxhB,EAAEqhB,GAC1BK,EAAKb,GAAMU,EAAIC,EAAI,GAAKxhB,EAAEqhB,EAAO,GACvC,IAAK,IAAIz6B,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAC3BsU,EAAEvU,EAAIC,IAAM66B,EACZvmB,EAAEvU,EAAIC,EAAI,IAAM86B,EAIpB,IAAIC,EAAOzmB,EAAE,GACT0mB,EAAO1mB,EAAE,GACb,IAAK,IAAItI,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAM7X,EAAQslC,GAAUztB,GAClB6uB,EAAKb,GAAMe,EAAMC,EAAM7mC,GACvB2mC,EAAKb,GAAMc,EAAMC,EAAM7mC,GACvBsgB,EAAK+kB,GAAQxtB,GACnB+uB,EAAOzmB,EAAEG,GACTumB,EAAO1mB,EAAEG,EAAK,GACdH,EAAEG,GAAMomB,EACRvmB,EAAEG,EAAK,GAAKqmB,EAGd,IAAK,IAAI96B,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC/B,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IAAKqZ,EAAErZ,GAAKuU,EAAEtU,EAAID,GAC1C,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAAKuU,EAAEtU,EAAID,KAAOqZ,GAAGrZ,EAAI,GAAK,IAAMqZ,GAAGrZ,EAAI,GAAK,IAG1EuU,EAAE,IAAMwlB,GAAYrkB,GACpBnB,EAAE,IAAMylB,GAAYtkB,GAEtB2D,EAAE1Z,KAAK,EACT,CA2BIu7B,CAAQ7/B,KAAKm/B,QAASn/B,KAAKi/B,QAC3Bj/B,KAAKk/B,OAAS,EACdl/B,KAAK+E,IAAM,CACb,CACAsgB,OAAOlmB,GACL8M,EAAAA,OAAcjM,MACd,MAAM,SAAEkkB,EAAQ,MAAEqC,GAAUvmB,KAEtBjB,GADNI,EAAO2lB,EAAQ3lB,IACE3M,OACjB,IAAK,IAAIuS,EAAM,EAAGA,EAAMhG,GAAO,CAC7B,MAAM4mB,EAAOpxB,KAAKsO,IAAIqhB,EAAWlkB,KAAK+E,IAAKhG,EAAMgG,GACjD,IAAK,IAAInN,EAAI,EAAGA,EAAI+tB,EAAM/tB,IAAK2uB,EAAMvmB,KAAK+E,QAAU5F,EAAK4F,KACrD/E,KAAK+E,MAAQmf,GAAUlkB,KAAKo/B,SAElC,OAAOp/B,IACT,CACU8/B,SACR,GAAI9/B,KAAKukB,SAAU,OACnBvkB,KAAKukB,UAAW,EAChB,MAAM,MAAEgC,EAAK,OAAEwY,EAAM,IAAEh6B,EAAG,SAAEmf,GAAalkB,KAEzCumB,EAAMxhB,IAAQg6B,EACU,KAAV,IAATA,IAAwBh6B,IAAQmf,EAAW,GAAGlkB,KAAKo/B,SACxD7Y,EAAMrC,EAAW,IAAM,IACvBlkB,KAAKo/B,QACP,CACUW,UAAU35B,GAClB6F,EAAAA,OAAcjM,MAAM,GACpBiM,EAAAA,MAAa7F,GACbpG,KAAK8/B,SACL,MAAME,EAAYhgC,KAAKumB,OACjB,SAAErC,GAAalkB,KACrB,IAAK,IAAI+E,EAAM,EAAGhG,EAAMqH,EAAI5T,OAAQuS,EAAMhG,GAAO,CAC3CiB,KAAKk/B,QAAUhb,GAAUlkB,KAAKo/B,SAClC,MAAMzZ,EAAOpxB,KAAKsO,IAAIqhB,EAAWlkB,KAAKk/B,OAAQngC,EAAMgG,GACpDqB,EAAIpB,IAAIg7B,EAAU54B,SAASpH,KAAKk/B,OAAQl/B,KAAKk/B,OAASvZ,GAAO5gB,GAC7D/E,KAAKk/B,QAAUvZ,EACf5gB,GAAO4gB,EAET,OAAOvf,CACT,CACA65B,QAAQ75B,GAEN,IAAKpG,KAAKg/B,UAAW,MAAM,IAAIhrC,MAAM,yCACrC,OAAOgM,KAAK+/B,UAAU35B,EACxB,CACA85B,IAAI55B,GAEF,OADA2F,EAAAA,OAAc3F,GACPtG,KAAKigC,QAAQ,IAAIhuC,WAAWqU,GACrC,CACAyf,WAAW3f,GAET,GADA6F,EAAAA,OAAc7F,EAAKpG,MACfA,KAAKukB,SAAU,MAAM,IAAIvwB,MAAM,+BAGnC,OAFAgM,KAAK+/B,UAAU35B,GACfpG,KAAKwmB,UACEpgB,CACT,CACAkf,SACE,OAAOtlB,KAAK+lB,WAAW,IAAI9zB,WAAW+N,KAAKikB,WAC7C,CACAuC,UACExmB,KAAKskB,WAAY,EACjBtkB,KAAKumB,MAAMjiB,KAAK,EAClB,CACA2gB,WAAWwB,GACT,MAAM,SAAEvC,EAAQ,OAAE6a,EAAM,UAAE9a,EAAS,OAAEgb,EAAM,UAAED,GAAch/B,KAY3D,OAXAymB,IAAAA,EAAO,IAAIqY,GAAO5a,EAAU6a,EAAQ9a,EAAW+a,EAAWC,IAC1DxY,EAAG0Y,QAAQn6B,IAAIhF,KAAKm/B,SACpB1Y,EAAG1hB,IAAM/E,KAAK+E,IACd0hB,EAAGyY,OAASl/B,KAAKk/B,OACjBzY,EAAGlC,SAAWvkB,KAAKukB,SACnBkC,EAAGwY,OAASA,EAEZxY,EAAGsY,OAASA,EACZtY,EAAGxC,UAAYA,EACfwC,EAAGuY,UAAYA,EACfvY,EAAGnC,UAAYtkB,KAAKskB,UACbmC,CACT,EAGF,MAAM0Z,GAAMA,CAACpB,EAAgB7a,EAAkBD,IAC7CiB,GAAgB,IAAM,IAAI4Z,GAAO5a,EAAU6a,EAAQ9a,KAexCmc,IAbWD,GAAI,EAAM,IAAK,IAKfA,GAAI,EAAM,IAAK,IACfA,GAAI,EAAM,IAAK,IACfA,GAAI,EAAM,GAAI,IACZA,GAAI,EAAM,IAAK,IAKfA,GAAI,EAAM,IAAK,KAMnCE,IALoBF,GAAI,EAAM,IAAK,IACfA,GAAI,EAAM,GAAI,IAIvBE,CAACtB,EAAgB7a,EAAkBD,IbzC9C,SACJqc,GAEA,MAAMlb,EAAQA,CAACla,EAAYq1B,IAAyBD,EAASC,GAAMlb,OAAOP,EAAQ5Z,IAAMoa,SAClF1D,EAAM0e,EAAS,CAAC,GAItB,OAHAlb,EAAMnB,UAAYrC,EAAIqC,UACtBmB,EAAMlB,SAAWtC,EAAIsC,SACrBkB,EAAM9xB,OAAUitC,GAAYD,EAASC,GAC9Bnb,CACT,CaiCEob,EACE,eAACD,EAAApsC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAkB,CAAC,EAAC,OACnB,IAAI2qC,GAAO5a,EAAU6a,OAAuB3qC,IAAfmsC,EAAKE,MAAsBxc,EAAYsc,EAAKE,OAAO,EAAK,KAGnEJ,GAAS,GAAM,IAAK,IACpBA,GAAS,GAAM,IAAK,IC1N5C,MAAMK,WAAgC1b,EAQpCtyB,YAAYsxB,EAAaF,GACvBxZ,QAJM,KAAAia,UAAW,EACX,KAAAD,WAAY,EAIlBrY,EAAAA,KAAY+X,GACZ,MAAM0T,EAAM5S,EAAQhB,GAEpB,GADA9jB,KAAK2gC,MAAQ3c,EAAK1wB,SACe,oBAAtB0M,KAAK2gC,MAAMtb,OACpB,MAAM,IAAInzB,UAAU,uDACtB8N,KAAKkkB,SAAWlkB,KAAK2gC,MAAMzc,SAC3BlkB,KAAKikB,UAAYjkB,KAAK2gC,MAAM1c,UAC5B,MAAMC,EAAWlkB,KAAKkkB,SAChBiR,EAAM,IAAIljC,WAAWiyB,GAE3BiR,EAAInwB,IAAI0yB,EAAIllC,OAAS0xB,EAAWF,EAAK1wB,SAAS+xB,OAAOqS,GAAKpS,SAAWoS,GACrE,IAAK,IAAI9/B,EAAI,EAAGA,EAAIu9B,EAAI3iC,OAAQoF,IAAKu9B,EAAIv9B,IAAM,GAC/CoI,KAAK2gC,MAAMtb,OAAO8P,GAElBn1B,KAAK4gC,MAAQ5c,EAAK1wB,SAElB,IAAK,IAAIsE,EAAI,EAAGA,EAAIu9B,EAAI3iC,OAAQoF,IAAKu9B,EAAIv9B,IAAM,IAC/CoI,KAAK4gC,MAAMvb,OAAO8P,GAClBA,EAAI7wB,KAAK,EACX,CACA+gB,OAAO5nB,GAGL,OAFAwO,EAAAA,OAAcjM,MACdA,KAAK2gC,MAAMtb,OAAO5nB,GACXuC,IACT,CACA+lB,WAAW3f,GACT6F,EAAAA,OAAcjM,MACdiM,EAAAA,MAAa7F,EAAKpG,KAAKikB,WACvBjkB,KAAKukB,UAAW,EAChBvkB,KAAK2gC,MAAM5a,WAAW3f,GACtBpG,KAAK4gC,MAAMvb,OAAOjf,GAClBpG,KAAK4gC,MAAM7a,WAAW3f,GACtBpG,KAAKwmB,SACP,CACAlB,SACE,MAAMlf,EAAM,IAAInU,WAAW+N,KAAK4gC,MAAM3c,WAEtC,OADAjkB,KAAK+lB,WAAW3f,GACTA,CACT,CACA6e,WAAWwB,GAETA,IAAAA,EAAOpzB,OAAOC,OAAOD,OAAOwtC,eAAe7gC,MAAO,CAAC,IACnD,MAAM,MAAE4gC,EAAK,MAAED,EAAK,SAAEpc,EAAQ,UAAED,EAAS,SAAEJ,EAAQ,UAAED,GAAcjkB,KAQnE,OANAymB,EAAGlC,SAAWA,EACdkC,EAAGnC,UAAYA,EACfmC,EAAGvC,SAAWA,EACduC,EAAGxC,UAAYA,EACfwC,EAAGma,MAAQA,EAAM3b,WAAWwB,EAAGma,OAC/Bna,EAAGka,MAAQA,EAAM1b,WAAWwB,EAAGka,OACxBla,CACT,CACAD,UACExmB,KAAKskB,WAAY,EACjBtkB,KAAK4gC,MAAMpa,UACXxmB,KAAK2gC,MAAMna,SACb,EASK,MAAMsa,GAAOA,CAAC9c,EAAa0T,EAAYhtB,IAC5C,IAAIg2B,GAAU1c,EAAM0T,GAAKrS,OAAO3a,GAAS4a,SAC3Cwb,GAAKxtC,OAAS,CAAC0wB,EAAa0T,IAAe,IAAIgJ,GAAU1c,EAAM0T,gCC9E/D,MAAMtM,GAAMxkB,OAAO,GACbykB,GAAMzkB,OAAO,GACb0kB,GAAM1kB,OAAO,GACbm6B,GAAMn6B,OAAO,GACb2kB,GAAM3kB,OAAO,GACb6kB,GAAQp4B,OAAOq4B,OAAO,CACxBhnB,EAAG0mB,GACHp5B,EAAG4U,OAAO,GACVglB,EAAGhlB,OAAO,sEACVpG,EAAGoG,OAAO,sEACVmV,EAAGsP,GACHQ,GAAIjlB,OAAO,iFACXklB,GAAIllB,OAAO,iFACXo6B,KAAMp6B,OAAO,wEAEXq6B,GAAaA,CAACv8B,EAAG1S,KAAO0S,EAAI1S,EAAIs5B,IAAOt5B,EACvCkvC,GAAO,CACTF,KAAMp6B,OAAO,sEACbu6B,YAAYnxB,GACR,MAAM,EAAExP,GAAMirB,GACRrY,EAAKxM,OAAO,sCACZsO,GAAMmW,GAAMzkB,OAAO,sCACnB2M,EAAK3M,OAAO,uCACZyO,EAAKjC,EACLguB,EAAYx6B,OAAO,uCACnBy6B,EAAKJ,GAAW5rB,EAAKrF,EAAGxP,GACxB8gC,EAAKL,IAAY/rB,EAAKlF,EAAGxP,GAC/B,IAAI+gC,EAAK9yB,GAAIuB,EAAIqxB,EAAKjuB,EAAKkuB,EAAK/tB,EAAI/S,GAChCghC,EAAK/yB,IAAK4yB,EAAKnsB,EAAKosB,EAAKjsB,EAAI7U,GACjC,MAAMihC,EAAQF,EAAKH,EACbM,EAAQF,EAAKJ,EAKnB,GAJIK,IACAF,EAAK/gC,EAAI+gC,GACTG,IACAF,EAAKhhC,EAAIghC,GACTD,EAAKH,GAAaI,EAAKJ,EACvB,MAAM,IAAIptC,MAAM,2CAA6Cgc,GAEjE,MAAO,CAAEyxB,QAAOF,KAAIG,QAAOF,KAC/B,GAEEG,GAAW,GACXC,GAAW,GACXC,GAAU,GACVC,GAAgBH,GAAW,EAC3BI,GAAkB,EAAIJ,GAAW,EAEvC,SAASK,GAAYr9B,GACjB,MAAM,EAAED,EAAC,EAAE1S,GAAMy5B,GACX5M,EAAKpQ,GAAI9J,EAAIA,GACbs9B,EAAKxzB,GAAIoQ,EAAKla,GACpB,OAAO8J,GAAIwzB,EAAKv9B,EAAIC,EAAI3S,EAC5B,CACA,MAAMkwC,GAAmBzW,GAAM/mB,IAAM0mB,GACrC,MAAM+W,WAAiBnuC,MACnBtB,YAAYgY,GACRJ,MAAMI,EACV,EAEJ,SAAS03B,GAAejV,GACpB,KAAMA,aAAiBkV,IACnB,MAAM,IAAInwC,UAAU,yBAC5B,CACA,MAAMmwC,GACF3vC,YAAYiS,EAAGC,EAAGwe,GACdpjB,KAAK2E,EAAIA,EACT3E,KAAK4E,EAAIA,EACT5E,KAAKojB,EAAIA,CACb,CACAkJ,kBAAkB9S,GACd,KAAMA,aAAa+S,IACf,MAAM,IAAIr6B,UAAU,4CAExB,OAAIsnB,EAAEnU,OAAOknB,GAAMC,MACR6V,GAAc7V,KAClB,IAAI6V,GAAc7oB,EAAE7U,EAAG6U,EAAE5U,EAAGymB,GACvC,CACAiB,qBAAqBG,GACjB,MAAMC,EAkkBd,SAAqBC,GAAmB,IAAbnT,EAACrlB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAGs3B,GAAMG,EACjC,MAAM0W,EAAU,IAAIlqC,MAAMu0B,EAAKn6B,QAOzBo6B,EAAWC,GANMF,EAAK50B,QAAO,CAACO,EAAKmV,EAAK7V,IACtC6V,IAAQ2d,GACD9yB,GACXgqC,EAAQ1qC,GAAKU,EACNmW,GAAInW,EAAMmV,EAAK+L,KACvB6R,IACqC7R,GAOxC,OANAmT,EAAKG,aAAY,CAACx0B,EAAKmV,EAAK7V,IACpB6V,IAAQ2d,GACD9yB,GACXgqC,EAAQ1qC,GAAK6W,GAAInW,EAAMgqC,EAAQ1qC,GAAI4hB,GAC5B/K,GAAInW,EAAMmV,EAAK+L,KACvBoT,GACI0V,CACX,CAllBsBvV,CAAYN,EAAO1D,KAAKvP,GAAMA,EAAE4J,KAC9C,OAAOqJ,EAAO1D,KAAI,CAACvP,EAAG5hB,IAAM4hB,EAAEwT,SAASN,EAAM90B,KACjD,CACA00B,kBAAkBG,GACd,OAAO4V,GAAcpV,cAAcR,GAAQ1D,IAAIsZ,GAAcnV,WACjE,CACA7nB,OAAO8nB,GACHiV,GAAejV,GACf,MAAQxoB,EAAG0oB,EAAIzoB,EAAG0oB,EAAIlK,EAAGmK,GAAOvtB,MACxB2E,EAAG6oB,EAAI5oB,EAAG6oB,EAAIrK,EAAGsK,GAAOP,EAC1BoV,EAAO9zB,GAAI8e,EAAKA,GAChBiV,EAAO/zB,GAAIif,EAAKA,GAChB+U,EAAKh0B,GAAI4e,EAAKmV,GACdE,EAAKj0B,GAAI+e,EAAK+U,GACdI,EAAKl0B,GAAIA,GAAI6e,EAAKI,GAAM8U,GACxBI,EAAKn0B,GAAIA,GAAIgf,EAAKF,GAAMgV,GAC9B,OAAOE,IAAOC,GAAMC,IAAOC,CAC/B,CACA7U,SACI,OAAO,IAAIsU,GAAcriC,KAAK2E,EAAG8J,IAAKzO,KAAK4E,GAAI5E,KAAKojB,EACxD,CACA4K,SACI,MAAQrpB,EAAG0oB,EAAIzoB,EAAG0oB,EAAIlK,EAAGmK,GAAOvtB,KAC1B+d,EAAItP,GAAI4e,EAAKA,GACbrP,EAAIvP,GAAI6e,EAAKA,GACbrP,EAAIxP,GAAIuP,EAAIA,GACZ6kB,EAAMxV,EAAKrP,EACXE,EAAIzP,GAAI6c,IAAO7c,GAAIo0B,EAAMA,GAAO9kB,EAAIE,IACpC/T,EAAIuE,GAAIsyB,GAAMhjB,GACdoQ,EAAI1f,GAAIvE,EAAIA,GACZmkB,EAAK5f,GAAI0f,EAAI7C,GAAMpN,GACnBoQ,EAAK7f,GAAIvE,GAAKgU,EAAImQ,GAAM9C,GAAMtN,GAC9BuQ,EAAK/f,GAAI6c,GAAMgC,EAAKC,GAC1B,OAAO,IAAI8U,GAAchU,EAAIC,EAAIE,EACrC,CACA3b,IAAIsa,GACAiV,GAAejV,GACf,MAAQxoB,EAAG0oB,EAAIzoB,EAAG0oB,EAAIlK,EAAGmK,GAAOvtB,MACxB2E,EAAG6oB,EAAI5oB,EAAG6oB,EAAIrK,EAAGsK,GAAOP,EAChC,GAAIK,IAAOpC,IAAOqC,IAAOrC,GACrB,OAAOprB,KACX,GAAIqtB,IAAOjC,IAAOkC,IAAOlC,GACrB,OAAO+B,EACX,MAAMoV,EAAO9zB,GAAI8e,EAAKA,GAChBiV,EAAO/zB,GAAIif,EAAKA,GAChB+U,EAAKh0B,GAAI4e,EAAKmV,GACdE,EAAKj0B,GAAI+e,EAAK+U,GACdI,EAAKl0B,GAAIA,GAAI6e,EAAKI,GAAM8U,GACxBI,EAAKn0B,GAAIA,GAAIgf,EAAKF,GAAMgV,GACxBnU,EAAI3f,GAAIi0B,EAAKD,GACbn1B,EAAImB,GAAIm0B,EAAKD,GACnB,GAAIvU,IAAMhD,GACN,OAAI9d,IAAM8d,GACCprB,KAAKguB,SAGLqU,GAAc7V,KAG7B,MAAMsW,EAAKr0B,GAAI2f,EAAIA,GACb2U,EAAMt0B,GAAI2f,EAAI0U,GACdE,EAAIv0B,GAAIg0B,EAAKK,GACbzU,EAAK5f,GAAInB,EAAIA,EAAIy1B,EAAMzX,GAAM0X,GAC7B1U,EAAK7f,GAAInB,GAAK01B,EAAI3U,GAAMsU,EAAKI,GAC7BvU,EAAK/f,GAAI8e,EAAKG,EAAKU,GACzB,OAAO,IAAIiU,GAAchU,EAAIC,EAAIE,EACrC,CACAG,SAASxB,GACL,OAAOntB,KAAK6S,IAAIsa,EAAMY,SAC1B,CACAoC,eAAeF,GACX,MAAMG,EAAKiS,GAAc7V,KACzB,GAAsB,kBAAXyD,GAAuBA,IAAW7E,GACzC,OAAOgF,EACX,IAAI5vB,EAAI0vB,GAAgBD,GACxB,GAAIzvB,IAAM6qB,GACN,OAAOrrB,KACX,IAAKkiC,GAAkB,CACnB,IAAI1oB,EAAI4W,EACJzE,EAAI3rB,KACR,KAAOQ,EAAI4qB,IACH5qB,EAAI6qB,KACJ7R,EAAIA,EAAE3G,IAAI8Y,IACdA,EAAIA,EAAEqC,SACNxtB,IAAM6qB,GAEV,OAAO7R,CACX,CACA,IAAI,MAAEioB,EAAK,GAAEF,EAAE,MAAEG,EAAK,GAAEF,GAAON,GAAKC,YAAY3gC,GAC5CyiC,EAAM7S,EACN8S,EAAM9S,EACNzE,EAAI3rB,KACR,KAAOuhC,EAAKnW,IAAOoW,EAAKpW,IAChBmW,EAAKlW,KACL4X,EAAMA,EAAIpwB,IAAI8Y,IACd6V,EAAKnW,KACL6X,EAAMA,EAAIrwB,IAAI8Y,IAClBA,EAAIA,EAAEqC,SACNuT,IAAOlW,GACPmW,IAAOnW,GAOX,OALIoW,IACAwB,EAAMA,EAAIlV,UACV2T,IACAwB,EAAMA,EAAInV,UACdmV,EAAM,IAAIb,GAAc5zB,GAAIy0B,EAAIv+B,EAAIu8B,GAAKF,MAAOkC,EAAIt+B,EAAGs+B,EAAI9f,GACpD6f,EAAIpwB,IAAIqwB,EACnB,CACAtU,iBAAiBC,GACb,MAAMC,EAAUoT,GAAmB,IAAMrT,EAAI,EAAI,IAAMA,EAAI,EACrDpC,EAAS,GACf,IAAIjT,EAAIxZ,KACJyM,EAAO+M,EACX,IAAK,IAAIvM,EAAS,EAAGA,EAAS6hB,EAAS7hB,IAAU,CAC7CR,EAAO+M,EACPiT,EAAO50B,KAAK4U,GACZ,IAAK,IAAI7U,EAAI,EAAGA,EAAI,IAAMi3B,EAAI,GAAIj3B,IAC9B6U,EAAOA,EAAKoG,IAAI2G,GAChBiT,EAAO50B,KAAK4U,GAEhB+M,EAAI/M,EAAKuhB,QACb,CACA,OAAOvB,CACX,CACAsC,KAAKvuB,EAAGwuB,IACCA,GAAehvB,KAAKqF,OAAOg9B,GAAcpT,QAC1CD,EAAczC,GAAM0C,MACxB,MAAMJ,EAAKG,GAAeA,EAAYE,cAAiB,EACvD,GAAI,IAAML,EACN,MAAM,IAAI76B,MAAM,iEAEpB,IAAIm7B,EAAcH,GAAeI,GAAiBhrB,IAAI4qB,GACjDG,IACDA,EAAcnvB,KAAK4uB,iBAAiBC,GAChCG,GAAqB,IAANH,IACfM,EAAckT,GAAchT,WAAWF,GACvCC,GAAiBpqB,IAAIgqB,EAAaG,KAG1C,IAAI3V,EAAI6oB,GAAc7V,KAClB8C,EAAI+S,GAAcpT,KACtB,MAAMH,EAAU,GAAKoT,GAAmB,IAAMrT,EAAI,IAAMA,GAClDU,EAAa,IAAMV,EAAI,GACvB7S,EAAOpV,OAAO,GAAKioB,EAAI,GACvBW,EAAY,GAAKX,EACjBY,EAAU7oB,OAAOioB,GACvB,IAAK,IAAI5hB,EAAS,EAAGA,EAAS6hB,EAAS7hB,IAAU,CAC7C,MAAMha,EAASga,EAASsiB,EACxB,IAAIG,EAAQ78B,OAAO2N,EAAIwb,GACvBxb,IAAMivB,EACFC,EAAQH,IACRG,GAASF,EACThvB,GAAK6qB,IAET,MAAMsE,EAAU18B,EACV28B,EAAU38B,EAASsB,KAAK6W,IAAIskB,GAAS,EACrCG,EAAQ5iB,EAAS,IAAM,EACvB6iB,EAAQJ,EAAQ,EACR,IAAVA,EACAJ,EAAIA,EAAEzc,IAAIkd,GAAgBF,EAAOV,EAAYQ,KAG7CnW,EAAIA,EAAE3G,IAAIkd,GAAgBD,EAAOX,EAAYS,IAErD,CACA,MAAO,CAAEpW,IAAG8V,IAChB,CACAU,SAASC,EAAQjB,GACb,IACIyF,EACA0O,EAFA3iC,EAAI0vB,GAAgBD,GAGxB,GAAIiS,GAAkB,CAClB,MAAM,MAAET,EAAK,GAAEF,EAAE,MAAEG,EAAK,GAAEF,GAAON,GAAKC,YAAY3gC,GAClD,IAAMgZ,EAAGypB,EAAK3T,EAAG8T,GAAQpjC,KAAK+uB,KAAKwS,EAAIvS,IACjCxV,EAAG0pB,EAAK5T,EAAG+T,GAAQrjC,KAAK+uB,KAAKyS,EAAIxS,GACvCiU,EAAMlT,GAAgB0R,EAAOwB,GAC7BC,EAAMnT,GAAgB2R,EAAOwB,GAC7BA,EAAM,IAAIb,GAAc5zB,GAAIy0B,EAAIv+B,EAAIu8B,GAAKF,MAAOkC,EAAIt+B,EAAGs+B,EAAI9f,GAC3DqR,EAAQwO,EAAIpwB,IAAIqwB,GAChBC,EAAOC,EAAIvwB,IAAIwwB,EACnB,KACK,CACD,MAAM,EAAE7pB,EAAC,EAAE8V,GAAMtvB,KAAK+uB,KAAKvuB,EAAGwuB,GAC9ByF,EAAQjb,EACR2pB,EAAO7T,CACX,CACA,OAAO+S,GAAchT,WAAW,CAACoF,EAAO0O,IAAO,EACnD,CACAnW,SAASuD,GACL,MAAM,EAAE5rB,EAAC,EAAEC,EAAC,EAAEwe,GAAMpjB,KACdwwB,EAAMxwB,KAAKqF,OAAOg9B,GAAc7V,MAC1B,MAAR+D,IACAA,EAAOC,EAAMjF,GAAMsB,GAAOzJ,IAC9B,MAAMkgB,EAAM/S,EACNgT,EAAM90B,GAAI60B,EAAMA,GAChBE,EAAM/0B,GAAI80B,EAAMD,GAChB7S,EAAKhiB,GAAI9J,EAAI4+B,GACb7S,EAAKjiB,GAAI7J,EAAI4+B,GACb7S,EAAKliB,GAAI2U,EAAIkgB,GACnB,GAAI9S,EACA,OAAOjE,GAAMC,KACjB,GAAImE,IAAOtF,GACP,MAAM,IAAIr3B,MAAM,oBACpB,OAAO,IAAIu4B,GAAMkE,EAAIC,EACzB,EAIJ,SAASX,GAAgBiB,EAAWC,GAChC,MAAMxf,EAAMwf,EAAKlD,SACjB,OAAOiD,EAAYvf,EAAMwf,CAC7B,CALAoR,GAAcpT,KAAO,IAAIoT,GAAc5W,GAAMI,GAAIJ,GAAMK,GAAIT,IAC3DgX,GAAc7V,KAAO,IAAI6V,GAAcjX,GAAKC,GAAKD,IAKjD,MAAMgE,GAAmB,IAAI2E,QACtB,MAAMxH,GACT75B,YAAYiS,EAAGC,GACX5E,KAAK2E,EAAIA,EACT3E,KAAK4E,EAAIA,CACb,CACAovB,eAAezE,GACXvvB,KAAKkvB,aAAeK,EACpBH,GAAiB6E,OAAOj0B,KAC5B,CACAyjC,WACI,OAAOzjC,KAAK4E,EAAI0mB,KAAQF,EAC5B,CACAkB,yBAAyBhmB,GACrB,MAAMo9B,EAA2B,KAAjBp9B,EAAM9T,OAChBmS,EAAIg/B,GAAcD,EAAUp9B,EAAQA,EAAMc,SAAS,IACzD,IAAKw8B,GAAoBj/B,GACrB,MAAM,IAAI3Q,MAAM,yBAEpB,IAAI4Q,EA6SZ,SAAiBD,GACb,MAAM,EAAEinB,GAAMH,GACRoY,EAAMj9B,OAAO,GACbk9B,EAAOl9B,OAAO,IACdm9B,EAAOn9B,OAAO,IACdo9B,EAAOp9B,OAAO,IACdq9B,EAAOr9B,OAAO,IACds9B,EAAOt9B,OAAO,IACdyO,EAAM1Q,EAAIA,EAAIA,EAAKinB,EACnBpW,EAAMH,EAAKA,EAAK1Q,EAAKinB,EACrB3V,EAAM6f,GAAKtgB,EAAIurB,IAAOvrB,EAAMoW,EAC5BlV,EAAMof,GAAK7f,EAAI8qB,IAAOvrB,EAAMoW,EAC5BuY,EAAOrO,GAAKpf,EAAI4U,IAAOjW,EAAMuW,EAC7BwY,EAAOtO,GAAKqO,EAAKL,GAAQK,EAAOvY,EAChCyY,EAAOvO,GAAKsO,EAAKL,GAAQK,EAAOxY,EAChC0Y,EAAOxO,GAAKuO,EAAKJ,GAAQI,EAAOzY,EAChC2Y,EAAQzO,GAAKwO,EAAKJ,GAAQI,EAAO1Y,EACjC4Y,EAAQ1O,GAAKyO,EAAMN,GAAQI,EAAOzY,EAClC6Y,EAAQ3O,GAAK0O,EAAMzD,IAAOvrB,EAAMoW,EAChC8Y,EAAM5O,GAAK2O,EAAMT,GAAQI,EAAOxY,EAChC+Y,EAAM7O,GAAK4O,EAAIb,GAAOxuB,EAAMuW,EAC5BgZ,EAAK9O,GAAK6O,EAAIrZ,IAEpB,GADYsZ,EAAKA,EAAMhZ,IACZjnB,EACP,MAAM,IAAI3Q,MAAM,2BACpB,OAAO4wC,CACX,CAvUgBC,CADG7C,GAAYr9B,IAEvB,MAAMmgC,GAAUlgC,EAAIymB,MAASA,GAC7B,GAAIqY,EACIoB,IACAlgC,EAAI6J,IAAK7J,QAEZ,CACyC,KAAP,EAAX0B,EAAM,MACPw+B,IACnBlgC,EAAI6J,IAAK7J,GACjB,CACA,MAAM6vB,EAAQ,IAAIlI,GAAM5nB,EAAGC,GAE3B,OADA6vB,EAAMG,iBACCH,CACX,CACAnI,2BAA2BhmB,GACvB,MAAM3B,EAAIg/B,GAAcr9B,EAAMc,SAAS,EAAGu6B,GAAW,IAC/C/8B,EAAI++B,GAAcr9B,EAAMc,SAASu6B,GAAW,EAAc,EAAXA,GAAe,IAC9DlN,EAAQ,IAAIlI,GAAM5nB,EAAGC,GAE3B,OADA6vB,EAAMG,iBACCH,CACX,CACAnI,eAAe4F,GACX,MAAM5rB,EAAQ+rB,GAAYH,GACpBnzB,EAAMuH,EAAM9T,OACZuyC,EAASz+B,EAAM,GACrB,GAAIvH,IAAQ4iC,GACR,OAAO3hC,KAAKglC,kBAAkB1+B,GAClC,GAAIvH,IAAQ+iC,KAA6B,IAAXiD,GAA8B,IAAXA,GAC7C,OAAO/kC,KAAKglC,kBAAkB1+B,GAElC,GAAIvH,IAAQgjC,IAA8B,IAAXgD,EAC3B,OAAO/kC,KAAKilC,oBAAoB3+B,GACpC,MAAM,IAAItS,MAAO,sDAAqD8tC,0BAAqCC,8BAA2ChjC,IAC1J,CACAutB,sBAAsBiI,GAClB,OAAOhI,GAAM0C,KAAKe,SAASkV,GAAoB3Q,GACnD,CACAjI,qBAAqB6Y,EAASC,EAAWC,GACrC,MAAM,EAAE/3B,EAAC,EAAE4L,GAAMosB,GAAmBF,GACpC,IAAK,CAAC,EAAG,EAAG,EAAG,GAAGr/B,SAASs/B,GACvB,MAAM,IAAIrxC,MAAM,wCACpB,MAAM+nB,EAAIwpB,GAAalT,GAAY8S,KAC7B,EAAE3kC,GAAMirB,GACR+Z,EAAoB,IAAbH,GAA+B,IAAbA,EAAiB/3B,EAAI9M,EAAI8M,EAClDgV,EAAOuK,GAAO2Y,EAAMhlC,GACpBoyB,EAAKnkB,IAAKsN,EAAIuG,EAAM9hB,GACpBqyB,EAAKpkB,GAAIyK,EAAIoJ,EAAM9hB,GACnBs3B,EAAoB,EAAXuN,EAAe,KAAO,KAC/BtM,EAAIxM,GAAMsI,QAAQiD,EAAS2N,GAAYD,IACvCE,EAAInZ,GAAM0C,KAAK0W,qBAAqB5M,EAAGnG,EAAIC,GACjD,IAAK6S,EACD,MAAM,IAAI1xC,MAAM,+CAEpB,OADA0xC,EAAE9Q,iBACK8Q,CACX,CACAtS,aAAiC,IAAtBwS,EAAYzxC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACnB,OAAOmhC,GAAWt1B,KAAK4zB,MAAMgS,GACjC,CACAhS,QAA4B,IAAtBgS,EAAYzxC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACd,MAAMwQ,EAAI8gC,GAAYzlC,KAAK2E,GAC3B,GAAIihC,EAAc,CAEd,MAAQ,GADO5lC,KAAKyjC,WAAa,KAAO,OACrB9+B,GACvB,CAEI,MAAQ,KAAIA,IAAI8gC,GAAYzlC,KAAK4E,IAEzC,CACAihC,SACI,OAAO7lC,KAAK4zB,OAAM,GAAMx3B,MAAM,EAClC,CACA0pC,SACI,OAAO9lC,KAAKozB,YAAW,GAAMh3B,MAAM,EACvC,CACAw4B,iBACI,MAAM1pB,EAAM,kCACN,EAAEvG,EAAC,EAAEC,GAAM5E,KACjB,IAAK4jC,GAAoBj/B,KAAOi/B,GAAoBh/B,GAChD,MAAM,IAAI5Q,MAAMkX,GACpB,MAAMwC,EAAOe,GAAI7J,EAAIA,GAErB,GAAI6J,GAAIf,EADMs0B,GAAYr9B,MACAymB,GACtB,MAAM,IAAIp3B,MAAMkX,EACxB,CACA7F,OAAO8nB,GACH,OAAOntB,KAAK2E,IAAMwoB,EAAMxoB,GAAK3E,KAAK4E,IAAMuoB,EAAMvoB,CAClD,CACAmpB,SACI,OAAO,IAAIxB,GAAMvsB,KAAK2E,EAAG8J,IAAKzO,KAAK4E,GACvC,CACAopB,SACI,OAAOqU,GAAcnV,WAAWltB,MAAMguB,SAAShB,UACnD,CACAna,IAAIsa,GACA,OAAOkV,GAAcnV,WAAWltB,MAAM6S,IAAIwvB,GAAcnV,WAAWC,IAAQH,UAC/E,CACA2B,SAASxB,GACL,OAAOntB,KAAK6S,IAAIsa,EAAMY,SAC1B,CACAiC,SAASC,GACL,OAAOoS,GAAcnV,WAAWltB,MAAMgwB,SAASC,EAAQjwB,MAAMgtB,UACjE,CACA2Y,qBAAqBD,EAAGhhC,EAAG1S,GACvB,MAAM45B,EAAIyW,GAAcnV,WAAWltB,MAC7B+lC,EAAKrhC,IAAM0mB,IAAO1mB,IAAM2mB,IAAOrrB,OAASusB,GAAM0C,KAAOrD,EAAEuE,eAAezrB,GAAKknB,EAAEoE,SAAStrB,GACtFshC,EAAK3D,GAAcnV,WAAWwY,GAAGvV,eAAen+B,GAChD8J,EAAMiqC,EAAGlzB,IAAImzB,GACnB,OAAOlqC,EAAIuJ,OAAOg9B,GAAc7V,WAAQp4B,EAAY0H,EAAIkxB,UAC5D,EAIJ,SAASiZ,GAAS/sB,GACd,OAAOrmB,OAAOgP,SAASqX,EAAE,GAAI,KAAO,EAAI,KAAOA,EAAIA,CACvD,CACA,SAASgtB,GAAY/mC,GACjB,GAAIA,EAAK3M,OAAS,GAAiB,IAAZ2M,EAAK,GACxB,MAAM,IAAInL,MAAO,kCAAiC6/B,GAAW10B,MAEjE,MAAMJ,EAAMI,EAAK,GACX2D,EAAM3D,EAAKiI,SAAS,EAAGrI,EAAM,GACnC,IAAKA,GAAO+D,EAAItQ,SAAWuM,EACvB,MAAM,IAAI/K,MAAO,2CAErB,GAAe,IAAX8O,EAAI,IAAeA,EAAI,IAAM,IAC7B,MAAM,IAAI9O,MAAM,8CAEpB,MAAO,CAAEmL,KAAMwkC,GAAc7gC,GAAM4K,KAAMvO,EAAKiI,SAASrI,EAAM,GACjE,CAlBAwtB,GAAM0C,KAAO,IAAI1C,GAAMd,GAAMI,GAAIJ,GAAMK,IACvCS,GAAMC,KAAO,IAAID,GAAMnB,GAAKA,IAgCrB,MAAMuJ,GACTjiC,YAAY4a,EAAG4L,GACXlZ,KAAKsN,EAAIA,EACTtN,KAAKkZ,EAAIA,EACTlZ,KAAK40B,gBACT,CACAtI,mBAAmB4F,GACf,MAAMlxB,EAAMkxB,aAAejgC,WACrB2B,EAAO,wBACb,GAAmB,kBAARs+B,IAAqBlxB,EAC5B,MAAM,IAAI9O,UAAW,GAAE0B,oCAC3B,MAAMsO,EAAMlB,EAAM6yB,GAAW3B,GAAOA,EACpC,GAAmB,MAAfhwB,EAAI1P,OACJ,MAAM,IAAIwB,MAAO,GAAEJ,2BACvB,OAAO,IAAI+gC,GAAUwR,GAAYjkC,EAAI9F,MAAM,EAAG,KAAM+pC,GAAYjkC,EAAI9F,MAAM,GAAI,MAClF,CACAkwB,eAAe4F,GACX,MAAMlxB,EAAMkxB,aAAejgC,WAC3B,GAAmB,kBAARigC,IAAqBlxB,EAC5B,MAAM,IAAI9O,UAAW,oDACzB,MAAM,EAAEob,EAAC,EAAE4L,GAlCnB,SAA2B/Z,GACvB,GAAIA,EAAK3M,OAAS,GAAgB,IAAX2M,EAAK,GACxB,MAAM,IAAInL,MAAO,0BAAyB6/B,GAAW10B,MAEzD,GAAIA,EAAK,KAAOA,EAAK3M,OAAS,EAC1B,MAAM,IAAIwB,MAAM,uCAEpB,MAAQmL,KAAMmO,EAAGI,KAAM04B,GAAWF,GAAY/mC,EAAKiI,SAAS,KACpDjI,KAAM+Z,EAAGxL,KAAM24B,GAAeH,GAAYE,GAClD,GAAIC,EAAW7zC,OACX,MAAM,IAAIwB,MAAO,gDAA+C6/B,GAAWwS,MAE/E,MAAO,CAAE/4B,IAAG4L,IAChB,CAqByBotB,CAAkBtlC,EAAMkxB,EAAMoD,GAAWpD,IAC1D,OAAO,IAAIyC,GAAUrnB,EAAG4L,EAC5B,CACAoT,eAAe4F,GACX,OAAOlyB,KAAKumC,QAAQrU,EACxB,CACA0C,iBACI,MAAM,EAAEtnB,EAAC,EAAE4L,GAAMlZ,KACjB,IAAKwmC,GAAmBl5B,GACpB,MAAM,IAAItZ,MAAM,0CACpB,IAAKwyC,GAAmBttB,GACpB,MAAM,IAAIllB,MAAM,yCACxB,CACAyyC,WACI,MAAMC,EAAOjb,GAAMjrB,GAAK6qB,GACxB,OAAOrrB,KAAKkZ,EAAIwtB,CACpB,CACAC,aACI,OAAO3mC,KAAKymC,WAAa,IAAI9R,GAAU30B,KAAKsN,EAAGmB,IAAKzO,KAAKkZ,EAAGuS,GAAMjrB,IAAMR,IAC5E,CACA4mC,gBACI,OAAOtR,GAAWt1B,KAAK6mC,WAC3B,CACAA,WACI,MAAMC,EAAOb,GAASc,GAAoB/mC,KAAKkZ,IACzC8tB,EAAOf,GAASc,GAAoB/mC,KAAKsN,IACzC25B,EAAQH,EAAKt0C,OAAS,EACtB00C,EAAQF,EAAKx0C,OAAS,EACtB20C,EAAOJ,GAAoBE,GAC3BG,EAAOL,GAAoBG,GAEjC,MAAQ,KADOH,GAAoBG,EAAQD,EAAQ,OAC5BG,IAAOJ,MAASG,IAAOL,GAClD,CACA1T,aACI,OAAOpzB,KAAK4mC,eAChB,CACAhT,QACI,OAAO5zB,KAAK6mC,UAChB,CACAQ,oBACI,OAAO/R,GAAWt1B,KAAKsnC,eAC3B,CACAA,eACI,OAAO7B,GAAYzlC,KAAKsN,GAAKm4B,GAAYzlC,KAAKkZ,EAClD,EAEJ,SAAS6b,KAAuB,QAAAnR,EAAAzvB,UAAA3B,OAARwiC,EAAM,IAAA58B,MAAAwrB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAANkR,EAAMlR,GAAA3vB,UAAA2vB,GAC1B,IAAKkR,EAAOC,OAAOjjC,GAAMA,aAAaC,aAClC,MAAM,IAAI+B,MAAM,4BACpB,GAAsB,IAAlBghC,EAAOxiC,OACP,OAAOwiC,EAAO,GAClB,MAAMxiC,EAASwiC,EAAOj9B,QAAO,CAAC2M,EAAG1D,IAAQ0D,EAAI1D,EAAIxO,QAAQ,GACnD0iC,EAAS,IAAIjjC,WAAWO,GAC9B,IAAK,IAAIoF,EAAI,EAAGu9B,EAAM,EAAGv9B,EAAIo9B,EAAOxiC,OAAQoF,IAAK,CAC7C,MAAMoJ,EAAMg0B,EAAOp9B,GACnBs9B,EAAOlwB,IAAIhE,EAAKm0B,GAChBA,GAAOn0B,EAAIxO,MACf,CACA,OAAO0iC,CACX,CACA,MAAME,GAAQh9B,MAAM/F,KAAK,CAAEG,OAAQ,MAAO,CAACwF,EAAGJ,IAAMA,EAAE2E,SAAS,IAAIsoB,SAAS,EAAG,OAC/E,SAASgP,GAAWwB,GAChB,KAAMA,aAAkBpjC,YACpB,MAAM,IAAI+B,MAAM,uBACpB,IAAIk+B,EAAM,GACV,IAAK,IAAIt6B,EAAI,EAAGA,EAAIy9B,EAAO7iC,OAAQoF,IAC/Bs6B,GAAOkD,GAAMC,EAAOz9B,IAExB,OAAOs6B,CACX,CACA,MAAMnG,GAAYnlB,OAAO,uEACzB,SAAS6+B,GAAYh4B,GACjB,GAAmB,kBAARA,EACP,MAAM,IAAIzZ,MAAM,mBACpB,KAAMo3B,IAAO3d,GAAOA,EAAMse,IACtB,MAAM,IAAI/3B,MAAM,kCACpB,OAAOyZ,EAAIlR,SAAS,IAAIsoB,SAAS,GAAI,IACzC,CACA,SAAS0iB,GAAS95B,GACd,MAAMzb,EAAIsjC,GAAWmQ,GAAYh4B,IACjC,GAAiB,KAAbzb,EAAEQ,OACF,MAAM,IAAIwB,MAAM,4BACpB,OAAOhC,CACX,CACA,SAAS+0C,GAAoBt5B,GACzB,MAAMykB,EAAMzkB,EAAIlR,SAAS,IACzB,OAAoB,EAAb21B,EAAI1/B,OAAc,IAAG0/B,IAAQA,CACxC,CACA,SAASiU,GAAYjU,GACjB,GAAmB,kBAARA,EACP,MAAM,IAAIhgC,UAAU,4CAA8CggC,GAEtE,OAAOtrB,OAAQ,KAAIsrB,IACvB,CACA,SAASoD,GAAWpD,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAIhgC,UAAU,2CAA6CggC,GAErE,GAAIA,EAAI1/B,OAAS,EACb,MAAM,IAAIwB,MAAM,4CAA8Ck+B,EAAI1/B,QACtE,MAAMgN,EAAQ,IAAIvN,WAAWigC,EAAI1/B,OAAS,GAC1C,IAAK,IAAIoF,EAAI,EAAGA,EAAI4H,EAAMhN,OAAQoF,IAAK,CACnC,MAAM4J,EAAQ,EAAJ5J,EACJ29B,EAAUrD,EAAI91B,MAAMoF,EAAGA,EAAI,GAC3Bg0B,EAAO3iC,OAAOgP,SAAS0zB,EAAS,IACtC,GAAI1iC,OAAO4iC,MAAMD,IAASA,EAAO,EAC7B,MAAM,IAAIxhC,MAAM,yBACpBwL,EAAM5H,GAAK49B,CACf,CACA,OAAOh2B,CACX,CACA,SAASmkC,GAAcr9B,GACnB,OAAO6/B,GAAYtS,GAAWvtB,GAClC,CACA,SAAS+rB,GAAYH,GACjB,OAAOA,aAAejgC,WAAaA,WAAWI,KAAK6/B,GAAOoD,GAAWpD,EACzE,CACA,SAAShC,GAAgBziB,GACrB,GAAmB,kBAARA,GAAoB5a,OAAO8wB,cAAclW,IAAQA,EAAM,EAC9D,OAAO7G,OAAO6G,GAClB,GAAmB,kBAARA,GAAoB+4B,GAAmB/4B,GAC9C,OAAOA,EACX,MAAM,IAAIvb,UAAU,sDACxB,CACA,SAASuc,GAAI/J,GAAgB,IAAb1S,EAACmC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAGs3B,GAAMG,EACtB,MAAMsJ,EAASxwB,EAAI1S,EACnB,OAAOkjC,GAAU9J,GAAM8J,EAASljC,EAAIkjC,CACxC,CACA,SAASY,GAAKnxB,EAAGoxB,GACb,MAAM,EAAEnK,GAAMH,GACd,IAAI3oB,EAAM6B,EACV,KAAOoxB,KAAU3K,IACbtoB,GAAOA,EACPA,GAAO8oB,EAEX,OAAO9oB,CACX,CA4BA,SAAS+pB,GAAOrgB,GAA0B,IAAlBqpB,EAAM1hC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAGs3B,GAAMG,EACnC,GAAIpf,IAAW4e,IAAOyK,GAAUzK,GAC5B,MAAM,IAAIp3B,MAAO,6CAA4CwY,SAAcqpB,KAE/E,IAAInxB,EAAI+J,GAAIjC,EAAQqpB,GAChB7jC,EAAI6jC,EACJlxB,EAAIymB,GAAKxmB,EAAIymB,GAAK3H,EAAI2H,GAAKrzB,EAAIozB,GACnC,KAAO1mB,IAAM0mB,IAAK,CACd,MAAM7P,EAAIvpB,EAAI0S,EACR4I,EAAItb,EAAI0S,EACRjE,EAAIkE,EAAI+e,EAAInI,EACZ/a,EAAIoE,EAAI5M,EAAIujB,EAClBvpB,EAAI0S,EAAGA,EAAI4I,EAAG3I,EAAI+e,EAAG9e,EAAI5M,EAAG0rB,EAAIjjB,EAAGzI,EAAIwI,CAC3C,CAEA,GADYxO,IACAq5B,GACR,MAAM,IAAIr3B,MAAM,0BACpB,OAAOya,GAAI9J,EAAGkxB,EAClB,CAuBA,SAAS0P,GAAavhB,GAA4B,IAAtBwjB,EAAYrzC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACpC,MAAM4nB,EANV,SAAoBzV,GAChB,MAAMwY,EAAuB,EAAfxY,EAAM9T,OAAwB,EAAXovC,GAC3Bn0B,EAAMk2B,GAAcr9B,GAC1B,OAAOwY,EAAQ,EAAIrR,GAAO7G,OAAOkY,GAASrR,CAC9C,CAEcg6B,CAAWzjB,GACrB,GAAIwjB,EACA,OAAOzrB,EACX,MAAM,EAAEvb,GAAMirB,GACd,OAAO1P,GAAKvb,EAAIub,EAAIvb,EAAIub,CAC5B,CACA,IAAI2rB,GACAC,GACJ,MAAMC,GACFl1C,YAAYmvC,EAASgG,GAGjB,GAFA7nC,KAAK6hC,QAAUA,EACf7hC,KAAK6nC,SAAWA,EACO,kBAAZhG,GAAwBA,EAAU,EACzC,MAAM,IAAI7tC,MAAM,4BACpB,GAAwB,kBAAb6zC,GAAyBA,EAAW,EAC3C,MAAM,IAAI7zC,MAAM,6BACpBgM,KAAKhI,EAAI,IAAI/F,WAAW4vC,GAASv9B,KAAK,GACtCtE,KAAKgQ,EAAI,IAAI/d,WAAW4vC,GAASv9B,KAAK,GACtCtE,KAAK8nC,QAAU,CACnB,CACAhH,OAAgB,QAAAiH,EAAA5zC,UAAA3B,OAARkB,EAAM,IAAA0E,MAAA2vC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANt0C,EAAMs0C,GAAA7zC,UAAA6zC,GACV,OAAO7P,GAAM8P,WAAWjoC,KAAKgQ,KAAMtc,EACvC,CACAw0C,WAAoB,QAAAC,EAAAh0C,UAAA3B,OAARkB,EAAM,IAAA0E,MAAA+vC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAN10C,EAAM00C,GAAAj0C,UAAAi0C,GACd,OAAOT,GAAgB3nC,KAAKgQ,KAAMtc,EACtC,CACA20C,YACI,GAA+B,oBAApBV,GACP,MAAM,IAAIxF,GAAS,iCAC3B,CACAmG,OACI,GAAItoC,KAAK8nC,SAAW,IAChB,MAAM,IAAI9zC,MAAM,qDACpBgM,KAAK8nC,SAAW,CACpB,CACA5P,eAAsC,IAAzBqQ,EAAIp0C,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAAIlC,WACpB+N,KAAKgQ,QAAUhQ,KAAK8gC,KAAK9gC,KAAKhI,EAAG/F,WAAWI,KAAK,CAAC,IAAQk2C,GAC1DvoC,KAAKhI,QAAUgI,KAAK8gC,KAAK9gC,KAAKhI,GACV,IAAhBuwC,EAAK/1C,SAETwN,KAAKgQ,QAAUhQ,KAAK8gC,KAAK9gC,KAAKhI,EAAG/F,WAAWI,KAAK,CAAC,IAAQk2C,GAC1DvoC,KAAKhI,QAAUgI,KAAK8gC,KAAK9gC,KAAKhI,GAClC,CACAwwC,aAAoC,IAAzBD,EAAIp0C,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAAIlC,WAClB+N,KAAKqoC,YACLroC,KAAKgQ,EAAIhQ,KAAKkoC,SAASloC,KAAKhI,EAAG/F,WAAWI,KAAK,CAAC,IAAQk2C,GACxDvoC,KAAKhI,EAAIgI,KAAKkoC,SAASloC,KAAKhI,GACR,IAAhBuwC,EAAK/1C,SAETwN,KAAKgQ,EAAIhQ,KAAKkoC,SAASloC,KAAKhI,EAAG/F,WAAWI,KAAK,CAAC,IAAQk2C,GACxDvoC,KAAKhI,EAAIgI,KAAKkoC,SAASloC,KAAKhI,GAChC,CACAkgC,iBACIl4B,KAAKsoC,OACL,IAAIvpC,EAAM,EACV,MAAMqH,EAAM,GACZ,KAAOrH,EAAMiB,KAAK6nC,UAAU,CACxB7nC,KAAKhI,QAAUgI,KAAK8gC,KAAK9gC,KAAKhI,GAC9B,MAAMywC,EAAKzoC,KAAKhI,EAAEoE,QAClBgK,EAAIvO,KAAK4wC,GACT1pC,GAAOiB,KAAKhI,EAAExF,MAClB,CACA,OAAOuiC,MAAe3uB,EAC1B,CACAsiC,eACI1oC,KAAKqoC,YACLroC,KAAKsoC,OACL,IAAIvpC,EAAM,EACV,MAAMqH,EAAM,GACZ,KAAOrH,EAAMiB,KAAK6nC,UAAU,CACxB7nC,KAAKhI,EAAIgI,KAAKkoC,SAASloC,KAAKhI,GAC5B,MAAMywC,EAAKzoC,KAAKhI,EAAEoE,QAClBgK,EAAIvO,KAAK4wC,GACT1pC,GAAOiB,KAAKhI,EAAExF,MAClB,CACA,OAAOuiC,MAAe3uB,EAC1B,EAEJ,SAASogC,GAAmB/4B,GACxB,OAAO2d,GAAM3d,GAAOA,EAAMge,GAAMjrB,CACpC,CACA,SAASojC,GAAoBn2B,GACzB,OAAO2d,GAAM3d,GAAOA,EAAMge,GAAMG,CACpC,CACA,SAAS+c,GAASC,EAAQnoC,EAAGkrB,GAAgB,IAAbkd,IAAI10C,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,KAAAA,UAAA,GAChC,MAAM,EAAEqM,GAAMirB,GACRzb,EAAIu1B,GAAaqD,GAAQ,GAC/B,IAAKpC,GAAmBx2B,GACpB,OACJ,MAAM84B,EAAOjc,GAAO7c,EAAGxP,GACjB+a,EAAIgR,GAAM0C,KAAKe,SAAShgB,GACxB1C,EAAImB,GAAI8M,EAAE5W,EAAGnE,GACnB,GAAI8M,IAAM8d,GACN,OACJ,MAAMlS,EAAIzK,GAAIq6B,EAAOr6B,GAAIhO,EAAIkrB,EAAIre,EAAG9M,GAAIA,GACxC,GAAI0Y,IAAMkS,GACN,OACJ,IAAIkN,EAAM,IAAI3D,GAAUrnB,EAAG4L,GACvBmsB,GAAY9pB,EAAE5W,IAAM2zB,EAAIhrB,EAAI,EAAI,GAAKza,OAAO0oB,EAAE3W,EAAIymB,IAKtD,OAJIwd,GAAQvQ,EAAImO,aACZnO,EAAMA,EAAIqO,aACVtB,GAAY,GAET,CAAE/M,MAAK+M,WAClB,CACA,SAASH,GAAoBxN,GACzB,IAAIjqB,EACJ,GAAmB,kBAARiqB,EACPjqB,EAAMiqB,OAEL,GAAmB,kBAARA,GAAoB7kC,OAAO8wB,cAAc+T,IAAQA,EAAM,EACnEjqB,EAAM7G,OAAO8wB,QAEZ,GAAmB,kBAARA,EAAkB,CAC9B,GAAIA,EAAIllC,SAAW,EAAIovC,GACnB,MAAM,IAAI5tC,MAAM,oCACpByZ,EAAM04B,GAAYzO,EACtB,KACK,MAAIA,aAAezlC,YAMpB,MAAM,IAAIC,UAAU,8BALpB,GAAIwlC,EAAIllC,SAAWovC,GACf,MAAM,IAAI5tC,MAAM,oCACpByZ,EAAMk2B,GAAcjM,EAIxB,CACA,IAAK8O,GAAmB/4B,GACpB,MAAM,IAAIzZ,MAAM,qCACpB,OAAOyZ,CACX,CAUA,SAAS63B,GAAmBF,GACxB,GAAIA,aAAqBzQ,GAErB,OADAyQ,EAAUxQ,iBACHwQ,EAEX,IACI,OAAOzQ,GAAU4R,QAAQnB,EAC7B,CACA,MAAOnhC,GACH,OAAO0wB,GAAUoU,YAAY3D,EACjC,CACJ,CA4BA,SAAS4D,GAAS1iC,GAEd,OAAOq9B,GADOr9B,EAAM9T,OAASmvC,GAAWr7B,EAAMlK,MAAM,EAAGulC,IAAYr7B,EAEvE,CACA,SAAS2iC,GAAY3iC,GACjB,MAAM4iC,EAAKF,GAAS1iC,GACd6iC,EAAK16B,GAAIy6B,EAAIzd,GAAMjrB,GACzB,OAAO4oC,GAAWD,EAAK/d,GAAM8d,EAAKC,EACtC,CACA,SAASC,GAAW37B,GAChB,OAAO85B,GAAS95B,EACpB,CACA,SAAS47B,GAAYlE,EAAS5Q,EAAY+U,GACtC,GAAe,MAAXnE,EACA,MAAM,IAAInxC,MAAO,2CAA0CmxC,MAC/D,MAAMoE,EAAKlX,GAAY8S,GACjBxZ,EAAIuZ,GAAoB3Q,GACxBiV,EAAW,CAACJ,GAAWzd,GAAIsd,GAAYM,IAC7C,GAAoB,MAAhBD,EAAsB,EACD,IAAjBA,IACAA,EAAenR,GAAMmB,YAAYqI,KACrC,MAAMnpC,EAAI65B,GAAYiX,GACtB,GAAI9wC,EAAEhG,SAAWmvC,GACb,MAAM,IAAI3tC,MAAO,kBAAiB2tC,0BACtC6H,EAAS3xC,KAAKW,EAClB,CAGA,MAAO,CAAE+vC,KAFIxT,MAAeyU,GAEb/oC,EADLuoC,GAASO,GACD5d,IACtB,CACA,SAAS8d,GAAYC,EAAQnJ,GACzB,MAAM,IAAEjI,EAAG,SAAE+M,GAAaqE,GACpB,IAAEC,EAAG,UAAEC,GAAcv2C,OAAOG,OAAO,CAAEq2C,WAAW,EAAMF,KAAK,GAAQpJ,GACnE3I,EAAS+R,EAAMrR,EAAIsO,gBAAkBtO,EAAI+O,oBAC/C,OAAOuC,EAAY,CAAChS,EAAQyN,GAAYzN,CAC5C,CAgMArL,GAAM0C,KAAK+E,eAAe,GAC1B,MAAMvP,GAAS,CACXwU,KAAMC,GACNC,IAAqB,kBAATppB,MAAqB,WAAYA,KAAOA,KAAK0U,YAASrwB,GAOhE01C,GAAuB,CAAC,EACjB3R,GAAQ,CACjBtE,WAAU,GACVyB,WAAU,GACVP,YAAW,GACXtmB,IAAG,GACHoe,OAAM,GACNkd,kBAAkBxV,GACd,IAEI,OADA2Q,GAAoB3Q,IACb,CACX,CACA,MAAOtwB,GACH,OAAO,CACX,CACJ,EACA+lC,iBAAkBzC,GAClB0C,qBAAsB/E,GACtBgF,iBAAmBlmB,IACfA,EAAOqO,GAAYrO,GACnB,MAAMmmB,EAASvI,GAAW,EAC1B,GAAI5d,EAAKxxB,OAAS23C,GAAUnmB,EAAKxxB,OAAS,KACtC,MAAM,IAAIwB,MAAO,uDAGrB,OAAOuzC,GADK94B,GAAIk1B,GAAc3f,GAAOyH,GAAMjrB,EAAI6qB,IAAOA,GAClC,EAExBiO,YAAa,WAAsB,IAArBC,EAAWplC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACxB,GAAIswB,GAAO0U,IACP,OAAO1U,GAAO0U,IAAIK,gBAAgB,IAAIvnC,WAAWsnC,IAEhD,GAAI9U,GAAOwU,KAAM,CAClB,MAAM,YAAEK,GAAgB7U,GAAOwU,KAC/B,OAAOhnC,WAAWI,KAAKinC,EAAYC,GACvC,CAEI,MAAM,IAAIvlC,MAAM,oDAExB,EACAylC,iBAAkBA,IAAMtB,GAAM+R,iBAAiB/R,GAAMmB,YAAYsI,GAAW,IAC5EhI,aAA+C,IAApCrK,EAAUp7B,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGsgC,EAAKtgC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAGo4B,GAAM0C,KACrC,MAAM4K,EAASpF,IAAUlI,GAAM0C,KAAOwF,EAAQ,IAAIlI,GAAMkI,EAAM9vB,EAAG8vB,EAAM7vB,GAGvE,OAFAi1B,EAAO7F,eAAezE,GACtBsK,EAAO7J,SAAS+Q,IACTlH,CACX,EACAa,OAAQxC,iBAAuB,QAAAkS,EAAAj2C,UAAA3B,OAAb63C,EAAQ,IAAAjyC,MAAAgyC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAARD,EAAQC,GAAAn2C,UAAAm2C,GACtB,GAAI7lB,GAAO0U,IAAK,CACZ,MAAM7mC,QAAemyB,GAAO0U,IAAIO,OAAOpU,OAAO,UAAWyP,MAAesV,IACxE,OAAO,IAAIp4C,WAAWK,EAC1B,CACK,GAAImyB,GAAOwU,KAAM,CAClB,MAAM,WAAEU,GAAelV,GAAOwU,KACxBjV,EAAO2V,EAAW,UAExB,OADA0Q,EAASE,SAAS9pC,GAAMujB,EAAKqB,OAAO5kB,KAC7BxO,WAAWI,KAAK2xB,EAAKsB,SAChC,CAEI,MAAM,IAAItxB,MAAM,+CAExB,EACAi0C,WAAY/P,eAAOR,GAAqB,QAAA8S,EAAAr2C,UAAA3B,OAAb63C,EAAQ,IAAAjyC,MAAAoyC,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAARJ,EAAQI,EAAA,GAAAt2C,UAAAs2C,GAC/B,GAAIhmB,GAAO0U,IAAK,CACZ,MAAMuR,QAAajmB,GAAO0U,IAAIO,OAAOiR,UAAU,MAAOjT,EAAK,CAAE9jC,KAAM,OAAQowB,KAAM,CAAEpwB,KAAM,aAAe,EAAO,CAAC,SAC1G8W,EAAUqqB,MAAesV,GACzB/3C,QAAemyB,GAAO0U,IAAIO,OAAOZ,KAAK,OAAQ4R,EAAMhgC,GAC1D,OAAO,IAAIzY,WAAWK,EAC1B,CACK,GAAImyB,GAAOwU,KAAM,CAClB,MAAM,WAAE2R,GAAenmB,GAAOwU,KACxBjV,EAAO4mB,EAAW,SAAUlT,GAElC,OADA2S,EAASE,SAAS9pC,GAAMujB,EAAKqB,OAAO5kB,KAC7BxO,WAAWI,KAAK2xB,EAAKsB,SAChC,CAEI,MAAM,IAAItxB,MAAM,oDAExB,EACA62C,gBAAYz2C,EACZ02C,oBAAgB12C,EAChB22C,WAAY7S,eAAO99B,GACf,IAAI4wC,EAAOlB,GAAqB1vC,GAChC,QAAahG,IAAT42C,EAAoB,CACpB,MAAMC,QAAa9S,GAAMuC,OAAOzoC,WAAWI,KAAK+H,GAAMqI,GAAMA,EAAEL,WAAW,MACzE4oC,EAAOjW,GAAYkW,EAAMA,GACzBnB,GAAqB1vC,GAAO4wC,CAChC,CAAC,QAAAE,EAAA/2C,UAAA3B,OANsB63C,EAAQ,IAAAjyC,MAAA8yC,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAARd,EAAQc,EAAA,GAAAh3C,UAAAg3C,GAO/B,OAAOhT,GAAMuC,OAAOsQ,KAASX,EACjC,EACAe,eAAgB,SAAChxC,GACb,GAA2B,oBAAhBstC,GACP,MAAM,IAAIvF,GAAS,+CACvB,IAAI6I,EAAOlB,GAAqB1vC,GAChC,QAAahG,IAAT42C,EAAoB,CACpB,MAAMC,EAAOvD,GAAYz1C,WAAWI,KAAK+H,GAAMqI,GAAMA,EAAEL,WAAW,MAClE4oC,EAAOjW,GAAYkW,EAAMA,GACzBnB,GAAqB1vC,GAAO4wC,CAChC,CAAC,QAAAK,EAAAl3C,UAAA3B,OARoB63C,EAAQ,IAAAjyC,MAAAizC,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAARjB,EAAQiB,EAAA,GAAAn3C,UAAAm3C,GAS7B,OAAO5D,GAAYsD,KAASX,EAChC,EACAkB,eAAgBlJ,IAEpBhvC,OAAO0mC,iBAAiB5B,GAAO,CAC3B0S,WAAY,CACRrgC,cAAc,EACdpG,IAAGA,IACQsjC,GAEX1iC,IAAIrE,GACK+mC,KACDA,GAAc/mC,EACtB,GAEJmqC,eAAgB,CACZtgC,cAAc,EACdpG,IAAGA,IACQujC,GAEX3iC,IAAIrE,GACKgnC,KACDA,GAAkBhnC,EAC1B,KC/qCR6qC,GAAAA,WAA2B,kBAAUrgB,EAAOqgB,GAAAA,eAA0Br3C,WAAM,EAE1Cq3C,GAAAA,iBAA3B,MACMC,GAAkBA,KAC7B,MAAMC,EAAgBF,GAAAA,mBAChBjT,EAAYM,GAAa6S,GACzBC,EAAY,IAAI15C,WAAW,IAGjC,OAFA05C,EAAU3mC,IAAI0mC,GACdC,EAAU3mC,IAAIuzB,EAAW,IAClB,CACLA,YACAoT,YACD,EAEU9S,GAAe2S,GAAAA,aACrB,SAASI,GAAUrT,GACxB,IAEE,OADAiT,GAAAA,QAAsBjT,GAAW,IAC1B,CACT,CAAE,MACA,OAAO,CACT,CACF,CACO,MAAMO,GAAOA,CAClBpuB,EACAihC,IACGH,GAAAA,KAAkB9gC,EAASihC,EAAUvvC,MAAM,EAAG,KACtC48B,GAASwS,GAAAA,OC3CT57B,GAAY5O,GACnB5O,EAAAA,GAAAA,SAAgB4O,GACXA,EACEA,aAAe/O,WACjBG,EAAAA,GAAAA,KAAY4O,EAAI1O,OAAQ0O,EAAIzO,WAAYyO,EAAI/C,YAE5C7L,EAAAA,GAAAA,KAAY4O,GCJhB,MAAMy7B,GACX/pC,YAAYm5C,GACVx4C,OAAOG,OAAOwM,KAAM6rC,EACtB,CAEAp3C,SACE,OAAOrC,EAAAA,GAAAA,MAAY05C,EAAAA,GAAAA,WAAUC,GAAe/rC,MAC9C,CAEAssB,cAAcntB,GACZ,OAAO6sC,EAAAA,GAAAA,aAAYD,GAAe/rC,KAAMb,EAC1C,CAEAmtB,uBAAuBntB,GACrB,OAAO8sC,EAAAA,GAAAA,sBAAqBF,GAAe/rC,KAAMb,EACnD,EAkBW,MAAA4sC,GAAoC,IAAIzP,WCzB9C,MAKM4P,GAAoB,GAyBjC,IAAIC,GAAyB,EAE7BC,GAwFOjvC,OAAOkvC,YArFP,MAAMC,WAAkB7P,GAQ7B/pC,YAAYuI,GAEV,GADAqP,MAAM,CAAC,GAAG,KAPZiiC,SAAG,EAZL,SAAyBtxC,GACvB,YAAwC7G,IAAhC6G,EAAwBsxC,GAClC,CAkBQC,CAAgBvxC,GAClB+E,KAAKusC,IAAMtxC,EAAMsxC,QACZ,CACL,GAAqB,kBAAVtxC,EAAoB,CAE7B,MAAMwxC,EAAUC,IAAAA,OAAYzxC,GAC5B,GAAIwxC,EAAQj6C,QAAU05C,GACpB,MAAM,IAAIl4C,MAAO,4BAEnBgM,KAAKusC,IAAM,IAAIhgC,KAAJ,CAAOkgC,EACpB,MACEzsC,KAAKusC,IAAM,IAAIhgC,KAAJ,CAAOtR,GAGpB,GAAI+E,KAAKusC,IAAItuC,aAAeiuC,GAC1B,MAAM,IAAIl4C,MAAO,2BAErB,CACF,CAKAs4B,gBACE,MAAMoL,EAAM,IAAI4U,GAAUH,IAE1B,OADAA,IAA0B,EACnB,IAAIG,GAAU5U,EAAI9nB,WAC3B,CAWAvK,OAAOkzB,GACL,OAAOv4B,KAAKusC,IAAI3sB,GAAG2Y,EAAUgU,IAC/B,CAKAI,WACE,OAAOD,IAAAA,OAAY1sC,KAAK8kB,UAC1B,CAEA7e,SACE,OAAOjG,KAAK2sC,UACd,CAKA7nB,UACE,MAAMrnB,EAAMuC,KAAK4P,WACjB,OAAO,IAAI3d,WAAWwL,EAAInL,OAAQmL,EAAIlL,WAAYkL,EAAIQ,WACxD,CAKA2R,WACE,MAAM5d,EAAIgO,KAAKusC,IAAI18B,YAAYzd,EAAAA,IAC/B,GAAIJ,EAAEQ,SAAW05C,GACf,OAAOl6C,EAGT,MAAM46C,EAAUx6C,EAAAA,GAAAA,MAAa,IAE7B,OADAJ,EAAE2K,KAAKiwC,EAAS,GAAK56C,EAAEQ,QAChBo6C,CACT,CAEmCR,UACjC,MAAoB,aAAApsC,KAAKzD,aAC3B,CAKAA,WACE,OAAOyD,KAAK2sC,UACd,CAQArgB,4BACEugB,EACAtE,EACAuE,GAEA,MAAMx6C,EAASF,EAAAA,GAAAA,OAAc,CAC3By6C,EAAcj9B,WACdxd,EAAAA,GAAAA,KAAYm2C,GACZuE,EAAUl9B,aAENm9B,EAAiBrS,GAAOpoC,GAC9B,OAAO,IAAIg6C,GAAUS,EACvB,CAMAzgB,gCACE0gB,EACAF,GAEA,IAAIx6C,EAASF,EAAAA,GAAAA,MAAa,GAC1B46C,EAAMzC,SAAQ,SAAUhC,GACtB,GAAIA,EAAK/1C,OAjKgB,GAkKvB,MAAM,IAAIN,UAAW,4BAEvBI,EAASF,EAAAA,GAAAA,OAAc,CAACE,EAAQsd,GAAS24B,IAC3C,IACAj2C,EAASF,EAAAA,GAAAA,OAAc,CACrBE,EACAw6C,EAAUl9B,WACVxd,EAAAA,GAAAA,KAAY,2BAEd,MAAM26C,EAAiBrS,GAAOpoC,GAC9B,GAAIs5C,GAAUmB,GACZ,MAAM,IAAI/4C,MAAO,kDAEnB,OAAO,IAAIs4C,GAAUS,EACvB,CASAzgB,kCACE0gB,EACAF,GAEA,OAAO9sC,KAAKitC,yBAAyBD,EAAOF,EAC9C,CASAxgB,8BACE0gB,EACAF,GAEA,IACII,EADAC,EAAQ,IAEZ,KAAgB,GAATA,GAAY,CACjB,IACE,MAAMC,EAAiBJ,EAAMnoC,OAAOzS,EAAAA,GAAAA,KAAY,CAAC+6C,KACjDD,EAAUltC,KAAKitC,yBAAyBG,EAAgBN,GACxD,MAAOO,GACP,GAAIA,aAAen7C,UACjB,MAAMm7C,EAERF,IACA,QACF,CACA,MAAO,CAACD,EAASC,EACnB,CACA,MAAM,IAAIn5C,MAAO,gDACnB,CAQAs4B,gCACE0gB,EACAF,GAEA,OAAO9sC,KAAKstC,uBAAuBN,EAAOF,EAC5C,CAKAxgB,iBAAiBihB,GAEf,OAAO3B,GADQ,IAAIU,GAAUiB,GACLzoB,UAC1B,EA7MWwnB,GA2CJkB,QAAqB,IAAIlB,GAAU,oCAqK5CP,GAAc/mC,IAAIsnC,GAAW,CAC3BmB,KAAM,SACNv1C,OAAQ,CAAC,CAAC,MAAO,WC/P6B,IAAIo0C,GAClD,qDCIWoB,GAAmB,KCPzB,MAAMC,WAAmD35C,MAG9DtB,YAAY0yC,GACV96B,MAAO,aAAY86B,yCAAiD,KAHtEA,eAAS,EAIPplC,KAAKolC,UAAYA,CACnB,EAGF/xC,OAAO6Q,eACLypC,GAA2Cp6C,UAC3C,OACA,CACE0H,MAAO,+CAIJ,MAAM2yC,WAAuC55C,MAGlDtB,YAAY0yC,EAAmByI,GAC7BvjC,MACG,oCAAmCujC,EAAeC,QACjD,wEAGG1I,6CACL,KATJA,eAAS,EAUPplC,KAAKolC,UAAYA,CACnB,EAGF/xC,OAAO6Q,eAAe0pC,GAA+Br6C,UAAW,OAAQ,CACtE0H,MAAO,mCAGF,MAAM8yC,WAA4C/5C,MAGvDtB,YAAY0yC,GACV96B,MAAO,aAAY86B,gDAAwD,KAH7EA,eAAS,EAIPplC,KAAKolC,UAAYA,CACnB,EAGF/xC,OAAO6Q,eAAe6pC,GAAoCx6C,UAAW,OAAQ,CAC3E0H,MAAO,wCCvCF,MAAM+yC,GAIXt7C,YACEu7C,EACAC,GACA,KANFD,uBAAiB,OACjBC,4BAAsB,EAMpBluC,KAAKiuC,kBAAoBA,EACzBjuC,KAAKkuC,uBAAyBA,CAChC,CAEAC,cACE,MAAMA,EAAc,CAACnuC,KAAKiuC,mBAK1B,OAJIjuC,KAAKkuC,yBACPC,EAAYt2C,KAAKmI,KAAKkuC,uBAAuB3jC,UAC7C4jC,EAAYt2C,KAAKmI,KAAKkuC,uBAAuBE,WAExCD,CACT,CAEA/pC,IAAI+I,GACF,IAAK,MAAMkhC,KAAcruC,KAAKmuC,cAAe,CAC3C,GAAIhhC,EAAQkhC,EAAW77C,OACrB,OAAO67C,EAAWlhC,GAElBA,GAASkhC,EAAW77C,MAExB,CAEF,CAEIA,aACF,OAAOwN,KAAKmuC,cAAcG,OAAO97C,MACnC,CAEA+7C,oBACEC,GAIA,GAAIxuC,KAAKxN,OAASi8C,IAChB,MAAM,IAAIz6C,MAAM,yDAGlB,MAAM06C,EAAc,IAAIpS,IACxBt8B,KAAKmuC,cACFG,OACA/D,SAAQ,CAAC7S,EAAKvqB,KACbuhC,EAAY1pC,IAAI0yB,EAAIiV,WAAYx/B,EAAM,IAG1C,MAAMwhC,EAAgBjX,IACpB,MAAMkX,EAAWF,EAAYtqC,IAAIszB,EAAIiV,YACrC,QAAiBv4C,IAAbw6C,EACF,MAAM,IAAI56C,MACR,qEAEJ,OAAO46C,CAAQ,EAGjB,OAAOJ,EAAazlB,KAAK8lB,IAChB,CACLC,eAAgBH,EAAaE,EAAY/B,WACzCiC,kBAAmBF,EAAY7Q,KAAKjV,KAAIimB,GACtCL,EAAaK,EAAKC,UAEpB9vC,KAAM0vC,EAAY1vC,QAGxB,ECrEK,MAAMo5B,GAAY,WAAoC,IAAnC3lC,EAAgBuB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,YAC3C,OAAO+6C,GAAAA,GAAkB,GAAIt8C,EAC/B,EAoCau8C,GAAa,WAEQ,IADhCv8C,EAAgBuB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,SAEnB,MAAMi7C,EAAMF,GAAAA,GAOV,CACEA,GAAAA,GAAiB,UACjBA,GAAAA,GAAiB,iBACjBA,GAAAA,GAAkBA,GAAAA,GAAoBA,GAAAA,MAAqB,GAAI,UAEjEt8C,GAEIy8C,EAAUD,EAAI/6C,OAAOuF,KAAKw1C,GAC1BE,EAAUF,EAAI36C,OAAOmF,KAAKw1C,GAE1BG,EAAUH,EAsBhB,OApBAG,EAAQl7C,OAAS,CAACrC,EAAeiB,IAClBo8C,EAAQr9C,EAAGiB,GACL,MAAEsJ,WAGvBgzC,EAAQ96C,OAAS,CAACyN,EAAalQ,EAAeiB,KAC5C,MAAMkM,EAAO,CACXqwC,MAAOp9C,EAAAA,GAAAA,KAAY8P,EAAK,SAE1B,OAAOotC,EAAQnwC,EAAMnN,EAAGiB,EAAO,EAGjCs8C,EAAQlyC,MAAS6E,GAEbgtC,GAAAA,KAAmBv8C,KACnBu8C,GAAAA,KAAmBv8C,KACnBP,EAAAA,GAAAA,KAAY8P,EAAK,QAAQ1P,OAItB+8C,CACT,EAyEO,SAASE,GAASvwC,EAAWhH,GAClC,MAAMw3C,EAAgBze,IACpB,GAAIA,EAAKt+B,MAAQ,EACf,OAAOs+B,EAAKt+B,KACP,GAA0B,oBAAfs+B,EAAK5zB,MACrB,OAAO4zB,EAAK5zB,MAAMnF,EAAO+4B,EAAKr+B,WACzB,GAAI,UAAWq+B,GAAQ,kBAAmBA,EAAM,CACrD,MAAM0e,EAAQz3C,EAAO+4B,EAAKr+B,UAC1B,GAAIwF,MAAMC,QAAQs3C,GAChB,OAAOA,EAAMn9C,OAASk9C,EAAaze,EAAKx5B,cAE5C,MAAO,GAAI,WAAYw5B,EAErB,OAAOwe,GAAS,CAAC76C,OAAQq8B,GAAO/4B,EAAO+4B,EAAKr+B,WAG9C,OAAO,CAAC,EAGV,IAAIyK,EAAQ,EAKZ,OAJA6B,EAAKtK,OAAOsD,OAAOqyC,SAAStZ,IAC1B5zB,GAASqyC,EAAaze,EAAK,IAGtB5zB,CACT,CC3LO,SAASuyC,GAAatpC,GAC3B,IAAIvH,EAAM,EACNQ,EAAO,EACX,OAAS,CACP,IAAIswC,EAAOvpC,EAAMvN,QAGjB,GAFAgG,IAAe,IAAP8wC,IAAwB,EAAPtwC,EACzBA,GAAQ,EACc,KAAV,IAAPswC,GACH,KAEJ,CACA,OAAO9wC,CACT,CAEO,SAAS+wC,GAAaxpC,EAAsBvH,GACjD,IAAIgxC,EAAUhxC,EACd,OAAS,CACP,IAAI8wC,EAAiB,IAAVE,EAEX,GADAA,IAAY,EACG,GAAXA,EAAc,CAChBzpC,EAAMzO,KAAKg4C,GACX,KACF,CACEA,GAAQ,IACRvpC,EAAMzO,KAAKg4C,EAEf,CACF,CC3Be,SAAA5jC,GACb+kB,EACAtmB,GAEA,IAAKsmB,EACH,MAAM,IAAIh9B,MAAM0W,GAAW,mBAE/B,CCQO,MAAMslC,GAIXt9C,YAAYu9C,EAAkBC,GAAwB,KAHtDD,WAAK,OACLC,gBAAU,EAGRlwC,KAAKiwC,MAAQA,EACbjwC,KAAKkwC,WAAaA,CACpB,CAEA5jB,eACEkiB,EACAyB,GAEA,MAAMC,EAAyB,IAAI5T,IAC7B6T,EAAsBlB,IAC1B,MAAM/B,EAAU+B,EAAOtC,WACvB,IAAIyD,EAAUF,EAAW9rC,IAAI8oC,GAS7B,YARgB94C,IAAZg8C,IACFA,EAAU,CACRC,UAAU,EACVC,YAAY,EACZC,WAAW,GAEbL,EAAWlrC,IAAIkoC,EAASkD,IAEnBA,CAAO,EAGVI,EAAeL,EAAmBF,GACxCO,EAAaH,UAAW,EACxBG,EAAaF,YAAa,EAE1B,IAAK,MAAMG,KAAMjC,EAAc,CAC7B2B,EAAmBM,EAAG3D,WAAWyD,WAAY,EAC7C,IAAK,MAAMG,KAAeD,EAAGzS,KAAM,CACjC,MAAMoS,EAAUD,EAAmBO,EAAYzB,QAC/CmB,EAAQC,WAARD,EAAQC,SAAaK,EAAYL,UACjCD,EAAQE,aAARF,EAAQE,WAAeI,EAAYJ,WACrC,CACF,CAEA,OAAO,IAAIN,GAAaC,EAAOC,EACjC,CAEAS,uBACE,MAAMC,EAAa,IAAI5wC,KAAKkwC,WAAW9T,WACvCnwB,GAAO2kC,EAAWp+C,QAAU,IAAK,2CAEjC,MAAMq+C,EAAkBD,EAAWE,QACjCC,IAAA,IAAE,CAAE/B,GAAK+B,EAAA,OAAK/B,EAAKqB,UAAYrB,EAAKsB,UAAU,IAE1CU,EAAkBJ,EAAWE,QACjCG,IAAA,IAAE,CAAEjC,GAAKiC,EAAA,OAAKjC,EAAKqB,WAAarB,EAAKsB,UAAU,IAE3CY,EAAqBN,EAAWE,QACpCK,IAAA,IAAE,CAAEnC,GAAKmC,EAAA,OAAMnC,EAAKqB,UAAYrB,EAAKsB,UAAU,IAE3Cc,EAAqBR,EAAWE,QACpCO,IAAA,IAAE,CAAErC,GAAKqC,EAAA,OAAMrC,EAAKqB,WAAarB,EAAKsB,UAAU,IAG5CvL,EAAwB,CAC5BuM,sBAAuBT,EAAgBr+C,OAASw+C,EAAgBx+C,OAChE++C,0BAA2BP,EAAgBx+C,OAC3Cg/C,4BAA6BJ,EAAmB5+C,QAIlD,CACEyZ,GACE4kC,EAAgBr+C,OAAS,EACzB,6CAEF,MAAOi/C,GAAgBZ,EAAgB,GACvC5kC,GACEwlC,IAAiBzxC,KAAKiwC,MAAMtD,WAC5B,yDAEJ,CASA,MAAO,CAAC5H,EAPkB,IACrB8L,EAAgB9nB,KAAI2oB,IAAA,IAAExE,GAAQwE,EAAA,OAAK,IAAIpF,GAAUY,EAAQ,OACzD8D,EAAgBjoB,KAAI4oB,IAAA,IAAEzE,GAAQyE,EAAA,OAAK,IAAIrF,GAAUY,EAAQ,OACzDgE,EAAmBnoB,KAAI6oB,IAAA,IAAE1E,GAAQ0E,EAAA,OAAK,IAAItF,GAAUY,EAAQ,OAC5DkE,EAAmBroB,KAAI8oB,IAAA,IAAE3E,GAAQ2E,EAAA,OAAK,IAAIvF,GAAUY,EAAQ,KAInE,CAEA4E,mBACEC,GAEA,MAAOC,EAAiBC,GACtBjyC,KAAKkyC,4BACHH,EAAYxrB,MAAM4rB,WAClB/B,IACGA,EAAQC,WAAaD,EAAQG,WAAaH,EAAQE,cAElD8B,EAAiBC,GACtBryC,KAAKkyC,4BACHH,EAAYxrB,MAAM4rB,WAClB/B,IACGA,EAAQC,WAAaD,EAAQG,YAAcH,EAAQE,aAI1D,GAA+B,IAA3B0B,EAAgBx/C,QAA2C,IAA3B4/C,EAAgB5/C,OAIpD,MAAO,CACL,CACE8/C,WAAYP,EAAYra,IACxBsa,kBACAI,mBAEF,CACE7nC,SAAU0nC,EACV7D,SAAUiE,GAGhB,CAGQH,4BACNK,EACAC,GAEA,MAAMC,EAAqB,IAAIr6C,MACzBs6C,EAAc,IAAIt6C,MAExB,IAAK,MAAO80C,EAASkD,KAAYpwC,KAAKkwC,WAAW9T,UAC/C,GAAIoW,EAAcpC,GAAU,CAC1B,MAAM1Y,EAAM,IAAI4U,GAAUY,GACpByF,EAAmBJ,EAAmBK,WAAUC,GACpDA,EAAMxtC,OAAOqyB,KAEXib,GAAoB,IACtB1mC,GAAO0mC,EAAmB,IAAK,mCAC/BF,EAAmB56C,KAAK86C,GACxBD,EAAY76C,KAAK6/B,GACjB13B,KAAKkwC,WAAWjc,OAAOiZ,GAE3B,CAGF,MAAO,CAACuF,EAAoBC,EAC9B,ECzGK,MAAMI,GAWXpgD,YAAYqgD,GAAmB,KAV/BhO,YAAM,OACNiO,iBAAW,OACXC,qBAAe,OACfzE,kBAAY,OAEJ0E,kBAA4C,IAAI5W,IAMtDt8B,KAAK+kC,OAASgO,EAAKhO,OACnB/kC,KAAKgzC,YAAcD,EAAKC,YAAYjqB,KAAIoqB,GAAW,IAAI7G,GAAU6G,KACjEnzC,KAAKizC,gBAAkBF,EAAKE,gBAC5BjzC,KAAKwuC,aAAeuE,EAAKvE,aACzBxuC,KAAKwuC,aAAajE,SAAQkG,GACxBzwC,KAAKkzC,kBAAkBluC,IACrByrC,EAAG3B,eACH9uC,KAAKgzC,YAAYvC,EAAG3B,kBAG1B,CAEIsE,cACF,MAAO,QACT,CAEInF,wBACF,OAAOjuC,KAAKgzC,WACd,CAEIK,2BACF,OAAOrzC,KAAKwuC,aAAazlB,KACtB0nB,IAAE,CACD3B,eAAgB2B,EAAG3B,eACnBC,kBAAmB0B,EAAG6C,SACtBn0C,KAAMutC,IAAAA,OAAY+D,EAAGtxC,SAG3B,CAEIo0C,0BACF,MAAO,EACT,CAEAC,iBACE,OAAO,IAAIxF,GAAmBhuC,KAAKiuC,kBACrC,CAEA3hB,eAAeymB,GACb,MAAMU,EAAezD,GAAa0D,QAAQX,EAAKvE,aAAcuE,EAAKY,WAC3D5O,EAAQkJ,GAAqBwF,EAAa9C,uBAE3CnC,EADc,IAAIR,GAAmBC,GACVM,oBAAoBwE,EAAKvE,cAAczlB,KACrE0nB,IAA8B,CAC7B3B,eAAgB2B,EAAG3B,eACnBwE,SAAU7C,EAAG1B,kBACb5vC,KAAMutC,IAAAA,OAAY+D,EAAGtxC,UAGzB,OAAO,IAAI2zC,GAAQ,CACjB/N,SACAiO,YAAa/E,EACbgF,gBAAiBF,EAAKE,gBACtBzE,gBAEJ,CAEAoF,gBAAgBzmC,GACd,OAAOA,EAAQnN,KAAK+kC,OAAOuM,qBAC7B,CAEAuC,kBAAkB1mC,GAChB,MAAM2mC,EAAoB9zC,KAAK+kC,OAAOuM,sBACtC,GAAInkC,GAASnN,KAAK+kC,OAAOuM,sBAAuB,CAK9C,OAJ6BnkC,EAAQ2mC,EACT9zC,KAAKgzC,YAAYxgD,OAASshD,EAE9B9zC,KAAK+kC,OAAOyM,2BAEtC,CAGE,OAAOrkC,EADL2mC,EAAoB9zC,KAAK+kC,OAAOwM,yBAGtC,CAEAwC,YAAY5mC,GACV,OAAOnN,KAAKkzC,kBAAkBc,IAAI7mC,EACpC,CAEA8mC,aACE,MAAO,IAAIj0C,KAAKkzC,kBAAkBx/C,SACpC,CAEAwgD,gBACE,OAAOl0C,KAAKgzC,YAAYlC,QAAO,CAACp2B,EAAGvN,KAAWnN,KAAK+zC,YAAY5mC,IACjE,CAEA2+B,YACE,MAAMqI,EAAUn0C,KAAKgzC,YAAYxgD,OAEjC,IAAI4hD,EAAqB,GACzBtE,GAAsBsE,EAAUD,GAEhC,MAAM3F,EAAexuC,KAAKwuC,aAAazlB,KAAI8lB,IACzC,MAAM,SAACyE,EAAQ,eAAExE,GAAkBD,EAC7B1vC,EAAO/G,MAAM/F,KAAKq6C,IAAAA,OAAYmC,EAAY1vC,OAEhD,IAAIk1C,EAA4B,GAChCvE,GAAsBuE,EAAiBf,EAAS9gD,QAEhD,IAAI8hD,EAAsB,GAG1B,OAFAxE,GAAsBwE,EAAWn1C,EAAK3M,QAE/B,CACLs8C,iBACAuF,gBAAiBjiD,EAAAA,GAAAA,KAAYiiD,GAC7BE,WAAYjB,EACZkB,WAAYpiD,EAAAA,GAAAA,KAAYkiD,GACxBn1C,OACD,IAGH,IAAIs1C,EAA6B,GACjC3E,GAAsB2E,EAAkBjG,EAAah8C,QACrD,IAAIkiD,EAAoBtiD,EAAAA,GAAAA,MAAas7C,IACrCt7C,EAAAA,GAAAA,KAAYqiD,GAAkB93C,KAAK+3C,GACnC,IAAIC,EAA0BF,EAAiBjiD,OAE/Cg8C,EAAajE,SAAQsE,IACnB,MA2BMr8C,EA3BoB08C,GAAAA,GAQxB,CACAA,GAAAA,GAAgB,kBAEhBA,GAAAA,GACEL,EAAYwF,gBAAgB7hD,OAC5B,mBAEF08C,GAAAA,GACEA,GAAAA,GAAgB,YAChBL,EAAY0F,WAAW/hD,OACvB,cAEF08C,GAAAA,GAAkBL,EAAY2F,WAAWhiD,OAAQ,cACjD08C,GAAAA,GACEA,GAAAA,GAAgB,aAChBL,EAAY1vC,KAAK3M,OACjB,UAG6BiC,OAC/Bo6C,EACA6F,EACAC,GAEFA,GAA2BniD,CAAM,IAEnCkiD,EAAoBA,EAAkBt4C,MAAM,EAAGu4C,GAE/C,MAAMC,EAAiB1F,GAAAA,GASrB,CACAA,GAAAA,GAAkB,EAAG,yBACrBA,GAAAA,GAAkB,EAAG,6BACrBA,GAAAA,GAAkB,EAAG,+BACrBA,GAAAA,GAAkBkF,EAAS5hD,OAAQ,YACnC08C,GAAAA,GAAiB3W,GAAiB,OAAQ4b,EAAS,QACnD5b,GAAiB,qBAGbsc,EAAc,CAClBvD,sBAAuBl/C,EAAAA,GAAAA,KAAY,CAAC4N,KAAK+kC,OAAOuM,wBAChDC,0BAA2Bn/C,EAAAA,GAAAA,KAAY,CACrC4N,KAAK+kC,OAAOwM,4BAEdC,4BAA6Bp/C,EAAAA,GAAAA,KAAY,CACvC4N,KAAK+kC,OAAOyM,8BAEd4C,SAAUhiD,EAAAA,GAAAA,KAAYgiD,GACtBpW,KAAMh+B,KAAKgzC,YAAYjqB,KAAI2O,GAAO9nB,GAAS8nB,EAAI5S,aAC/CmuB,gBAAiBvG,IAAAA,OAAY1sC,KAAKizC,kBAGpC,IAAI6B,EAAW1iD,EAAAA,GAAAA,MAAa,MAC5B,MAAMI,EAASoiD,EAAengD,OAAOogD,EAAaC,GAElD,OADAJ,EAAkB/3C,KAAKm4C,EAAUtiD,GAC1BsiD,EAAS14C,MAAM,EAAG5J,EAASkiD,EAAkBliD,OACtD,CAKA85B,YAAYh6B,GAEV,IAAI6P,EAAY,IAAI7P,GAEpB,MAAMg/C,EAAwBnvC,EAAUpJ,QACxC,GACEu4C,KPvQ6B,IOwQ5BA,GAED,MAAM,IAAIt9C,MACR,+EAIJ,MAAMu9C,EAA4BpvC,EAAUpJ,QACtCy4C,EAA8BrvC,EAAUpJ,QAExCg8C,EAAenF,GAAsBztC,GAC3C,IAAI6wC,EAAc,GAClB,IAAK,IAAIp7C,EAAI,EAAGA,EAAIm9C,EAAcn9C,IAAK,CACrC,MAAMu7C,EAAUhxC,EAAU/F,MAAM,EAAG8vC,IACnC/pC,EAAYA,EAAU/F,MAAM8vC,IAC5B8G,EAAYn7C,KAAK,IAAIy0C,GAAUl6C,EAAAA,GAAAA,KAAY+gD,IAC7C,CAEA,MAAMF,EAAkB9wC,EAAU/F,MAAM,EAAG8vC,IAC3C/pC,EAAYA,EAAU/F,MAAM8vC,IAE5B,MAAMuI,EAAmB7E,GAAsBztC,GAC/C,IAAIqsC,EAAsC,GAC1C,IAAK,IAAI52C,EAAI,EAAGA,EAAI68C,EAAkB78C,IAAK,CACzC,MAAMk3C,EAAiB3sC,EAAUpJ,QAC3Bg8C,EAAenF,GAAsBztC,GACrCmxC,EAAWnxC,EAAU/F,MAAM,EAAG24C,GACpC5yC,EAAYA,EAAU/F,MAAM24C,GAC5B,MAAMP,EAAa5E,GAAsBztC,GACnC6yC,EAAY7yC,EAAU/F,MAAM,EAAGo4C,GAC/Br1C,EAAOutC,IAAAA,OAAYt6C,EAAAA,GAAAA,KAAY4iD,IACrC7yC,EAAYA,EAAU/F,MAAMo4C,GAC5BhG,EAAa32C,KAAK,CAChBi3C,iBACAwE,WACAn0C,QAEJ,CAEA,MAAM81C,EAAc,CAClBlQ,OAAQ,CACNuM,wBACAC,4BACAC,+BAEFyB,gBAAiBvG,IAAAA,OAAYt6C,EAAAA,GAAAA,KAAY6gD,IACzCD,cACAxE,gBAGF,OAAO,IAAIsE,GAAQmC,EACrB,EClRK,MAAMC,GAOXxiD,YAAYqgD,GAAqB,KANjChO,YAAM,OACNkJ,uBAAiB,OACjBgF,qBAAe,OACfI,0BAAoB,OACpBE,yBAAmB,EAGjBvzC,KAAK+kC,OAASgO,EAAKhO,OACnB/kC,KAAKiuC,kBAAoB8E,EAAK9E,kBAC9BjuC,KAAKizC,gBAAkBF,EAAKE,gBAC5BjzC,KAAKqzC,qBAAuBN,EAAKM,qBACjCrzC,KAAKuzC,oBAAsBR,EAAKQ,mBAClC,CAEIH,cACF,OAAO,CACT,CAEI+B,gCACF,IAAIz9C,EAAQ,EACZ,IAAK,MAAM09C,KAAUp1C,KAAKuzC,oBACxB77C,GAAS09C,EAAOhD,gBAAgB5/C,OAAS4iD,EAAOpD,gBAAgBx/C,OAElE,OAAOkF,CACT,CAEA87C,eAAeT,GACb,IAAI7E,EACJ,GACE6E,GACA,2BAA4BA,GAC5BA,EAAK7E,uBACL,CACA,GACEluC,KAAKm1C,2BACLpC,EAAK7E,uBAAuB3jC,SAAS/X,OACnCugD,EAAK7E,uBAAuBE,SAAS57C,OAEvC,MAAM,IAAIwB,MACR,+FAGJk6C,EAAyB6E,EAAK7E,4BACzB,GACL6E,GACA,+BAAgCA,GAChCA,EAAKsC,2BAELnH,EAAyBluC,KAAKs1C,2BAC5BvC,EAAKsC,iCAEF,GAAIr1C,KAAKuzC,oBAAoB/gD,OAAS,EAC3C,MAAM,IAAIwB,MACR,8EAGJ,OAAO,IAAIg6C,GACThuC,KAAKiuC,kBACLC,EAEJ,CAEA0F,gBAAgBzmC,GACd,OAAOA,EAAQnN,KAAK+kC,OAAOuM,qBAC7B,CAEAuC,kBAAkB1mC,GAChB,MAAM2mC,EAAoB9zC,KAAK+kC,OAAOuM,sBAChCiE,EAAuBv1C,KAAKiuC,kBAAkBz7C,OACpD,GAAI2a,GAASooC,EAAsB,CAMjC,OAL+BpoC,EAAQooC,EACFv1C,KAAKuzC,oBAAoBx7C,QAC5D,CAACL,EAAO09C,IAAW19C,EAAQ09C,EAAOpD,gBAAgBx/C,QAClD,GAGG,GAAI2a,GAASnN,KAAK+kC,OAAOuM,sBAAuB,CAKrD,OAJ6BnkC,EAAQ2mC,EACTyB,EAAuBzB,EAE3B9zC,KAAK+kC,OAAOyM,2BAEtC,CAGE,OAAOrkC,EADL2mC,EAAoB9zC,KAAK+kC,OAAOwM,yBAGtC,CAEA+D,2BACED,GAEA,MAAMnH,EAAiD,CACrD3jC,SAAU,GACV6jC,SAAU,IAGZ,IAAK,MAAMoH,KAAex1C,KAAKuzC,oBAAqB,CAClD,MAAMkC,EAAeJ,EAA2BK,MAAKvC,GACnDA,EAAQzb,IAAIryB,OAAOmwC,EAAYlD,cAEjC,IAAKmD,EACH,MAAM,IAAIzhD,MACqD,6DAAAwhD,EAAYlD,WAAW3F,cAIxF,IAAK,MAAMx/B,KAASqoC,EAAYxD,gBAAiB,CAC/C,KAAI7kC,EAAQsoC,EAAalvB,MAAM4rB,UAAU3/C,QAKvC,MAAM,IAAIwB,MACP,oCAAmCmZ,6BAAiCqoC,EAAYlD,WAAW3F,cAL9FuB,EAAuB3jC,SAAS1S,KAC9B49C,EAAalvB,MAAM4rB,UAAUhlC,GAOnC,CAEA,IAAK,MAAMA,KAASqoC,EAAYpD,gBAAiB,CAC/C,KAAIjlC,EAAQsoC,EAAalvB,MAAM4rB,UAAU3/C,QAKvC,MAAM,IAAIwB,MACP,oCAAmCmZ,6BAAiCqoC,EAAYlD,WAAW3F,cAL9FuB,EAAuBE,SAASv2C,KAC9B49C,EAAalvB,MAAM4rB,UAAUhlC,GAOnC,CACF,CAEA,OAAO+gC,CACT,CAEA5hB,eAAeymB,GACb,MAAMU,EAAezD,GAAa0D,QAAQX,EAAKvE,aAAcuE,EAAKY,UAE5DJ,EAAsB,IAAIn7C,MAC1B81C,EAAiD,CACrD3jC,SAAU,IAAInS,MACdg2C,SAAU,IAAIh2C,OAEVu9C,EAAsB5C,EAAKsC,4BAA8B,GAC/D,IAAK,MAAMtD,KAAe4D,EAAqB,CAC7C,MAAMC,EAAgBnC,EAAa3B,mBAAmBC,GACtD,QAAsB39C,IAAlBwhD,EAA6B,CAC/B,MAAOC,GAAoB,SAACtrC,EAAQ,SAAE6jC,IAAawH,EACnDrC,EAAoB17C,KAAKg+C,GACzB3H,EAAuB3jC,SAAS1S,QAAQ0S,GACxC2jC,EAAuBE,SAASv2C,QAAQu2C,EAC1C,CACF,CAEA,MAAOrJ,EAAQkJ,GAAqBwF,EAAa9C,uBAK3C0C,EAJc,IAAIrF,GACtBC,EACAC,GAEuCK,oBACvCwE,EAAKvE,cAEP,OAAO,IAAI0G,GAAU,CACnBnQ,SACAkJ,oBACAgF,gBAAiBF,EAAKE,gBACtBI,uBACAE,uBAEJ,CAEAzH,YACE,MAAMgK,EAAiC19C,QACvC03C,GACEgG,EACA91C,KAAKiuC,kBAAkBz7C,QAGzB,MAAMujD,EAAyB/1C,KAAKg2C,wBAC9BC,EAA4B79C,QAClC03C,GACEmG,EACAj2C,KAAKqzC,qBAAqB7gD,QAG5B,MAAM0jD,EAAgCl2C,KAAKm2C,+BACrCC,EAAmCh+C,QACzC03C,GACEsG,EACAp2C,KAAKuzC,oBAAoB/gD,QAG3B,MAAM6jD,EAAgBnH,GAAAA,GAUnB,CACDA,GAAAA,GAAgB,UAChBA,GAAAA,GACE,CACEA,GAAAA,GAAgB,yBAChBA,GAAAA,GAAgB,6BAChBA,GAAAA,GAAgB,gCAElB,UAEFA,GAAAA,GACE4G,EAA+BtjD,OAC/B,2BAEF08C,GAAAA,GACE3W,KACAv4B,KAAKiuC,kBAAkBz7C,OACvB,qBAEF+lC,GAAiB,mBACjB2W,GAAAA,GAAkB+G,EAA0BzjD,OAAQ,sBACpD08C,GAAAA,GACE6G,EAAuBvjD,OACvB,0BAEF08C,GAAAA,GACEkH,EAAiC5jD,OACjC,6BAEF08C,GAAAA,GACEgH,EAA8B1jD,OAC9B,mCAIE8jD,EAAoB,IAAIrkD,WAAWy7C,IAEnC6I,EAA0BF,EAAc5hD,OAC5C,CACEqjC,OAH6B,IAI7BiN,OAAQ/kC,KAAK+kC,OACbyR,wBAAyB,IAAIvkD,WAAW6jD,GACxC7H,kBAAmBjuC,KAAKiuC,kBAAkBllB,KAAI2O,GAAOA,EAAI5S,YACzDmuB,gBAAiBvG,IAAAA,OAAY1sC,KAAKizC,iBAClCwD,mBAAoB,IAAIxkD,WAAWgkD,GACnCF,yBACAW,0BAA2B,IAAIzkD,WAC7BmkD,GAEFF,iCAEFI,GAEF,OAAOA,EAAkBl6C,MAAM,EAAGm6C,EACpC,CAEQP,wBACN,IAAIW,EAAmB,EACvB,MAAMZ,EAAyB,IAAI9jD,WAAWy7C,IAC9C,IAAK,MAAMmB,KAAe7uC,KAAKqzC,qBAAsB,CACnD,MAAMuD,EAAiCx+C,QACvC03C,GACE8G,EACA/H,EAAYE,kBAAkBv8C,QAGhC,MAAMqkD,EAAoBz+C,QAC1B03C,GAAsB+G,EAAmBhI,EAAY1vC,KAAK3M,QAuB1DmkD,GArB0BzH,GAAAA,GAMvB,CACDA,GAAAA,GAAgB,kBAChBA,GAAAA,GACE0H,EAA+BpkD,OAC/B,kCAEF08C,GAAAA,GACEA,GAAAA,KACAL,EAAYE,kBAAkBv8C,OAC9B,qBAEF08C,GAAAA,GAAkB2H,EAAkBrkD,OAAQ,qBAC5C08C,GAAAA,GAAkBL,EAAY1vC,KAAK3M,OAAQ,UAGPiC,OACpC,CACEq6C,eAAgBD,EAAYC,eAC5B8H,+BAAgC,IAAI3kD,WAClC2kD,GAEF7H,kBAAmBF,EAAYE,kBAC/B8H,kBAAmB,IAAI5kD,WAAW4kD,GAClC13C,KAAM0vC,EAAY1vC,MAEpB42C,EACAY,EAEJ,CAEA,OAAOZ,EAAuB35C,MAAM,EAAGu6C,EACzC,CAEQR,+BACN,IAAIQ,EAAmB,EACvB,MAAMT,EAAgC,IAAIjkD,WAAWy7C,IACrD,IAAK,MAAM0H,KAAUp1C,KAAKuzC,oBAAqB,CAC7C,MAAMuD,EAA+B1+C,QACrC03C,GACEgH,EACA1B,EAAOpD,gBAAgBx/C,QAGzB,MAAMukD,EAA+B3+C,QACrC03C,GACEiH,EACA3B,EAAOhD,gBAAgB5/C,QA+BzBmkD,GA5BiCzH,GAAAA,GAM9B,CACD3W,GAAiB,cACjB2W,GAAAA,GACE4H,EAA6BtkD,OAC7B,gCAEF08C,GAAAA,GACEA,GAAAA,KACAkG,EAAOpD,gBAAgBx/C,OACvB,mBAEF08C,GAAAA,GACE6H,EAA6BvkD,OAC7B,gCAEF08C,GAAAA,GACEA,GAAAA,KACAkG,EAAOhD,gBAAgB5/C,OACvB,qBAIyCiC,OAC3C,CACE69C,WAAY8C,EAAO9C,WAAWxtB,UAC9BgyB,6BAA8B,IAAI7kD,WAChC6kD,GAEF9E,gBAAiBoD,EAAOpD,gBACxB+E,6BAA8B,IAAI9kD,WAChC8kD,GAEF3E,gBAAiBgD,EAAOhD,iBAE1B8D,EACAS,EAEJ,CAEA,OAAOT,EAA8B95C,MAAM,EAAGu6C,EAChD,CAEArqB,mBAAmBgqB,GACjB,IAAIn0C,EAAY,IAAIm0C,GAEpB,MAAMxe,EAAS31B,EAAUpJ,QACnBi+C,ERpayB,IQoaVlf,EACrB7rB,GACE6rB,IAAWkf,EACV,0DAIH/qC,GACc,IAFE+qC,EAGiD,+DAHjDA,KAMhB,MAAMjS,EAAwB,CAC5BuM,sBAAuBnvC,EAAUpJ,QACjCw4C,0BAA2BpvC,EAAUpJ,QACrCy4C,4BAA6BrvC,EAAUpJ,SAGnCk1C,EAAoB,GACpBuI,EAA0B5G,GAAsBztC,GACtD,IAAK,IAAIvK,EAAI,EAAGA,EAAI4+C,EAAyB5+C,IAC3Cq2C,EAAkBp2C,KAChB,IAAIy0C,GAAUnqC,EAAU80C,OAAO,EAAG/K,MAItC,MAAM+G,EAAkBvG,IAAAA,OAAYvqC,EAAU80C,OAAO,EAAG/K,KAElDuI,EAAmB7E,GAAsBztC,GACzCkxC,EAAqD,GAC3D,IAAK,IAAIz7C,EAAI,EAAGA,EAAI68C,EAAkB78C,IAAK,CACzC,MAAMk3C,EAAiB3sC,EAAUpJ,QAC3Bm+C,EAA0BtH,GAAsBztC,GAChD4sC,EAAoB5sC,EAAU80C,OAAO,EAAGC,GACxC1C,EAAa5E,GAAsBztC,GACnChD,EAAO,IAAIlN,WAAWkQ,EAAU80C,OAAO,EAAGzC,IAChDnB,EAAqBx7C,KAAK,CACxBi3C,iBACAC,oBACA5vC,QAEJ,CAEA,MAAMg4C,EAA2BvH,GAAsBztC,GACjDoxC,EAAmD,GACzD,IAAK,IAAI37C,EAAI,EAAGA,EAAIu/C,EAA0Bv/C,IAAK,CACjD,MAAM06C,EAAa,IAAIhG,GAAUnqC,EAAU80C,OAAO,EAAG/K,KAC/CkL,EAAwBxH,GAAsBztC,GAC9C6vC,EAAkB7vC,EAAU80C,OAAO,EAAGG,GACtCC,EAAwBzH,GAAsBztC,GAC9CiwC,EAAkBjwC,EAAU80C,OAAO,EAAGI,GAC5C9D,EAAoB17C,KAAK,CACvBy6C,aACAN,kBACAI,mBAEJ,CAEA,OAAO,IAAI8C,GAAU,CACnBnQ,SACAkJ,oBACAgF,kBACAI,uBACAE,uBAEJ,EC1dF,IAAkB+D,IAOlB,SAPkBA,GAAAA,EAAAA,EAAiB,+CAAjBA,EAAAA,EAAiB,yBAAjBA,EAAAA,EAAiB,yBAAjBA,EAAAA,EAAiB,gCAAjB,CAOlB,CAPkBA,KAAAA,GAAiB,KAUnC,MAAMC,GAAoBnlD,EAAAA,GAAAA,MTnBe,ISmByBkS,KAAK,GAiDhE,MAAMkzC,GAiBX9kD,YAAY6tC,GAAwC,KAZpDvC,UAAI,OAKJ8O,eAAS,OAKT3tC,KAAe/M,EAAAA,GAAAA,MAAa,GAG1B4N,KAAK8sC,UAAYvM,EAAKuM,UACtB9sC,KAAKg+B,KAAOuC,EAAKvC,KACbuC,EAAKphC,OACPa,KAAKb,KAAOohC,EAAKphC,KAErB,CAKA8G,SACE,MAAO,CACL+3B,KAAMh+B,KAAKg+B,KAAKjV,KAAI0uB,IAAA,IAAC,OAACxI,EAAM,SAAEoB,EAAQ,WAAEC,GAAWmH,EAAA,MAAM,CACvDxI,OAAQA,EAAOhpC,SACfoqC,WACAC,aACD,IACDxD,UAAW9sC,KAAK8sC,UAAU7mC,SAC1B9G,KAAM,IAAIa,KAAKb,MAEnB,EAqFK,MAAMu4C,GAUPtS,gBACF,OAAIplC,KAAK23C,WAAWnlD,OAAS,EACpBwN,KAAK23C,WAAW,GAAGvS,UAErB,IACT,CA8DA1yC,YACE6tC,GAKA,GADA,KA7EFoX,WAAyC,GAAE,KAe3CC,cAAQ,OAKRpJ,aAA8C,GAAE,KAKhDyE,qBAAe,OAKf4E,0BAAoB,OAMpBC,eAAS,OASTC,yBAAmB,OAKnBC,cAAQ,OAKRC,WAAK,EAuBE1X,EASL,GANIA,EAAKqX,WACP53C,KAAK43C,SAAWrX,EAAKqX,UAEnBrX,EAAKoX,aACP33C,KAAK23C,WAAapX,EAAKoX,YAErBtkD,OAAOE,UAAU2G,eAAeC,KAAKomC,EAAM,aAAc,CAC3D,MAAM,eAAC2X,EAAc,UAAEJ,GAAavX,EACpCvgC,KAAK+3C,oBAAsBG,EAC3Bl4C,KAAK83C,UAAYA,CACnB,MAAO,GACLzkD,OAAOE,UAAU2G,eAAeC,KAAKomC,EAAM,wBAC3C,CACA,MAAM,UAAC4X,EAAS,qBAAEN,GAChBtX,EACFvgC,KAAKizC,gBAAkBkF,EACvBn4C,KAAK63C,qBAAuBA,CAC9B,KAAO,CACL,MAAM,gBAAC5E,EAAe,UAAE6E,GACtBvX,EACEuX,IACF93C,KAAK83C,UAAYA,GAEnB93C,KAAKizC,gBAAkBA,CACzB,CACF,CAKAhtC,SACE,MAAO,CACLgtC,gBAAiBjzC,KAAKizC,iBAAmB,KACzC2E,SAAU53C,KAAK43C,SAAW53C,KAAK43C,SAAS3xC,SAAW,KACnD6xC,UAAW93C,KAAK83C,UACZ,CACE3K,MAAOntC,KAAK83C,UAAU3K,MACtBiL,iBAAkBp4C,KAAK83C,UAAUM,iBAAiBnyC,UAEpD,KACJuoC,aAAcxuC,KAAKwuC,aAAazlB,KAAI8lB,GAAeA,EAAY5oC,WAC/DoyC,QAASr4C,KAAK23C,WAAW5uB,KAAIuvB,IAAiB,IAAhB,UAAC/f,GAAU+f,EACvC,OAAO/f,EAAUtyB,QAAQ,IAG/B,CAKA4M,MAIe,QAAA+Q,EAAAzvB,UAAA3B,OAHV+lD,EAEF,IAAAngD,MAAAwrB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAFEy0B,EAEFz0B,GAAA3vB,UAAA2vB,GAED,GAAqB,IAAjBy0B,EAAM/lD,OACR,MAAM,IAAIwB,MAAM,mBAYlB,OATAukD,EAAMhO,SAAStZ,IACT,iBAAkBA,EACpBjxB,KAAKwuC,aAAexuC,KAAKwuC,aAAa3pC,OAAOosB,EAAKud,cACzC,SAAUvd,GAAQ,cAAeA,GAAQ,SAAUA,EAC5DjxB,KAAKwuC,aAAa32C,KAAKo5B,GAEvBjxB,KAAKwuC,aAAa32C,KAAK,IAAI2/C,GAAuBvmB,GACpD,IAEKjxB,IACT,CAKAw4C,iBACE,GACEx4C,KAAKg4C,UACL5c,KAAKC,UAAUr7B,KAAKiG,YAAcm1B,KAAKC,UAAUr7B,KAAKi4C,OAEtD,OAAOj4C,KAAKg4C,SAGd,IAAI/E,EACAzE,EAoBAoJ,EARJ,GAXI53C,KAAK83C,WACP7E,EAAkBjzC,KAAK83C,UAAU3K,MAE/BqB,EADExuC,KAAKwuC,aAAa,IAAMxuC,KAAK83C,UAAUM,iBAC1B,CAACp4C,KAAK83C,UAAUM,oBAAqBp4C,KAAKwuC,cAE1CxuC,KAAKwuC,eAGtByE,EAAkBjzC,KAAKizC,gBACvBzE,EAAexuC,KAAKwuC,eAEjByE,EACH,MAAM,IAAIj/C,MAAM,wCAQlB,GALIw6C,EAAah8C,OAAS,GACxBwR,QAAQy0C,KAAK,4BAIXz4C,KAAK43C,SACPA,EAAW53C,KAAK43C,aACX,MAAI53C,KAAK23C,WAAWnlD,OAAS,GAAKwN,KAAK23C,WAAW,GAAGpf,WAI1D,MAAM,IAAIvkC,MAAM,kCAFhB4jD,EAAW53C,KAAK23C,WAAW,GAAGpf,SAGhC,CAEA,IAAK,IAAI3gC,EAAI,EAAGA,EAAI42C,EAAah8C,OAAQoF,IACvC,QAAkCxD,IAA9Bo6C,EAAa52C,GAAGk1C,UAClB,MAAM,IAAI94C,MACyB,iCAAA4D,8BAKvC,MAAMq8C,EAAuB,GACvByE,EAA8B,GACpClK,EAAajE,SAAQsE,IACnBA,EAAY7Q,KAAKuM,SAAQmG,IACvBgI,EAAa7gD,KAAK,IAAI64C,GAAa,IAGrC,MAAM5D,EAAY+B,EAAY/B,UAAUvwC,WACnC03C,EAAWluC,SAAS+mC,IACvBmH,EAAWp8C,KAAKi1C,EAClB,IAIFmH,EAAW1J,SAAQuC,IACjB4L,EAAa7gD,KAAK,CAChBo3C,OAAQ,IAAI3C,GAAUQ,GACtBuD,UAAU,EACVC,YAAY,GACZ,IAIJ,MAAMqI,EAA6B,GACnCD,EAAanO,SAAQmG,IACnB,MAAMkI,EAAelI,EAAYzB,OAAO1yC,WAClCs8C,EAAcF,EAAY/F,WAAUjuC,GACjCA,EAAEsqC,OAAO1yC,aAAeq8C,IAE7BC,GAAe,GACjBF,EAAYE,GAAavI,WACvBqI,EAAYE,GAAavI,YAAcI,EAAYJ,WACrDqI,EAAYE,GAAaxI,SACvBsI,EAAYE,GAAaxI,UAAYK,EAAYL,UAEnDsI,EAAY9gD,KAAK64C,EACnB,IAIFiI,EAAYG,MAAK,SAAUn0C,EAAGC,GAC5B,OAAID,EAAE0rC,WAAazrC,EAAEyrC,SAEZ1rC,EAAE0rC,UAAY,EAAI,EAEvB1rC,EAAE2rC,aAAe1rC,EAAE0rC,WAEd3rC,EAAE2rC,YAAc,EAAI,EAGtB3rC,EAAEsqC,OAAOtC,WAAWoM,cAAcn0C,EAAEqqC,OAAOtC,WACpD,IAGA,MAAMqM,EAAgBL,EAAY/F,WAAUjuC,GACnCA,EAAEsqC,OAAO5pC,OAAOuyC,KAEzB,GAAIoB,GAAiB,EAAG,CACtB,MAAOC,GAAaN,EAAY1B,OAAO+B,EAAe,GACtDC,EAAU5I,UAAW,EACrB4I,EAAU3I,YAAa,EACvBqI,EAAYO,QAAQD,EACtB,MACEN,EAAYO,QAAQ,CAClBjK,OAAQ2I,EACRvH,UAAU,EACVC,YAAY,IAKhB,IAAK,MAAMlL,KAAaplC,KAAK23C,WAAY,CACvC,MAAMkB,EAAcF,EAAY/F,WAAUjuC,GACjCA,EAAEsqC,OAAO5pC,OAAO+/B,EAAU7M,aAEnC,KAAIsgB,GAAe,GAUjB,MAAM,IAAI7kD,MAAyB,mBAAAoxC,EAAU7M,UAAUh8B,cATlDo8C,EAAYE,GAAaxI,WAC5BsI,EAAYE,GAAaxI,UAAW,EACpCrsC,QAAQy0C,KACN,gOAQR,CAEA,IAAInH,EAAwB,EACxBC,EAA4B,EAC5BC,EAA8B,EAGlC,MAAM2H,EAAuB,GACvBC,EAAyB,GAC/BT,EAAYpO,SAAQ8O,IAAoC,IAAnC,OAACpK,EAAM,SAAEoB,EAAQ,WAAEC,GAAW+I,EAC7ChJ,GACF8I,EAAWthD,KAAKo3C,EAAO1yC,YACvB+0C,GAAyB,EACpBhB,IACHiB,GAA6B,KAG/B6H,EAAavhD,KAAKo3C,EAAO1yC,YACpB+zC,IACHkB,GAA+B,GAEnC,IAGF,MAAMwB,EAAcmG,EAAWt0C,OAAOu0C,GAChC/F,EAA8C7E,EAAazlB,KAC/D8lB,IACE,MAAM,KAAC1vC,EAAI,UAAE2tC,GAAa+B,EAC1B,MAAO,CACLC,eAAgBkE,EAAYlyC,QAAQgsC,EAAUvwC,YAC9C+2C,SAAUzE,EAAY7Q,KAAKjV,KAAIimB,GAC7BgE,EAAYlyC,QAAQkuC,EAAKC,OAAO1yC,cAElC4C,KAAMutC,IAAAA,OAAYvtC,GACnB,IASL,OALAk0C,EAAqB9I,SAAQsE,IAC3B5iC,GAAU4iC,EAAYC,gBAAkB,GACxCD,EAAYyE,SAAS/I,SAAQqE,GAAY3iC,GAAU2iC,GAAY,IAAG,IAG7D,IAAIkE,GAAQ,CACjB/N,OAAQ,CACNuM,wBACAC,4BACAC,+BAEFwB,cACAC,kBACAzE,aAAc6E,GAElB,CAKAiG,WACE,MAAM5uC,EAAU1K,KAAKw4C,iBACfW,EAAazuC,EAAQsoC,YAAY52C,MACrC,EACAsO,EAAQq6B,OAAOuM,uBAGjB,GAAItxC,KAAK23C,WAAWnlD,SAAW2mD,EAAW3mD,OAAQ,CAKhD,GAJcwN,KAAK23C,WAAW1iB,OAAM,CAACskB,EAAMpsC,IAClCgsC,EAAWhsC,GAAO9H,OAAOk0C,EAAKhhB,aAG5B,OAAO7tB,CACpB,CAOA,OALA1K,KAAK23C,WAAawB,EAAWpwB,KAAIwP,IAAa,CAC5C6M,UAAW,KACX7M,gBAGK7tB,CACT,CAKA8uC,mBACE,OAAOx5C,KAAKs5C,WAAWxN,WACzB,CAKA5T,sBAAsBuhB,GACpB,aAAcA,EAAWC,iBAAiB15C,KAAKw4C,mBAAmBv9C,KACpE,CAYA0+C,aAAyC,QAAA5R,EAAA5zC,UAAA3B,OAA3B6lD,EAAyB,IAAAjgD,MAAA2vC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAzBqQ,EAAyBrQ,GAAA7zC,UAAA6zC,GACrC,GAAuB,IAAnBqQ,EAAQ7lD,OACV,MAAM,IAAIwB,MAAM,cAGlB,MAAM4lD,EAAO,IAAIrd,IACjBv8B,KAAK23C,WAAaU,EACfvH,QAAOvY,IACN,MAAMb,EAAMa,EAAUh8B,WACtB,OAAIq9C,EAAK5F,IAAItc,KAGXkiB,EAAK/mC,IAAI6kB,IACF,EACT,IAED3O,KAAIwP,IAAa,CAAE6M,UAAW,KAAM7M,eACzC,CAgBAO,OAAgC,QAAAqP,EAAAh0C,UAAA3B,OAAxB6lD,EAAsB,IAAAjgD,MAAA+vC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAtBiQ,EAAsBjQ,GAAAj0C,UAAAi0C,GAC5B,GAAuB,IAAnBiQ,EAAQ7lD,OACV,MAAM,IAAIwB,MAAM,cAIlB,MAAM4lD,EAAO,IAAIrd,IACXsd,EAAgB,GACtB,IAAK,MAAMC,KAAUzB,EAAS,CAC5B,MAAM3gB,EAAMoiB,EAAOvhB,UAAUh8B,WACzBq9C,EAAK5F,IAAItc,KAGXkiB,EAAK/mC,IAAI6kB,GACTmiB,EAAchiD,KAAKiiD,GAEvB,CAEA95C,KAAK23C,WAAakC,EAAc9wB,KAAI+wB,IAAU,CAC5C1U,UAAW,KACX7M,UAAWuhB,EAAOvhB,cAGpB,MAAM7tB,EAAU1K,KAAKs5C,WACrBt5C,KAAK+5C,aAAarvC,KAAYmvC,EAChC,CASAG,cAAuC,QAAA5P,EAAAj2C,UAAA3B,OAAxB6lD,EAAsB,IAAAjgD,MAAAgyC,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAtB+N,EAAsB/N,GAAAn2C,UAAAm2C,GACnC,GAAuB,IAAnB+N,EAAQ7lD,OACV,MAAM,IAAIwB,MAAM,cAIlB,MAAM4lD,EAAO,IAAIrd,IACXsd,EAAgB,GACtB,IAAK,MAAMC,KAAUzB,EAAS,CAC5B,MAAM3gB,EAAMoiB,EAAOvhB,UAAUh8B,WACzBq9C,EAAK5F,IAAItc,KAGXkiB,EAAK/mC,IAAI6kB,GACTmiB,EAAchiD,KAAKiiD,GAEvB,CAEA,MAAMpvC,EAAU1K,KAAKs5C,WACrBt5C,KAAK+5C,aAAarvC,KAAYmvC,EAChC,CAKAE,aAAarvC,GACX,MAAMoqC,EAAWpqC,EAAQohC,YAAW,QAAAtB,EAAAr2C,UAAA3B,OADJ6lD,EAAsB,IAAAjgD,MAAAoyC,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAtB4N,EAAsB5N,EAAA,GAAAt2C,UAAAs2C,GAEtD4N,EAAQ9N,SAAQuP,IACd,MAAM1U,EAAYtM,GAAKgc,EAAUgF,EAAOnO,WACxC3rC,KAAKi6C,cAAcH,EAAOvhB,UAAW3oB,GAASw1B,GAAW,GAE7D,CAOA8U,aAAajL,EAAmB7J,GAC9BplC,KAAKs5C,WACLt5C,KAAKi6C,cAAchL,EAAQ7J,EAC7B,CAKA6U,cAAchL,EAAmB7J,GAC/Bn5B,GAA+B,KAArBm5B,EAAU5yC,QAEpB,MAAM2a,EAAQnN,KAAK23C,WAAW/E,WAAUuH,GACtClL,EAAO5pC,OAAO80C,EAAQ5hB,aAExB,GAAIprB,EAAQ,EACV,MAAM,IAAInZ,MAAO,mBAAkBi7C,EAAO1yC,cAG5CyD,KAAK23C,WAAWxqC,GAAOi4B,UAAYhzC,EAAAA,GAAAA,KAAYgzC,EACjD,CAOAgV,iBAAiBC,GACf,OAAOr6C,KAAKs6C,kBACVt6C,KAAKw5C,wBACoBplD,IAAzBimD,GAA4CA,EAEhD,CAKAC,kBACExF,EACAuF,GAEA,IAAK,MAAM,UAACjV,EAAS,UAAE7M,KAAcv4B,KAAK23C,WACxC,GAAkB,OAAdvS,GACF,GAAIiV,EACF,OAAO,OAGT,IAAKrhB,GAAOoM,EAAW0P,EAAUvc,EAAUzT,WACzC,OAAO,EAIb,OAAO,CACT,CAKAgnB,UAAUyO,GACR,MAAM,qBAACF,EAAoB,iBAAED,GAAoB/mD,OAAOG,OACtD,CAAC6mD,sBAAsB,EAAMD,kBAAkB,GAC/CG,GAGIzF,EAAW90C,KAAKw5C,mBACtB,GACEY,IACCp6C,KAAKs6C,kBAAkBxF,EAAUuF,GAElC,MAAM,IAAIrmD,MAAM,iCAGlB,OAAOgM,KAAKw6C,WAAW1F,EACzB,CAKA0F,WAAW1F,GACT,MAAM,WAAC6C,GAAc33C,KACfy6C,EAA2B,GACjC3K,GAAsB2K,EAAgB9C,EAAWnlD,QACjD,MAAMkoD,EACJD,EAAejoD,OAA6B,GAApBmlD,EAAWnlD,OAAcsiD,EAAStiD,OACtDmoD,EAAkBvoD,EAAAA,GAAAA,MAAasoD,GAoBrC,OAnBAzuC,GAAU0rC,EAAWnlD,OAAS,KAC9BJ,EAAAA,GAAAA,KAAYqoD,GAAgB99C,KAAKg+C,EAAiB,GAClDhD,EAAWpN,SAAQ,CAAAqQ,EAAcztC,KAAU,IAAvB,UAACi4B,GAAUwV,EACX,OAAdxV,IACFn5B,GAA+B,KAArBm5B,EAAU5yC,OAAgB,gCACpCJ,EAAAA,GAAAA,KAAYgzC,GAAWzoC,KACrBg+C,EACAF,EAAejoD,OAAiB,GAAR2a,GAE5B,IAEF2nC,EAASn4C,KACPg+C,EACAF,EAAejoD,OAA6B,GAApBmlD,EAAWnlD,QAErCyZ,GACE0uC,EAAgBnoD,QAAUk7C,GACA,0BAAAiN,EAAgBnoD,iBAErCmoD,CACT,CAMI3c,WAEF,OADA/xB,GAAuC,IAA7BjM,KAAKwuC,aAAah8C,QACrBwN,KAAKwuC,aAAa,GAAGxQ,KAAKjV,KAAI8xB,GAAUA,EAAO5L,QACxD,CAMInC,gBAEF,OADA7gC,GAAuC,IAA7BjM,KAAKwuC,aAAah8C,QACrBwN,KAAKwuC,aAAa,GAAG1B,SAC9B,CAMI3tC,WAEF,OADA8M,GAAuC,IAA7BjM,KAAKwuC,aAAah8C,QACrBwN,KAAKwuC,aAAa,GAAGrvC,IAC9B,CAKAmtB,YAAYh6B,GAEV,IAAI6P,EAAY,IAAI7P,GAEpB,MAAMmoD,EAAiB7K,GAAsBztC,GAC7C,IAAIw1C,EAAa,GACjB,IAAK,IAAI//C,EAAI,EAAGA,EAAI6iD,EAAgB7iD,IAAK,CACvC,MAAMwtC,EAAYjjC,EAAU/F,MAAM,ETt0BC,ISu0BnC+F,EAAYA,EAAU/F,MTv0Ba,ISw0BnCu7C,EAAW9/C,KAAK60C,IAAAA,OAAYt6C,EAAAA,GAAAA,KAAYgzC,IAC1C,CAEA,OAAOsS,GAAYoD,SAAShI,GAAQzgD,KAAK8P,GAAYw1C,EACvD,CAKArrB,gBACE5hB,GAEa,IADbitC,EAAyBxjD,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAE5B,MAAM0gD,EAAc,IAAI6C,GAyCxB,OAxCA7C,EAAY5B,gBAAkBvoC,EAAQuoC,gBAClCvoC,EAAQq6B,OAAOuM,sBAAwB,IACzCuD,EAAY+C,SAAWltC,EAAQsoC,YAAY,IAE7C2E,EAAWpN,SAAQ,CAACnF,EAAWj4B,KAC7B,MAAM4tC,EAAgB,CACpB3V,UACEA,GAAasH,IAAAA,OAAY6K,IACrB,KACA7K,IAAAA,OAAYtH,GAClB7M,UAAW7tB,EAAQsoC,YAAY7lC,IAEjC0nC,EAAY8C,WAAW9/C,KAAKkjD,EAAc,IAG5CrwC,EAAQ8jC,aAAajE,SAAQsE,IAC3B,MAAM7Q,EAAO6Q,EAAYyE,SAASvqB,KAAIoqB,IACpC,MAAMlE,EAASvkC,EAAQsoC,YAAYG,GACnC,MAAO,CACLlE,SACAoB,SACEwE,EAAY8C,WAAWqD,MACrBH,GAAUA,EAAOtiB,UAAUh8B,aAAe0yC,EAAO1yC,cAC9CmO,EAAQkpC,gBAAgBT,GAC/B7C,WAAY5lC,EAAQmpC,kBAAkBV,GACvC,IAGH0B,EAAYrG,aAAa32C,KACvB,IAAI2/C,GAAuB,CACzBxZ,OACA8O,UAAWpiC,EAAQsoC,YAAYnE,EAAYC,gBAC3C3vC,KAAMutC,IAAAA,OAAYmC,EAAY1vC,QAEjC,IAGH01C,EAAYmD,SAAWttC,EACvBmqC,EAAYoD,MAAQpD,EAAY5uC,SAEzB4uC,CACT,QCx4BWoG,GAAsB,IAAI3O,GACrC,+CAWW4O,IAR+B,IAAI5O,GAC9C,+CAGwC,IAAIA,GAC5C,+CAG8C,IAAIA,GAClD,gDAGW6O,GAAqB,IAAI7O,GACpC,+CAeW8O,IAZwB,IAAI9O,GACvC,+CAGuC,IAAIA,GAC3C,+CAGwC,IAAIA,GAC5C,+CAGyC,IAAIA,GAC7C,gDClBKpU,eAAemjB,GACpB5B,EACA5E,EACAwD,EACAvc,GAMA,MAAMwf,EAAcxf,GAAW,CAC7Byf,cAAezf,EAAQyf,cACvBC,oBAAqB1f,EAAQ0f,qBAAuB1f,EAAQ2f,WAC5DC,WAAY5f,EAAQ4f,WACpBxD,eAAgBpc,EAAQoc,gBAGpB9S,QAAkBqU,EAAWkC,gBACjC9G,EACAwD,EACAiD,GAGF,IAAIM,EACJ,GACiC,MAA/B/G,EAAY5B,iBACwB,MAApC4B,EAAYgD,qBAEZ+D,SACQnC,EAAWoC,mBACf,CACEC,YAAahgB,GAASggB,YACtB1W,UAAWA,EACX+S,UAAWtD,EAAY5B,gBACvB4E,qBAAsBhD,EAAYgD,sBAEpC/b,GAAWA,EAAQ2f,aAErBxgD,WACG,GAC8B,MAAnC45C,EAAYkD,qBACa,MAAzBlD,EAAYiD,UACZ,CACA,MAAM,iBAACM,GAAoBvD,EAAYiD,UACjCiE,EAAqB3D,EAAiBpa,KAAK,GAAGiR,OACpD2M,SACQnC,EAAWoC,mBACf,CACEC,YAAahgB,GAASggB,YACtB5D,eAAgBrD,EAAYkD,oBAC5BgE,qBACAC,WAAYnH,EAAYiD,UAAU3K,MAClC/H,aAEFtJ,GAAWA,EAAQ2f,aAErBxgD,KACJ,MAC8B,MAAxB6gC,GAASggB,aACX93C,QAAQy0C,KACN,yPAKJmD,SACQnC,EAAWoC,mBACfzW,EACAtJ,GAAWA,EAAQ2f,aAErBxgD,MAGJ,GAAI2gD,EAAOvO,IACT,MAAM,IAAIr5C,MACP,eAAcoxC,aAAqBhK,KAAKC,UAAUugB,OAIvD,OAAOxW,CACT,CChGO,SAAS6W,GAAMC,GACpB,OAAO,IAAIC,SAAQC,GAAWC,WAAWD,EAASF,IACpD,CCoBO,SAASI,GACdp9C,EACAhH,GAEA,MAAMqkD,EACJr9C,EAAKtK,OAAOjC,MAAQ,EAAIuM,EAAKtK,OAAOjC,KAAO88C,GAAgBvwC,EAAMhH,GAC7DiH,EAAO/M,EAAAA,GAAAA,MAAamqD,GACpBC,EAAenpD,OAAOG,OAAO,CAACq7C,YAAa3vC,EAAKiO,OAAQjV,GAE9D,OADAgH,EAAKtK,OAAOH,OAAO+nD,EAAcr9C,GAC1BA,CACT,CC1BO,MAAMs9C,GAAsBvN,GAAAA,GAAkB,wBCO/CwN,GAAqBxN,GAAAA,GAUzB,CACAA,GAAAA,GAAiB,WACjBA,GAAAA,GAAiB,SACjB3W,GAAiB,oBACjBA,GAAiB,SACjB2W,GAAAA,GACE,CAACuN,IACD,mBAISE,GAAuBD,GAAmB/pD,KAgBhD,MAAMiqD,GAQXlqD,YAAYqgD,GAAwB,KAPpC8J,sBAAgB,OAChB1P,WAAK,OACL2P,mBAAa,EAMX98C,KAAK68C,iBAAmB9J,EAAK8J,iBAC7B78C,KAAKmtC,MAAQ4F,EAAK5F,MAClBntC,KAAK88C,cAAgB/J,EAAK+J,aAC5B,CAQAxwB,uBACEh6B,GAEA,MAAMyqD,EAAeL,GAAmBroD,OAAOub,GAAStd,GAAS,GACjE,OAAO,IAAIsqD,GAAa,CACtBC,iBAAkB,IAAIvQ,GAAUyQ,EAAaF,kBAC7C1P,MAAO,IAAIb,GAAUyQ,EAAa5P,OAAO5wC,WACzCugD,cAAeC,EAAaD,eAEhC,ECvEF,MA2Bah0B,IApBVt2B,GAoBuB,EAnBvBI,IACC,MAAMgC,GAASooD,EAAAA,GAAAA,IAAKxqD,GAAQI,IACtB,OAAC6B,EAAM,OAAEJ,GAVMO,KAGhB,CAACP,OAFOO,EAAOP,OAAOuF,KAAKhF,GAElBH,OADDG,EAAOH,OAAOmF,KAAKhF,KAQPqoD,CAAaroD,GAEhCsoD,EAAetoD,EAYrB,OAVAsoD,EAAa7oD,OAAS,CAAC/B,EAAgBW,KACrC,MAAMyB,EAAML,EAAO/B,EAAQW,GAC3B,OAAOkqD,EAAAA,GAAAA,IAAW/qD,EAAAA,GAAAA,KAAYsC,GAAK,EAGrCwoD,EAAazoD,OAAS,CAAC2oD,EAAgB9qD,EAAgBW,KACrD,MAAMyB,GAAM2oD,EAAAA,GAAAA,IAAWD,EAAQ5qD,IAC/B,OAAOiC,EAAOC,EAAKpC,EAAQW,EAAO,EAG7BiqD,CAAY,GAjBpB1qD,aCkmBU8qD,GAA6BjqD,OAAOq4B,OAI9C,CACD6xB,OAAQ,CACNpwC,MAAO,EACPvY,OAAQs6C,GAAAA,GAA0D,CAChEA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,YAClBA,GAAAA,GAAkB,SAClB3W,GAAiB,gBAGrBilB,OAAQ,CACNrwC,MAAO,EACPvY,OAAQs6C,GAAAA,GAA0D,CAChEA,GAAAA,GAAiB,eACjB3W,GAAiB,gBAGrBklB,SAAU,CACRtwC,MAAO,EACPvY,OAAQs6C,GAAAA,GAA4D,CAClEA,GAAAA,GAAiB,eACjBpmB,GAAI,eAGR40B,eAAgB,CACdvwC,MAAO,EACPvY,OAAQs6C,GAAAA,GAAkE,CACxEA,GAAAA,GAAiB,eACjB3W,GAAiB,QACjB4W,GAAkB,QAClBD,GAAAA,GAAkB,YAClBA,GAAAA,GAAkB,SAClB3W,GAAiB,gBAGrBolB,oBAAqB,CACnBxwC,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAiB,kBAEtB0O,qBAAsB,CACpBzwC,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAiB,eAAgBA,GAAAA,GAAkB,eAExD2O,uBAAwB,CACtB1wC,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAiB,eAAgB3W,GAAiB,iBAEvDulB,sBAAuB,CACrB3wC,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAiB,eAAgB3W,GAAiB,iBAEvDwlB,SAAU,CACR5wC,MAAO,EACPvY,OAAQs6C,GAAAA,GAA4D,CAClEA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,YAGtB8O,iBAAkB,CAChB7wC,MAAO,EACPvY,OAAQs6C,GAAAA,GACN,CACEA,GAAAA,GAAiB,eACjB3W,GAAiB,QACjB4W,GAAkB,QAClBD,GAAAA,GAAkB,SAClB3W,GAAiB,gBAIvB0lB,eAAgB,CACd9wC,MAAO,GACPvY,OAAQs6C,GAAAA,GAAkE,CACxEA,GAAAA,GAAiB,eACjB3W,GAAiB,QACjB4W,GAAkB,QAClB5W,GAAiB,gBAGrB2lB,iBAAkB,CAChB/wC,MAAO,GACPvY,OAAQs6C,GAAAA,GACN,CACEA,GAAAA,GAAiB,eACjBpmB,GAAI,YACJqmB,GAAkB,QAClB5W,GAAiB,gBAIvB4lB,oBAAqB,CACnBhxC,MAAO,GACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAiB,oBAOjB,MAAMkP,GAIX1rD,cAAe,CAYf45B,qBAAqB+xB,GACnB,MACMl/C,EAAOm9C,GADAgB,GAA2BC,OACV,CAC5Be,SAAUD,EAAOC,SACjBC,MAAOF,EAAOE,MACdzR,UAAWl9B,GAASyuC,EAAOvR,UAAUl9B,cAGvC,OAAO,IAAI4nC,GAAuB,CAChCxZ,KAAM,CACJ,CAACiR,OAAQoP,EAAOG,WAAYnO,UAAU,EAAMC,YAAY,GACxD,CAACrB,OAAQoP,EAAOI,iBAAkBpO,UAAU,EAAMC,YAAY,IAEhExD,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAKAmtB,gBACE+xB,GAEA,IAAIl/C,EACA6+B,EACJ,GAAI,eAAgBqgB,EAAQ,CAE1Bl/C,EAAOm9C,GADMgB,GAA2BY,iBAChB,CACtBI,SAAU13C,OAAOy3C,EAAOC,UACxB/V,KAAM8V,EAAO9V,KACbuE,UAAWl9B,GAASyuC,EAAOvR,UAAUl9B,cAEvCouB,EAAO,CACL,CAACiR,OAAQoP,EAAOG,WAAYnO,UAAU,EAAOC,YAAY,GACzD,CAACrB,OAAQoP,EAAOK,WAAYrO,UAAU,EAAMC,YAAY,GACxD,CAACrB,OAAQoP,EAAOM,SAAUtO,UAAU,EAAOC,YAAY,GAE3D,KAAO,CAELnxC,EAAOm9C,GADMgB,GAA2BG,SAChB,CAACa,SAAU13C,OAAOy3C,EAAOC,YACjDtgB,EAAO,CACL,CAACiR,OAAQoP,EAAOG,WAAYnO,UAAU,EAAMC,YAAY,GACxD,CAACrB,OAAQoP,EAAOM,SAAUtO,UAAU,EAAOC,YAAY,GAE3D,CAEA,OAAO,IAAIkH,GAAuB,CAChCxZ,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAKAmtB,cACE+xB,GAEA,IAAIl/C,EACA6+B,EACJ,GAAI,eAAgBqgB,EAAQ,CAE1Bl/C,EAAOm9C,GADMgB,GAA2BW,eAChB,CACtBxxC,KAAMmD,GAASyuC,EAAOK,WAAW9uC,YACjC24B,KAAM8V,EAAO9V,KACbuE,UAAWl9B,GAASyuC,EAAOvR,UAAUl9B,cAEvCouB,EAAO,CACL,CAACiR,OAAQoP,EAAOO,cAAevO,UAAU,EAAOC,YAAY,GAC5D,CAACrB,OAAQoP,EAAOK,WAAYrO,UAAU,EAAMC,YAAY,GAE5D,KAAO,CAELnxC,EAAOm9C,GADMgB,GAA2BE,OAChB,CACtB1Q,UAAWl9B,GAASyuC,EAAOvR,UAAUl9B,cAEvCouB,EAAO,CAAC,CAACiR,OAAQoP,EAAOO,cAAevO,UAAU,EAAMC,YAAY,GACrE,CAEA,OAAO,IAAIkH,GAAuB,CAChCxZ,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAMAmtB,6BACE+xB,GAEA,MACMl/C,EAAOm9C,GADAgB,GAA2BI,eACV,CAC5BjxC,KAAMmD,GAASyuC,EAAOK,WAAW9uC,YACjC24B,KAAM8V,EAAO9V,KACb+V,SAAUD,EAAOC,SACjBC,MAAOF,EAAOE,MACdzR,UAAWl9B,GAASyuC,EAAOvR,UAAUl9B,cAEvC,IAAIouB,EAAO,CACT,CAACiR,OAAQoP,EAAOG,WAAYnO,UAAU,EAAMC,YAAY,GACxD,CAACrB,OAAQoP,EAAOI,iBAAkBpO,UAAU,EAAOC,YAAY,IAUjE,OARI+N,EAAOK,YAAcL,EAAOG,YAC9BxgB,EAAKnmC,KAAK,CACRo3C,OAAQoP,EAAOK,WACfrO,UAAU,EACVC,YAAY,IAIT,IAAIkH,GAAuB,CAChCxZ,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAKAmtB,0BACE+xB,GAEA,MAAMxJ,EAAc,IAAI6C,GACpB,eAAgB2G,GAAU,SAAUA,EACtCxJ,EAAYhiC,IACVurC,GAAcS,sBAAsB,CAClCL,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAOS,YACzBJ,WAAYL,EAAOK,WACnBnW,KAAM8V,EAAO9V,KACb+V,SAAUD,EAAOC,SACjBC,MAAO5B,GACP7P,UAAW9sC,KAAK8sC,aAIpB+H,EAAYhiC,IACVurC,GAAcW,cAAc,CAC1BP,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAOS,YACzBR,SAAUD,EAAOC,SACjBC,MAAO5B,GACP7P,UAAW9sC,KAAK8sC,aAKtB,MAAMkS,EAAa,CACjBF,YAAaT,EAAOS,YACpBjC,iBAAkBwB,EAAOxB,kBAI3B,OADAhI,EAAYhiC,IAAI7S,KAAKi/C,gBAAgBD,IAC9BnK,CACT,CAKAvoB,uBACE+xB,GAEA,MACMl/C,EAAOm9C,GADAgB,GAA2BO,uBACV,CAC5BqB,WAAYtvC,GAASyuC,EAAOxB,iBAAiBjtC,cAEzCuvC,EAAkB,CACtBnhB,KAAM,CACJ,CAACiR,OAAQoP,EAAOS,YAAazO,UAAU,EAAOC,YAAY,GAC1D,CACErB,OAAQiM,GACR7K,UAAU,EACVC,YAAY,GAEd,CAACrB,OAAQkM,GAAoB9K,UAAU,EAAOC,YAAY,IAE5DxD,UAAW9sC,KAAK8sC,UAChB3tC,QAEF,OAAO,IAAIq4C,GAAuB2H,EACpC,CAKA7yB,oBAAoB+xB,GAClB,MACMl/C,EAAOm9C,GADAgB,GAA2BK,qBAElCwB,EAAkB,CACtBnhB,KAAM,CACJ,CAACiR,OAAQoP,EAAOS,YAAazO,UAAU,EAAOC,YAAY,GAC1D,CACErB,OAAQiM,GACR7K,UAAU,EACVC,YAAY,GAEd,CAACrB,OAAQoP,EAAOxB,iBAAkBxM,UAAU,EAAMC,YAAY,IAEhExD,UAAW9sC,KAAK8sC,UAChB3tC,QAEF,OAAO,IAAIq4C,GAAuB2H,EACpC,CAKA7yB,qBAAqB+xB,GACnB,MACMl/C,EAAOm9C,GADAgB,GAA2BM,qBACV,CAACU,SAAUD,EAAOC,WAEhD,OAAO,IAAI9G,GAAuB,CAChCxZ,KAAM,CACJ,CAACiR,OAAQoP,EAAOS,YAAazO,UAAU,EAAOC,YAAY,GAC1D,CAACrB,OAAQoP,EAAOM,SAAUtO,UAAU,EAAOC,YAAY,GACvD,CACErB,OAAQiM,GACR7K,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQkM,GACR9K,UAAU,EACVC,YAAY,GAEd,CAACrB,OAAQoP,EAAOxB,iBAAkBxM,UAAU,EAAMC,YAAY,IAEhExD,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAMAmtB,sBAAsB+xB,GACpB,MACMl/C,EAAOm9C,GADAgB,GAA2BQ,sBACV,CAC5BoB,WAAYtvC,GAASyuC,EAAOe,oBAAoBxvC,cAGlD,OAAO,IAAI4nC,GAAuB,CAChCxZ,KAAM,CACJ,CAACiR,OAAQoP,EAAOS,YAAazO,UAAU,EAAOC,YAAY,GAC1D,CAACrB,OAAQoP,EAAOxB,iBAAkBxM,UAAU,EAAMC,YAAY,IAEhExD,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAKAmtB,gBACE+xB,GAEA,IAAIl/C,EACA6+B,EACJ,GAAI,eAAgBqgB,EAAQ,CAE1Bl/C,EAAOm9C,GADMgB,GAA2BU,iBAChB,CACtBvxC,KAAMmD,GAASyuC,EAAOK,WAAW9uC,YACjC24B,KAAM8V,EAAO9V,KACbgW,MAAOF,EAAOE,MACdzR,UAAWl9B,GAASyuC,EAAOvR,UAAUl9B,cAEvCouB,EAAO,CACL,CAACiR,OAAQoP,EAAOO,cAAevO,UAAU,EAAOC,YAAY,GAC5D,CAACrB,OAAQoP,EAAOK,WAAYrO,UAAU,EAAMC,YAAY,GAE5D,KAAO,CAELnxC,EAAOm9C,GADMgB,GAA2BS,SAChB,CACtBQ,MAAOF,EAAOE,QAEhBvgB,EAAO,CAAC,CAACiR,OAAQoP,EAAOO,cAAevO,UAAU,EAAMC,YAAY,GACrE,CAEA,OAAO,IAAIkH,GAAuB,CAChCxZ,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,EAnTWi/C,GASJtR,UAAuB,IAAIR,GAChC,oCCttBG,MAAM+S,GAIX3sD,cAAe,CAaf45B,2BAA2BkoB,GACzB,OACE,GACCjgD,KAAK2Z,KAAKsmC,EAAa6K,GAAOC,WAC7B,EACA,EAEN,CAYAhzB,kBACEmtB,EACAxJ,EACAsP,EACAzS,EACA3tC,GAEA,CACE,MAAMqgD,QAAsB/F,EAAWgG,kCACrCtgD,EAAK3M,QAIDktD,QAAoBjG,EAAWkG,eACnCJ,EAAQhnB,UACR,aAGF,IAAIsc,EAAkC,KACtC,GAAoB,OAAhB6K,EAAsB,CACxB,GAAIA,EAAYE,WAEd,OADA57C,QAAQC,MAAM,uDACP,EAGLy7C,EAAYvgD,KAAK3M,SAAW2M,EAAK3M,SACnCqiD,EAAcA,GAAe,IAAI6C,GACjC7C,EAAYhiC,IACVurC,GAAc9tC,SAAS,CACrBsuC,cAAeW,EAAQhnB,UACvBgmB,MAAOp/C,EAAK3M,WAKbktD,EAAYG,MAAMx6C,OAAOynC,KAC5B+H,EAAcA,GAAe,IAAI6C,GACjC7C,EAAYhiC,IACVurC,GAAc5qD,OAAO,CACnBorD,cAAeW,EAAQhnB,UACvBuU,gBAKF4S,EAAYpB,SAAWkB,IACzB3K,EAAcA,GAAe,IAAI6C,GACjC7C,EAAYhiC,IACVurC,GAAc0B,SAAS,CACrBtB,WAAYvO,EAAM1X,UAClBomB,SAAUY,EAAQhnB,UAClB+lB,SAAUkB,EAAgBE,EAAYpB,YAI9C,MACEzJ,GAAc,IAAI6C,IAAc7kC,IAC9BurC,GAAcW,cAAc,CAC1BP,WAAYvO,EAAM1X,UAClBkmB,iBAAkBc,EAAQhnB,UAC1B+lB,SAAUkB,EAAgB,EAAIA,EAAgB,EAC9CjB,MAAOp/C,EAAK3M,OACZs6C,eAOc,OAAhB+H,SACIwG,GACJ5B,EACA5E,EACA,CAAC5E,EAAOsP,GACR,CACE9D,WAAY,aAIpB,CAEA,MAAMsE,EAAa7Q,GAAAA,GAQjB,CACAA,GAAAA,GAAiB,eACjBA,GAAAA,GAAiB,UACjBA,GAAAA,GAAiB,eACjBA,GAAAA,GAAiB,sBACjBA,GAAAA,GACEA,GAAAA,GAAgB,QAChBA,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,WAIEoQ,EAAYD,GAAOC,UACzB,IAAIrsD,EAAS,EACTuM,EAAQL,EACR6gD,EAAe,GACnB,KAAOxgD,EAAMhN,OAAS,GAAG,CACvB,MAAM8T,EAAQ9G,EAAMpD,MAAM,EAAGkjD,GACvBngD,EAAO/M,EAAAA,GAAAA,MAAaktD,EAAY,IACtCS,EAAWtrD,OACT,CACEo6C,YAAa,EACb57C,SACAqT,MAAOA,EACPizB,YAAa,EACb0mB,mBAAoB,GAEtB9gD,GAGF,MAAM01C,GAAc,IAAI6C,IAAc7kC,IAAI,CACxCmrB,KAAM,CAAC,CAACiR,OAAQsQ,EAAQhnB,UAAW8X,UAAU,EAAMC,YAAY,IAC/DxD,YACA3tC,SASF,GAPA6gD,EAAanoD,KACXwjD,GAA0B5B,EAAY5E,EAAa,CAAC5E,EAAOsP,GAAU,CACnE9D,WAAY,eAKZhC,EAAWyG,aAAan6C,SAAS,cAAe,CAClD,MAAMo6C,EAAsB,QACtBlE,GAAM,IAAOkE,EACrB,CAEAltD,GAAUqsD,EACV9/C,EAAQA,EAAMpD,MAAMkjD,EACtB,OACMnD,QAAQiE,IAAIJ,GAGlB,CACE,MAAMD,EAAa7Q,GAAAA,GAA2C,CAC5DA,GAAAA,GAAiB,iBAGb/vC,EAAO/M,EAAAA,GAAAA,MAAa2tD,EAAWptD,MACrCotD,EAAWtrD,OACT,CACEo6C,YAAa,GAEf1vC,GAGF,MAAM01C,GAAc,IAAI6C,IAAc7kC,IAAI,CACxCmrB,KAAM,CACJ,CAACiR,OAAQsQ,EAAQhnB,UAAW8X,UAAU,EAAMC,YAAY,GACxD,CAACrB,OAAQkM,GAAoB9K,UAAU,EAAOC,YAAY,IAE5DxD,YACA3tC,eAEIk8C,GACJ5B,EACA5E,EACA,CAAC5E,EAAOsP,GACR,CACE9D,WAAY,aAGlB,CAGA,OAAO,CACT,EAnNW4D,GASJC,UAdU5R,ICXkB,IAAIpB,GACvC,+CCRF,IAAI+T,GAAchtD,OAAOE,UAAUgJ,SAC/B+jD,GAAUjtD,OAAO2qC,MAAQ,SAASn/B,GACpC,IAAIm/B,EAAO,GACX,IAAK,IAAIpqC,KAAQiL,EAChBm/B,EAAKnmC,KAAKjE,GAEX,OAAOoqC,CACT,EAEA,SAAS3C,GAAU16B,EAAK4/C,GACvB,IAAI3oD,EAAG2N,EAAKrD,EAAK87B,EAAMtG,EAAK8oB,EAASC,EACrC,IAAY,IAAR9/C,EACH,MAAO,OAER,IAAY,IAARA,EACH,MAAO,QAER,cAAeA,GACd,IAAK,SACJ,GAAY,OAARA,EACH,OAAO,KACD,GAAIA,EAAIsF,QAAgC,oBAAftF,EAAIsF,OACnC,OAAOo1B,GAAU16B,EAAIsF,SAAUs6C,GAG/B,GAAc,oBADdE,EAAQJ,GAAYlmD,KAAKwG,IACO,CAG/B,IAFAuB,EAAM,IACNqD,EAAM5E,EAAInO,OAAS,EACfoF,EAAI,EAAGA,EAAI2N,EAAK3N,IACnBsK,GAAOm5B,GAAU16B,EAAI/I,IAAI,GAAQ,IAKlC,OAHI2N,GAAO,IACVrD,GAAOm5B,GAAU16B,EAAI/I,IAAI,IAEnBsK,EAAM,GAClB,CAAW,GAAc,oBAAVu+C,EAA6B,CAMvC,IAHAl7C,GADAy4B,EAAOsiB,GAAQ3/C,GAAKm4C,QACTtmD,OACX0P,EAAM,GACNtK,EAAI,EACGA,EAAI2N,QAGMnR,KADhBosD,EAAUnlB,GAAU16B,EADpB+2B,EAAMsG,EAAKpmC,KACmB,MAEzBsK,IACHA,GAAO,KAERA,GAAOk5B,KAAKC,UAAU3D,GAAO,IAAM8oB,GAEpC5oD,IAED,MAAO,IAAMsK,EAAM,GACxB,CACK,OAAOk5B,KAAKC,UAAU16B,GAGzB,IAAK,WACL,IAAK,YACJ,OAAO4/C,EAAc,UAAOnsD,EAC7B,IAAK,SACJ,OAAOgnC,KAAKC,UAAU16B,GACvB,QACC,OAAOqF,SAASrF,GAAOA,EAAM,KAEhC,QAEiB,SAASA,GACzB,IAAI+/C,EAAYrlB,GAAU16B,GAAK,GAC/B,QAAkBvM,IAAdssD,EACH,MAAO,GAAIA,CAEb,ECrEA,SAASC,GAAcngD,GACrB,IAAImgD,EAAgB,EACpB,KAAOngD,EAAI,GACTA,GAAK,EACLmgD,IAEF,OAAOA,CACT,CAoBO,MAAMC,GAYXluD,YACEmuD,EACAC,EACAC,EACAC,EACAC,GACA,KAhBKJ,mBAAa,OAEbC,8BAAwB,OAExBC,YAAM,OAENC,sBAAgB,OAEhBC,qBAAe,EASpBjhD,KAAK6gD,cAAgBA,EACrB7gD,KAAK8gD,yBAA2BA,EAChC9gD,KAAK+gD,OAASA,EACd/gD,KAAKghD,iBAAmBA,EACxBhhD,KAAKihD,gBAAkBA,CACzB,CAEAC,SAASC,GACP,OAAOnhD,KAAKohD,qBAAqBD,GAAM,EACzC,CAEAC,qBAAqBD,GACnB,GAAIA,EAAOnhD,KAAKihD,gBAAiB,CAC/B,MAAMI,EACJV,GAjDI,KADYngD,EAkDa2gD,EA/DN,GA+DsC,GAjD/C,GACpB3gD,IACAA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,GAEC,GADXA,GAAKA,GAAK,MA2CJmgD,GAhEuB,IAiEvB,EAIF,MAAO,CAACU,EADUF,GADDnhD,KAAKshD,gBAAgBD,GAnEb,IAsE3B,CAAO,CACL,MAAME,EAAkBJ,EAAOnhD,KAAKihD,gBAC9BO,EAAmBjtD,KAAKC,MAAM+sD,EAAkBvhD,KAAK6gD,eAG3D,MAAO,CAFO7gD,KAAKghD,iBAAmBQ,EACpBD,EAAkBvhD,KAAK6gD,cAE3C,CA/DJ,IAAwBrgD,CAgEtB,CAEAihD,oBAAoBJ,GAClB,OAAIA,GAASrhD,KAAKghD,iBAhFS,IAiFjBzsD,KAAKmB,IAAI,EAAG2rD,GAAS,IAG1BA,EAAQrhD,KAAKghD,kBAAoBhhD,KAAK6gD,cACvC7gD,KAAKihD,eAGX,CAEAS,mBAAmBL,GACjB,OAAOrhD,KAAKyhD,oBAAoBJ,GAASrhD,KAAKshD,gBAAgBD,GAAS,CACzE,CAEAC,gBAAgBD,GACd,OAAIA,EAAQrhD,KAAKghD,iBACRzsD,KAAKmB,IAAI,EAAG2rD,EAAQV,GAhGF,KAkGlB3gD,KAAK6gD,aAEhB,ECpGK,MAAMc,WAA6B3tD,MAGxCtB,YAAYgY,EAAiBk3C,GAC3Bt3C,MAAMI,GAAS,KAHjBk3C,UAAI,EAKF5hD,KAAK4hD,KAAOA,CACd,EA0BK,MAAMC,WAA2B7tD,MAGtCtB,YAAWovD,EAMTC,GACA,IANA,KACE/3C,EAAI,QACJU,EAAO,KACPvL,GACuD2iD,EAGzDx3C,MAAuB,MAAjBy3C,EAAyB,GAAEA,MAAkBr3C,IAAYA,GAAS,KAV1EV,UAAI,OACJ7K,UAAI,EAUFa,KAAKgK,KAAOA,EACZhK,KAAKb,KAAOA,EACZa,KAAKpM,KAAO,oBACd,EC7CF,IAAAouD,GAAeC,WAAWC,MCYX,MAAMC,WAA2BC,GAAAA,EAE9C1vD,YACEw6C,EACApR,EACAumB,GAsBA/3C,OAjB0Bg4C,IACxB,MAAMC,GAAMC,EAAAA,GAAAA,GAAUF,EAAK,CACzBG,aAAa,EACbC,eAAgB,EAChBC,WAAW,EACXC,mBAAoB,OACjB9mB,IASL,OANE97B,KAAK6iD,iBADH,WAAYN,EAEZA,EACAO,OAEsBP,EAEnBA,CAAG,GAEYrV,EAASpR,EAASumB,GAAqB,KA1BzDQ,sBAAgB,CA2BxB,CACA1oD,OAGE,MAAM4oD,EAAa/iD,KAAK6iD,kBAAkBE,WAC1C,OAAmB,IAAfA,EACKz4C,MAAMnQ,QAAKhG,WAEbgoD,QAAQ6G,OACb,IAAIhvD,MACF,qCAAmCG,UAAA3B,QAAA,OAAA4B,EAAAD,UAAA,IAEjC,qEACA4uD,EACA,KAGR,CACAE,SAGE,MAAMF,EAAa/iD,KAAK6iD,kBAAkBE,WAC1C,OAAmB,IAAfA,EACKz4C,MAAM24C,UAAO9uD,WAEfgoD,QAAQ6G,OACb,IAAIhvD,MACF,2CAAyCG,UAAA3B,QAAA,OAAA4B,EAAAD,UAAA,IAEvC,qEACA4uD,EACA,KAGR,ECrDK,MAAMG,GAIXxwD,YAAYqgD,GAAqC,KAHjDrb,SAAG,OACHnR,WAAK,EAGHvmB,KAAK03B,IAAMqb,EAAKrb,IAChB13B,KAAKumB,MAAQwsB,EAAKxsB,KACpB,CAEA48B,WACE,MAAMC,EAAUx8C,OAAO,sBACvB,OAAO5G,KAAKumB,MAAM88B,mBAAqBD,CACzC,CAEA92B,mBAAmBg3B,GACjB,MAAMtU,ECnBH,SACL9vC,EACAC,GAEA,IAAIstC,EACJ,IACEA,EAAUvtC,EAAKtK,OAAOP,OAAO8K,GAC7B,MAAOkuC,GACP,MAAM,IAAIr5C,MAAM,wBAA0Bq5C,EAC5C,CAEA,GAAIZ,EAAQ8W,YAAcrkD,EAAKiO,MAC7B,MAAM,IAAInZ,MACP,+CAA8Cy4C,EAAQ8W,gBAAgBrkD,EAAKiO,SAIhF,OAAOs/B,CACT,CDCiB+W,CAAWC,GAAuBH,GAEzCI,EAAyBJ,EAAY9wD,OAnBhB,GAoB3ByZ,GAAOy3C,GAA0B,EAAG,2BACpCz3C,GAAOy3C,EAAyB,KAAO,EAAG,2BAE1C,MAAMC,EAAyBD,EAAyB,IAClD,UAACvR,GAAajD,GAAAA,GAAoD,CACtEA,GAAAA,GAAiB3W,KAAoBorB,EAAwB,eAC5DtvD,OAAOivD,EAAYlnD,MA1BK,KA4B3B,MAAO,CACLinD,iBAAkBrU,EAAKqU,iBACvBO,iBAAkB5U,EAAK4U,iBACvBC,2BAA4B7U,EAAK8U,uBACjCC,UAC4B,IAA1B/U,EAAK+U,UAAUvxD,OACX,IAAI85C,GAAU0C,EAAK+U,UAAU,SAC7B3vD,EACN+9C,UAAWA,EAAUppB,KAAImkB,GAAW,IAAIZ,GAAUY,KAEtD,EAGF,MAAMuW,GAAwB,CAC5Bt2C,MAAO,EACPvY,OAAQs6C,GAAAA,GAML,CACDA,GAAAA,GAAiB,aACjBpmB,GAAI,oBACJomB,GAAAA,GAAkB,oBAClBA,GAAAA,GAAgB,0BAChBA,GAAAA,KACAA,GAAAA,GACE3W,KACA2W,GAAAA,GAAoBA,GAAAA,MAAoB,GACxC,gBEhFA8U,GAAS,6CC6Df,MAAMC,GAAsBloB,GAC1B3X,GAASkoB,IACTxuC,MACA7C,GAAS,IAAIqxC,GAAUrxC,KAGnBipD,GAAuBpnB,GAAM,CAACh/B,KAAUu/B,GAAQ,YAEhD8mB,GAA2BpoB,GAC/B3X,GAAShyB,EAAAA,IACT8xD,IACAjpD,GAAS7I,EAAAA,GAAAA,KAAY6I,EAAM,GAAI,YAuSjC,SAASmpD,GACPC,GAEA,IAAI5I,EACAlB,EACJ,GAAkC,kBAAvB8J,EACT5I,EAAa4I,OACR,GAAIA,EAAoB,CAC7B,MAAO5I,WAAY6I,KAAwBC,GACzCF,EACF5I,EAAa6I,EACb/J,EAASgK,CACX,CACA,MAAO,CAAC9I,aAAYlB,SACtB,CAKA,SAASiK,GAAsBtvB,GAC7B,OAAOt6B,GAAM,CACXsE,GAAK,CACHulD,QAASpnB,GAAQ,OACjBqnB,GAAI5mD,KACJo3B,WAEFh2B,GAAK,CACHulD,QAASpnB,GAAQ,OACjBqnB,GAAI5mD,KACJmG,MAAO/E,GAAK,CACV8K,KAAMm0B,KACNzzB,QAAS5M,KACTqB,KAAMu+B,GtC/XLT,GAAO,OAAO,KAAM,UsCmY7B,CAEA,MAAM0nB,GAAmBH,GAAgBrmB,MAKzC,SAASymB,GAAoB3oB,GAC3B,OAAOF,GAAOyoB,GAAgBvoB,GAAS0oB,IAAkB1pD,GACnD,UAAWA,EACNA,EAEA,IACFA,EACHi6B,OAAQ5hC,GAAO2H,EAAMi6B,OAAQ+G,KAIrC,CAKA,SAAS4oB,GAA8B5pD,GACrC,OAAO2pD,GACL1lD,GAAK,CACHq8B,QAASr8B,GAAK,CACZiiD,KAAM30C,OAERvR,UAGN,CAKA,SAAS6pD,GAAmC7pD,GAC1C,OAAOiE,GAAK,CACVq8B,QAASr8B,GAAK,CACZiiD,KAAM30C,OAERvR,SAEJ,CAKA,SAAS8pD,GACP3R,EACA4R,GAEA,OAAgB,IAAZ5R,EACK,IAAI8B,GAAU,CACnBnQ,OAAQigB,EAASjgB,OACjBkJ,kBAAmB+W,EAAShS,YAAYjqB,KACtCupB,GAAc,IAAIhG,GAAUgG,KAE9BW,gBAAiB+R,EAAS/R,gBAC1BI,qBAAsB2R,EAASxW,aAAazlB,KAAI0nB,IAAM,CACpD3B,eAAgB2B,EAAG3B,eACnBC,kBAAmB0B,EAAG6C,SACtBn0C,KAAMutC,IAAAA,OAAY+D,EAAGtxC,UAEvBo0C,oBAAqByR,EAASzR,sBAGzB,IAAIT,GAAQkS,EAEvB,CAoRA,MAAMC,GAA6B/lD,GAAK,CACtCgmD,WAAY14C,KACZ24C,eAAgB34C,KAChB44C,QAAS54C,KACT64C,MAAO74C,KACP84C,SAAU94C,OAsBN+4C,GAA2BX,GAC/BplD,GACEi+B,GACEv+B,GAAK,CACHmiD,MAAO70C,KACPg5C,cAAeh5C,KACfi5C,OAAQj5C,KACRk5C,YAAal5C,KACbm5C,WAAYjoB,GAASD,GAASjxB,YAoBhCo5C,GAAyB1mD,GAAK,CAClCsP,MAAOhC,KACP2vB,UAAW3vB,KACX04C,WAAY14C,KACZ60C,MAAO70C,OAeHq5C,GAAqB3mD,GAAK,CAC9BmiD,MAAO70C,KACPs5C,UAAWt5C,KACXu5C,aAAcv5C,KACdw5C,aAAcx5C,KACdy5C,YAAavoB,GAASlxB,MACtB05C,iBAAkBxoB,GAASlxB,QAGvB25C,GAAyBjnD,GAAK,CAClC2hD,cAAer0C,KACfs0C,yBAA0Bt0C,KAC1Bu0C,OAAQ5jB,KACR6jB,iBAAkBx0C,KAClBy0C,gBAAiBz0C,OAWb45C,GAA0BzoB,GAAO7/B,KAAU0B,GAAMgN,OAKjD65C,GAAyB5oB,GAAS7iC,GAAM,CAACsE,GAAK,CAAC,GAAIpB,QAKnDwoD,GAAwBpnD,GAAK,CACjCmuC,IAAKgZ,KAMDE,GAA0BlpB,GAAQ,qBAWlCmpB,GAAgBtnD,GAAK,CACzB,cAAepB,KACf,cAAe4/B,GAASlxB,QA8CpBi6C,GAAqC5B,GACzC3lD,GAAK,CACHmuC,IAAK5P,GAAS7iC,GAAM,CAACsE,GAAK,CAAC,GAAIpB,QAC/B8jD,KAAMnkB,GAASj+B,GAAM1B,OACrBw1C,SAAU5V,GACRD,GACEj+B,GACEi+B,GACEv+B,GAAK,CACH0gD,WAAYziB,KACZ0iB,MAAO/hD,KACPwgD,SAAU9xC,KACVrN,KAAMK,GAAM1B,MACZ4oD,UAAWhpB,GAASlxB,YAM9Bm6C,cAAejpB,GAASlxB,MACxBo6C,WAAYlpB,GACVD,GACEv+B,GAAK,CACH4tC,UAAWhvC,KACXqB,KAAM29B,GAAM,CAACh/B,KAAUu/B,GAAQ,mBAogBnCwpB,GAAgChC,GACpC3lD,GAAK,CACH4nD,WAAYnpB,GAAO7/B,KAAU0B,GAAMgN,OACnC5B,MAAO1L,GAAK,CACV6nD,UAAWv6C,KACXw6C,SAAUx6C,UA4LhB,MAAMy6C,GAAgCrC,GAAcK,IAK9CiC,GAA4BtC,GAAcgB,IAK1CuB,GAAwBvC,GAAciB,IAKtCuB,GAA4BxC,GAAcuB,IAK1CkB,GAA6BzC,GAAcwB,IAK3CkB,GAAgB1C,GAAcp4C,MAmB9B+6C,GAAqB1C,GACzB3lD,GAAK,CACHsP,MAAOhC,KACPg7C,YAAah7C,KACbi7C,eAAgBj7C,KAChBk7C,uBAAwBloD,GAAMykD,OAsB5B0D,GAAoBzoD,GAAK,CAC7BumD,OAAQ3nD,KACR8pD,SAAUnqB,GAASjxB,MACnBq7C,SAAUr7C,KACVs7C,eAAgBpqB,GAAS5/B,QAsBrBiqD,GAAgClD,GACpCrlD,GACEN,GAAK,CACHguC,QAAS+W,GACTwB,OAAQ3nD,KACR8pD,SAAUnqB,GAASjxB,MACnBq7C,SAAUr7C,KACVs7C,eAAgBpqB,GAAS5/B,UAQzBkqD,GAA0BnD,GAC9BrlD,GACEN,GAAK,CACH+vC,OAAQgV,GACR9Q,QAASj0C,GAAK,CACZ0gD,WAAYziB,KACZ0iB,MAAOoE,GACP3F,SAAU9xC,KACVrN,KAAMglD,GACNuC,UAAWl6C,WAMby7C,GAA0B/oD,GAAK,CACnCqgD,QAASzhD,KACT8D,OAAQu8B,KACRogB,MAAO/xC,OAMH07C,GAAgCrD,GACpCrlD,GACEN,GAAK,CACH+vC,OAAQgV,GACR9Q,QAASj0C,GAAK,CACZ0gD,WAAYziB,KACZ0iB,MAAOoE,GACP3F,SAAU9xC,KACVrN,KAAM8oD,GACNvB,UAAWl6C,WAiBb27C,GAA8BtD,GAClCrlD,GACEN,GAAK,CACHo/C,SAAU9xC,KACV0gC,QAAS+W,OAQTmE,GAAoBlpD,GAAK,CAC7B0gD,WAAYziB,KACZ0iB,MAAOoE,GACP3F,SAAU9xC,KACVrN,KAAMglD,GACNuC,UAAWl6C,OAMP67C,GAAyBnpD,GAAK,CAClC+vC,OAAQgV,GACR9Q,QAASiV,KAGLE,GAAyBvsB,GAC7BnhC,GAAM,CAACwpB,GAAShyB,EAAAA,IAAS61D,KACzBrtD,GAAM,CAACspD,GAAsB+D,MAC7BhtD,GACM7C,MAAMC,QAAQ4C,GACT3H,GAAO2H,EAAOkpD,IAEdlpD,IAQPstD,GAA0BrpD,GAAK,CACnC0gD,WAAYziB,KACZ0iB,MAAOoE,GACP3F,SAAU9xC,KACVrN,KAAMmpD,GACN5B,UAAWl6C,OAGPg8C,GAA+BtpD,GAAK,CACxC+vC,OAAQgV,GACR9Q,QAASoV,KAMLE,GAAwBvpD,GAAK,CACjCqnB,MAAO3rB,GAAM,CACXyiC,GAAQ,UACRA,GAAQ,YACRA,GAAQ,cACRA,GAAQ,kBAEVqrB,OAAQl8C,KACRm8C,SAAUn8C,OAONo8C,GAA6ChE,GACjDplD,GACEN,GAAK,CACHkmC,UAAWtnC,KACXqjD,KAAM30C,KACN6gC,IAAKgZ,GACLwC,KAAMprB,GAAS3/B,MACfgrD,UAAWprB,GAASD,GAASjxB,WAQ7Bu8C,GAAmCnE,GACvCplD,GACEN,GAAK,CACHkmC,UAAWtnC,KACXqjD,KAAM30C,KACN6gC,IAAKgZ,GACLwC,KAAMprB,GAAS3/B,MACfgrD,UAAWprB,GAASD,GAASjxB,WAQ7Bw8C,GAA4B9pD,GAAK,CACrC+pD,aAAcz8C,KACd0oB,OAAQ4vB,GAA6BsD,MAMjCc,GAA2BhqD,GAAK,CACpC+vC,OAAQgV,GACR9Q,QAASiV,KAMLe,GAAmCjqD,GAAK,CAC5C+pD,aAAcz8C,KACd0oB,OAAQ4vB,GAA6BoE,MAMjCE,GAAiBlqD,GAAK,CAC1BmqD,OAAQ78C,KACR20C,KAAM30C,KACN88C,KAAM98C,OAMF+8C,GAAyBrqD,GAAK,CAClC+pD,aAAcz8C,KACd0oB,OAAQk0B,KAiEJI,GAAmB5uD,GAAM,CAC7BsE,GAAK,CACHA,KAAMtE,GAAM,CACVyiC,GAAQ,sBACRA,GAAQ,aACRA,GAAQ,0BACRA,GAAQ,UAEV8jB,KAAM30C,KACNi9C,UAAWj9C,OAEbtN,GAAK,CACHA,KAAMm+B,GAAQ,eACdgsB,OAAQ78C,KACR20C,KAAM30C,KACNi9C,UAAWj9C,OAEbtN,GAAK,CACHA,KAAMm+B,GAAQ,UACd8jB,KAAM30C,KACNi9C,UAAWj9C,KACXk9C,MAAOxqD,GAAK,CACVyqD,sBAAuBn9C,KACvBo9C,0BAA2Bp9C,KAC3Bq9C,sBAAuBr9C,KACvBs9C,wBAAyBt9C,SAG7BtN,GAAK,CACHA,KAAMm+B,GAAQ,QACd8jB,KAAM30C,KACNi9C,UAAWj9C,KACX6gC,IAAKvvC,SAOHisD,GAA+B7qD,GAAK,CACxC+pD,aAAcz8C,KACd0oB,OAAQs0B,KAMJQ,GAA8B9qD,GAAK,CACvC+pD,aAAcz8C,KACd0oB,OAAQ4vB,GACNlqD,GAAM,CAAC0rD,GAAuBC,QAO5B0D,GAAyB/qD,GAAK,CAClC+pD,aAAcz8C,KACd0oB,OAAQ1oB,OAGJ09C,GAAoBhrD,GAAK,CAC7B+vC,OAAQnxC,KACRqsD,OAAQ1sB,GAAS3/B,MACjBssD,IAAK3sB,GAAS3/B,MACdykD,IAAK9kB,GAAS3/B,MACds1C,QAAS3V,GAAS3/B,QAGdusD,GAAwBnrD,GAAK,CACjCorD,WAAYxsD,KACZysD,WAAYzsD,KACZ0sD,eAAgBh+C,KAChBi+C,iBAAkBttB,KAClButB,aAAclrD,GAAMs9B,GAAM,CAACtwB,KAAUA,KAAUA,QAC/Cm5C,WAAYn5C,KACZm+C,SAAUn+C,KACVo+C,SAAUntB,GAASjxB,QAMfq+C,GAAkBjG,GACtB1lD,GAAK,CACHqkB,QAAS/jB,GAAM6qD,IACfS,WAAYtrD,GAAM6qD,OAIhBU,GAAqBnwD,GAAM,CAC/ByiC,GAAQ,aACRA,GAAQ,aACRA,GAAQ,eAGJ2tB,GAA0B9rD,GAAK,CACnCiiD,KAAM30C,KACNy+C,cAAextB,GAASjxB,MACxB6gC,IAAKgZ,GACL6E,mBAAoBxtB,GAASqtB,MAMzBI,GAAgCtG,GACpCrlD,GAAMi+B,GAASutB,MAMXI,GAA6CxG,GAAcp4C,MAE3D6+C,GAA2BnsD,GAAK,CACpCozC,WAAY2R,GACZjS,gBAAiBxyC,GAAMgN,MACvB4lC,gBAAiB5yC,GAAMgN,QAGnB8+C,GAA6BpsD,GAAK,CACtCy4C,WAAYn4C,GAAM1B,MAClB4M,QAASxL,GAAK,CACZ8zC,YAAaxzC,GAAM1B,MACnBinC,OAAQ7lC,GAAK,CACXoyC,sBAAuB9kC,KACvB+kC,0BAA2B/kC,KAC3BglC,4BAA6BhlC,OAE/BgiC,aAAchvC,GACZN,GAAK,CACHo0C,SAAU9zC,GAAMgN,MAChBrN,KAAMrB,KACNgxC,eAAgBtiC,QAGpBymC,gBAAiBn1C,KACjBy1C,oBAAqB7V,GAASl+B,GAAM6rD,SAIlCE,GAAsBrsD,GAAK,CAC/B+vC,OAAQgV,GACRnK,OAAQ3c,KACR5yB,SAAU4yB,KACVquB,OAAQ9tB,GAAS9iC,GAAM,CAACyiC,GAAQ,eAAgBA,GAAQ,oBAGpDouB,GAAyCvsD,GAAK,CAClD8zC,YAAaxzC,GAAM+rD,IACnB5T,WAAYn4C,GAAM1B,QAGd4tD,GAA0BxsD,GAAK,CACnC0C,OAAQu8B,KACRohB,QAASzhD,KACTgvC,UAAWmX,KAGP0H,GAAuBzsD,GAAK,CAChCo0C,SAAU9zC,GAAMykD,IAChB9kD,KAAMrB,KACNgvC,UAAWmX,KAqBP2H,GAAyB7vB,GAlBLnhC,GAAM,CAC9B+wD,GACAD,KAG+B9wD,GAAM,CACrCsE,GAAK,CACH0C,OAAQu8B,KACRohB,QAASzhD,KACTgvC,UAAWhvC,OAEboB,GAAK,CACHo0C,SAAU9zC,GAAM1B,MAChBqB,KAAMrB,KACNgvC,UAAWhvC,UAOb7C,GAEW3H,GAAO2H,EADZ,aAAcA,EACK0wD,GAEAD,MAQrBG,GAAmC3sD,GAAK,CAC5Cy4C,WAAYn4C,GAAM1B,MAClB4M,QAASxL,GAAK,CACZ8zC,YAAaxzC,GAAM+rD,IACnB/c,aAAchvC,GAAMosD,IACpB3Y,gBAAiBn1C,KACjBy1C,oBAAqB7V,GAASD,GAASj+B,GAAM6rD,UAI3CS,GAAqB5sD,GAAK,CAC9B6sD,aAAcv/C,KACdw/C,KAAMluD,KACN+hD,MAAOniB,GAAS5/B,MAChBmuD,cAAetE,KAGXuE,GAAwBhtD,GAAK,CACjCqL,SAAU/K,GAAMykD,IAChB7V,SAAU5uC,GAAMykD,MAMZkI,GAAiCjtD,GAAK,CAC1CmuC,IAAKgZ,GACL+F,IAAK5/C,KACL6/C,kBAAmB3uB,GACjBD,GACEj+B,GACEN,GAAK,CACHiO,MAAOX,KACPgiC,aAAchvC,GACZN,GAAK,CACHo0C,SAAU9zC,GAAMgN,MAChBrN,KAAMrB,KACNgxC,eAAgBtiC,aAO5B8/C,YAAa9sD,GAAMgN,MACnB+/C,aAAc/sD,GAAMgN,MACpBggD,YAAa9uB,GAASD,GAASj+B,GAAM1B,QACrC2uD,iBAAkB/uB,GAASD,GAASj+B,GAAMssD,MAC1CY,kBAAmBhvB,GAASD,GAASj+B,GAAMssD,MAC3Ca,gBAAiBjvB,GAASwuB,IAC1BU,qBAAsBlvB,GAASlxB,QAM3BqgD,GAAuC3tD,GAAK,CAChDmuC,IAAKgZ,GACL+F,IAAK5/C,KACL6/C,kBAAmB3uB,GACjBD,GACEj+B,GACEN,GAAK,CACHiO,MAAOX,KACPgiC,aAAchvC,GAAMosD,SAK5BU,YAAa9sD,GAAMgN,MACnB+/C,aAAc/sD,GAAMgN,MACpBggD,YAAa9uB,GAASD,GAASj+B,GAAM1B,QACrC2uD,iBAAkB/uB,GAASD,GAASj+B,GAAMssD,MAC1CY,kBAAmBhvB,GAASD,GAASj+B,GAAMssD,MAC3Ca,gBAAiBjvB,GAASwuB,IAC1BU,qBAAsBlvB,GAASlxB,QAG3BsgD,GAA2BlyD,GAAM,CAACyiC,GAAQ,GAAIA,GAAQ,YAGtD0vB,GAAgB7tD,GAAK,CACzB+vC,OAAQnxC,KACRwgD,SAAU9xC,KACVk5C,YAAajoB,GAASjxB,MACtBwgD,WAAYvvB,GAAS3/B,MACrB6nD,WAAYjoB,GAASD,GAASjxB,SAM1BygD,GAAoBrI,GACxBnnB,GACEv+B,GAAK,CACHi5C,UAAWr6C,KACXovD,kBAAmBpvD,KACnBqvD,WAAY3gD,KACZwzC,aAAcxgD,GACZN,GAAK,CACH21C,YAAayW,GACbtc,KAAMvR,GAAS0uB,IACf/Y,QAAS1V,GAASovB,OAGtBM,QAAS1vB,GAASl+B,GAAMutD,KACxBjE,UAAWrrB,GAASjxB,MACpBy5C,YAAaxoB,GAASjxB,UAQtB6gD,GAA4BzI,GAChCnnB,GACEv+B,GAAK,CACHi5C,UAAWr6C,KACXovD,kBAAmBpvD,KACnBqvD,WAAY3gD,KACZ4gD,QAAS1vB,GAASl+B,GAAMutD,KACxBjE,UAAWrrB,GAASjxB,MACpBy5C,YAAaxoB,GAASjxB,UAQtB8gD,GAAgC1I,GACpCnnB,GACEv+B,GAAK,CACHi5C,UAAWr6C,KACXovD,kBAAmBpvD,KACnBqvD,WAAY3gD,KACZwzC,aAAcxgD,GACZN,GAAK,CACH21C,YAAa4W,GACbzc,KAAMvR,GAAS0uB,IACf/Y,QAAS1V,GAASovB,OAGtBM,QAAS1vB,GAASl+B,GAAMutD,KACxBjE,UAAWrrB,GAASjxB,MACpBy5C,YAAaxoB,GAASjxB,UAQtB+gD,GAA0B3I,GAC9BnnB,GACEv+B,GAAK,CACHi5C,UAAWr6C,KACXovD,kBAAmBpvD,KACnBqvD,WAAY3gD,KACZwzC,aAAcxgD,GACZN,GAAK,CACH21C,YAAagX,GACb7c,KAAMvR,GAASovB,IACfzZ,QAAS1V,GAASovB,OAGtBM,QAAS1vB,GAASl+B,GAAMutD,KACxBjE,UAAWrrB,GAASjxB,MACpBy5C,YAAaxoB,GAASjxB,UAQtBghD,GAAsC5I,GAC1CnnB,GACEv+B,GAAK,CACHi5C,UAAWr6C,KACXovD,kBAAmBpvD,KACnBqvD,WAAY3gD,KACZwzC,aAAcxgD,GACZN,GAAK,CACH21C,YAAa4W,GACbzc,KAAMvR,GAASovB,IACfzZ,QAAS1V,GAASovB,OAGtBM,QAAS1vB,GAASl+B,GAAMutD,KACxBjE,UAAWrrB,GAASjxB,MACpBy5C,YAAaxoB,GAASjxB,UAQtBihD,GAAkC7I,GACtCnnB,GACEv+B,GAAK,CACHi5C,UAAWr6C,KACXovD,kBAAmBpvD,KACnBqvD,WAAY3gD,KACZ4gD,QAAS1vB,GAASl+B,GAAMutD,KACxBjE,UAAWrrB,GAASjxB,MACpBy5C,YAAaxoB,GAASjxB,UAUtBkhD,GAA6B9I,GACjCnnB,GACEv+B,GAAK,CACHi5C,UAAWr6C,KACXovD,kBAAmBpvD,KACnBqvD,WAAY3gD,KACZwzC,aAAcxgD,GACZN,GAAK,CACH21C,YAAayW,GACbtc,KAAMvR,GAAS0uB,OAGnBiB,QAAS1vB,GAASl+B,GAAMutD,KACxBjE,UAAWrrB,GAASjxB,UAQpBmhD,GAA8B/I,GAClCnnB,GACEv+B,GAAK,CACHi5C,UAAWr6C,KACXovD,kBAAmBpvD,KACnBqvD,WAAY3gD,KACZmrC,WAAYn4C,GAAM1B,MAClBgrD,UAAWrrB,GAASjxB,UAQpBohD,GAA0BhJ,GAC9BnnB,GACEv+B,GAAK,CACHiiD,KAAM30C,KACNwiC,KAAMmd,GACNrD,UAAWprB,GAASD,GAASjxB,OAC7BqoC,YAAayW,GACblY,QAAS1V,GAASovB,QAQlBe,GAAgCjJ,GACpCnnB,GACEv+B,GAAK,CACHiiD,KAAM30C,KACNqoC,YAAagX,GACb7c,KAAMvR,GAASovB,IACf/D,UAAWprB,GAASD,GAASjxB,OAC7B4mC,QAAS1V,GAASovB,QAUlBgB,GAAwCjJ,GAC5C3lD,GAAK,CACHi5C,UAAWr6C,KACXg/C,cAAe59C,GAAK,CAClB6uD,qBAAsBvhD,UAQtBwhD,GAA8BnJ,GAClC3lD,GAAK,CACHi5C,UAAWr6C,KACX+5C,qBAAsBrrC,QAcpByhD,GAAuCrJ,GAC3CplD,GAXuBN,GAAK,CAC5BiiD,KAAM30C,KACN0hD,gBAAiB1hD,KACjB2hD,SAAU3hD,KACV4hD,iBAAkB5hD,SAad6hD,GAA4BxJ,GAChCpnB,GACEv+B,GAAK,CACH49C,cAAe59C,GAAK,CAClB6uD,qBAAsBvhD,WASxB8hD,GAA0B1J,GAAc9mD,MAKxCywD,GAA2B3J,GAAc9mD,MAwQzC0wD,GAAatvD,GAAK,CACtBmuC,IAAKgZ,GACLzE,KAAMpiD,GAAM1B,MACZsnC,UAAWtnC,OAeP2wD,GAAyBvvD,GAAK,CAClCg2B,OAAQ4vB,GAA6B0J,IACrCvF,aAAcz8C,OAyHVkiD,GAAsB,CAC1B,gBAAkB,wBAMb,MAAMC,GAoFXj8D,YACEk8D,EACAvK,GAEA,IAAIwK,EACAC,EACA5M,EACA6M,EACAC,EACAC,EANJ,KAtFeC,iBAAW,OACXC,uCAAiC,OACjCjP,kBAAY,OACZkP,oBAAc,OACdC,gBAAU,OACVC,iBAAW,OACXC,sBAAgB,OAChBC,mBAAa,OACbC,wBAAkC,EAAK,KACvCC,uBAEN,KAAI,KACEC,yBAEN,KAAI,KAOHC,wBAAkC,EAAC,KAE9BC,0BAAoC,EAAK,KACzCC,mBAA6B,EAAK,KAClCC,eAKb,CACFC,gBAAiB,KACjBC,UAAW,EACXC,sBAAuB,GACvBC,oBAAqB,IACtB,KAEwBC,0BAAkD,EAAC,KACnDC,oDAIrB,CAAC,EAAC,KACmBC,wCAIrB,CAAC,EAAC,KACmBC,wCAIrB,CAAC,EAAC,KACmBC,6CAIrB,CAAC,EAAC,KACmBC,qBAErB,CAAC,EAAC,KAcmBC,gCACvB,IAAIn0B,IAkBA8nB,GAAoD,kBAAvBA,EAC/BrkD,KAAKkvD,YAAc7K,EACVA,IACTrkD,KAAKkvD,YAAc7K,EAAmB5I,WACtCz7C,KAAKmvD,kCACH9K,EAAmBsM,iCACrB9B,EAAaxK,EAAmBwK,WAChCC,EAAczK,EAAmByK,YACjC5M,EAAQmC,EAAmBnC,MAC3B6M,EAAkB1K,EAAmB0K,gBACrCC,EAA0B3K,EAAmB2K,wBAC7CC,EAAY5K,EAAmB4K,WAGjCjvD,KAAKkgD,aApqFT,SAA2B0Q,GACzB,IAAqC,IAAjC,WAAWC,KAAKD,GAClB,MAAM,IAAI1+D,UAAU,qDAEtB,OAAO0+D,CACT,CA+pFwBE,CAAkBlC,GACtC5uD,KAAKovD,eAAiBP,GD1gGnB,SAA0BD,GAC/B,MAAMmC,EAAUnC,EAASoC,MAAMhN,IAC/B,GAAe,MAAX+M,EACF,MAAM7+D,UAA+C,qCAAA08D,OAEvD,MACEl0C,EACAu2C,EACAC,EACAp2B,GACEi2B,EACEI,EAAWvC,EAASwC,WAAW,UAAY,OAAS,MACpDC,EACa,MAAjBH,EAAwB,KAAOrvD,SAASqvD,EAAc90D,MAAM,GAAI,IASlE,MAAQ,GAAE+0D,MAAaF,IADR,MAAbI,EAAoB,GAAS,IAAAA,EAAY,MACMv2B,GACnD,CCm/FwCw2B,CAAiB1C,GAErD5uD,KAAKqvD,WA9jDT,SACE/M,EACAwM,EACAyC,EACAxC,EACAC,EACAC,GAEA,MAAM/M,EAAQqP,GAA4BvP,GAC1C,IA+CIwP,EAwEJ,OArHmB,MAAbvC,GACFjrD,QAAQy0C,KACN,8JA6CFsW,IACFyC,EAAsBt5B,MAAOu5B,EAAMC,KACjC,MAAMC,QAA0B,IAAIxV,SAClC,CAACC,EAAS4G,KACR,IACE+L,EAAgB0C,EAAMC,GAAM,CAACE,EAAcC,IACzCzV,EAAQ,CAACwV,EAAcC,MAEzB,MAAO5tD,GACP++C,EAAO/+C,EACT,KAGJ,aAAai+C,KAASyP,EAAkB,GAItB,IAAIG,KAAJ,EAAc55B,MAAO65B,EAASC,KAClD,MAAMl2B,EAAU,CACdm2B,OAAQ,OACRC,KAAMH,EACNI,WAtEAA,EAuEAC,QAAS/+D,OAAOG,OACd,CACE,eAAgB,oBAElBs7D,GAAe,CAAC,EAChBJ,KAIJ,IACE,IACI5rD,EADAuvD,EAA4B,EAE5BC,EAAW,IACf,KAEIxvD,EADE0uD,QACUA,EAAoBlP,EAAKxmB,SAEzBomB,EAAMI,EAAKxmB,GAGN,MAAfh5B,EAAI84C,SAGwB,IAA5BoT,IAGJqD,GAA6B,EACK,IAA9BA,IAGJruD,QAAQuuD,IACL,yBAAwBzvD,EAAI84C,UAAU94C,EAAI0vD,+BAA+BF,sBAEtErW,GAAMqW,GACZA,GAAY,EAGd,MAAMG,QAAa3vD,EAAI2vD,OACnB3vD,EAAI4vD,GACNV,EAAS,KAAMS,GAEfT,EAAS,IAAIh+D,MAAO,GAAE8O,EAAI84C,UAAU94C,EAAI0vD,eAAeC,MAEzD,MAAOplB,GACHA,aAAer5C,OAAOg+D,EAAS3kB,EACrC,IACC,CAAC,EAGN,CA67CsBslB,CAChB/D,EACAE,EACA5M,EACA6M,EACAC,EACAC,GAEFjvD,KAAKsvD,YAn8CT,SAA0BsD,GACxB,MAAO,CAACX,EAAQlf,IACP,IAAIoJ,SAAQ,CAACC,EAAS4G,KAC3B4P,EAAOb,QAAQE,EAAQlf,GAAM,CAAC1F,EAAU2X,KAClC3X,EACF2V,EAAO3V,GAGT+O,EAAQ4I,EAAS,GACjB,GAGR,CAu7CuB6N,CAAiB7yD,KAAKqvD,YACzCrvD,KAAKuvD,iBAt7CT,SAA+BqD,GAC7B,OAAQE,GACC,IAAI3W,SAAQ,CAACC,EAAS4G,KAEH,IAApB8P,EAAStgE,QAAc4pD,EAAQ,IAEnC,MAAM2W,EAAQD,EAAS/pC,KAAKs1B,GACnBuU,EAAOb,QAAQ1T,EAAO2U,WAAY3U,EAAOtL,QAGlD6f,EAAOb,QAAQgB,GAAO,CAAC1lB,EAAU2X,KAC3B3X,EACF2V,EAAO3V,GAGT+O,EAAQ4I,EAAS,GACjB,GAGR,CAm6C4BiO,CAAsBjzD,KAAKqvD,YAEnDrvD,KAAKwvD,cAAgB,IAAIrN,GAAmBniD,KAAKovD,eAAgB,CAC/D3M,aAAa,EACbC,eAAgBp3C,MAElBtL,KAAKwvD,cAAc0D,GAAG,OAAQlzD,KAAKmzD,UAAUv5D,KAAKoG,OAClDA,KAAKwvD,cAAc0D,GAAG,QAASlzD,KAAKozD,WAAWx5D,KAAKoG,OACpDA,KAAKwvD,cAAc0D,GAAG,QAASlzD,KAAKqzD,WAAWz5D,KAAKoG,OACpDA,KAAKwvD,cAAc0D,GACjB,sBACAlzD,KAAKszD,yBAAyB15D,KAAKoG,OAErCA,KAAKwvD,cAAc0D,GACjB,sBACAlzD,KAAKuzD,gCAAgC35D,KAAKoG,OAE5CA,KAAKwvD,cAAc0D,GACjB,mBACAlzD,KAAKwzD,sBAAsB55D,KAAKoG,OAElCA,KAAKwvD,cAAc0D,GACjB,2BACAlzD,KAAKyzD,6BAA6B75D,KAAKoG,OAEzCA,KAAKwvD,cAAc0D,GACjB,wBACAlzD,KAAK0zD,2BAA2B95D,KAAKoG,OAEvCA,KAAKwvD,cAAc0D,GACjB,mBACAlzD,KAAK2zD,sBAAsB/5D,KAAKoG,OAElCA,KAAKwvD,cAAc0D,GACjB,mBACAlzD,KAAK4zD,sBAAsBh6D,KAAKoG,MAEpC,CAKIy7C,iBACF,OAAOz7C,KAAKkvD,WACd,CAKI2E,kBACF,OAAO7zD,KAAKkgD,YACd,CAKAhoB,2BACEK,EACA8rB,GAGA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,CAACv7B,EAAUoU,YACX8O,OACArnD,EACAmmD,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,aAAcvc,GACzB8R,GAAwBr4C,OACtD,GAAI,UAAW1J,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,6BAA4Bs0B,EAAUoU,cAG3C,OAAO7pC,EAAIoyB,MACb,CAKAgD,iBACEK,EACA8rB,GAEA,aAAarkD,KAAK+zD,qBAAqBx7B,EAAW8rB,GAC/C2P,MAAKrvD,GAAKA,EAAE1J,QACZg5D,OAAMz7D,IACL,MAAM,IAAIxE,MACR,oCAAsCukC,EAAUoU,WAAa,KAAOn0C,EACrE,GAEP,CAKA0/B,mBAAmBipB,GACjB,MACMr+C,EAAMxP,SADY0M,KAAKsvD,YAAY,eAAgB,CAACnO,IAC5ByD,GAAcnnB,GAASjxB,QACrD,GAAI,UAAW1J,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,qCAAoCk9C,KAGzC,OAAOr+C,EAAIoyB,MACb,CAMAgD,6BACE,MACMp1B,EAAMxP,SADY0M,KAAKsvD,YAAY,oBAAqB,IAChC1K,GAAcp4C,OAC5C,GAAI,UAAW1J,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,qCAGJ,OAAOnB,EAAIoyB,MACb,CAKAgD,+BACE,MACMp1B,EAAMxP,SADY0M,KAAKsvD,YAAY,yBAA0B,IACrChI,IAC9B,GAAI,UAAWxkD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,uCAGJ,OAAOnB,EAAIoyB,MACb,CAKAgD,gBACEqiB,GAEA,IAAI2Z,EAA6B,CAAC,EAEhCA,EADoB,kBAAX3Z,EACG,CAACkB,WAAYlB,GAChBA,EACG,IACPA,EACHkB,WAAalB,GAAUA,EAAOkB,YAAez7C,KAAKy7C,YAGxC,CACVA,WAAYz7C,KAAKy7C,YAIrB,MACM34C,EAAMxP,SADY0M,KAAKsvD,YAAY,YAAa,CAAC4E,IACzB3M,IAC9B,GAAI,UAAWzkD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,wBAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,qBACEi8B,EACA1Y,GAEA,MAAM1I,EAAO/yC,KAAK8zD,WAAW,CAACK,EAAiBxnB,YAAa8O,GAEtD34C,EAAMxP,SADY0M,KAAKsvD,YAAY,iBAAkBvc,GAC7B8R,GAAwB8C,KACtD,GAAI,UAAW7kD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,8BAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,6BACEk8B,EACA3Y,GAEA,MAAM1I,EAAO/yC,KAAK8zD,WAAW,CAACM,EAAaznB,YAAa8O,GAElD34C,EAAMxP,SADY0M,KAAKsvD,YAAY,yBAA0Bvc,GACrC8R,GAAwB8C,KACtD,GAAI,UAAW7kD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,uCAGJ,OAAOnB,EAAIoyB,MACb,CAOAgD,8BACEm8B,EACAvjB,EACAuT,GAMA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GAC9B,IAAIiQ,EAAe,CAACD,EAAa1nB,YAC7B,SAAUmE,EACZwjB,EAAMz8D,KAAK,CAACm0D,KAAMlb,EAAOkb,KAAKrf,aAE9B2nB,EAAMz8D,KAAK,CAACi1C,UAAWgE,EAAOhE,UAAUH,aAG1C,MAAMoG,EAAO/yC,KAAK8zD,WAAWQ,EAAO7Y,EAAY,SAAUlB,GAEpDz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,0BAA2Bvc,GACtCiV,IAC9B,GAAI,UAAWllD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,iDAAgDowD,EAAa1nB,cAGlE,OAAO7pC,EAAIoyB,MACb,CAOAgD,oCACEm8B,EACAvjB,EACA2K,GAMA,IAAI6Y,EAAe,CAACD,EAAa1nB,YAC7B,SAAUmE,EACZwjB,EAAMz8D,KAAK,CAACm0D,KAAMlb,EAAOkb,KAAKrf,aAE9B2nB,EAAMz8D,KAAK,CAACi1C,UAAWgE,EAAOhE,UAAUH,aAG1C,MAAMoG,EAAO/yC,KAAK8zD,WAAWQ,EAAO7Y,EAAY,cAE1C34C,EAAMxP,SADY0M,KAAKsvD,YAAY,0BAA2Bvc,GACtCmV,IAC9B,GAAI,UAAWplD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,iDAAgDowD,EAAa1nB,cAGlE,OAAO7pC,EAAIoyB,MACb,CAKAgD,yBACEqiB,GAEA,MAAM58C,EAAM,IACP48C,EACHkB,WAAalB,GAAUA,EAAOkB,YAAez7C,KAAKy7C,YAE9C1I,EAAOp1C,EAAImzC,QAAUnzC,EAAI89C,WAAa,CAAC99C,GAAO,GAE9CmF,EAAMxP,SADY0M,KAAKsvD,YAAY,qBAAsBvc,GACjCoV,IAC9B,GAAI,UAAWrlD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,kCAE1C,OAAOnB,EAAIoyB,MACb,CAMAgD,8BACEq8B,EACA9Y,GAEA,MAAM1I,EAAO/yC,KAAK8zD,WAAW,CAACS,EAAY5nB,YAAa8O,GAEjD34C,EAAMxP,SADY0M,KAAKsvD,YAAY,0BAA2Bvc,GACtCgV,IAC9B,GAAI,UAAWjlD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,wCAGJ,OAAOnB,EAAIoyB,MACb,CAKAgD,+BACEK,EACA8rB,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,CAACv7B,EAAUoU,YACX8O,EACA,SACAlB,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,iBAAkBvc,GAGzD8R,GAAwBpnB,GAAS2qB,MAEnC,GAAI,UAAWtlD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,oCAAmCs0B,EAAUoU,cAGlD,OAAO7pC,EAAIoyB,MACb,CAKAgD,2BACEK,EACA8rB,GAIA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,CAACv7B,EAAUoU,YACX8O,EACA,aACAlB,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,iBAAkBvc,GAGzD8R,GAAwBpnB,GAAS8qB,MAEnC,GAAI,UAAWzlD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,oCAAmCs0B,EAAUoU,cAGlD,OAAO7pC,EAAIoyB,MACb,CAKAgD,qBACEK,EACA8rB,GAEA,IAKE,aAJkBrkD,KAAKw0D,yBACrBj8B,EACA8rB,IAESppD,MACX,MAAOzC,GACP,MAAM,IAAIxE,MACR,oCAAsCukC,EAAUoU,WAAa,KAAOn0C,EAExE,CACF,CAKA0/B,gCACEu8B,EACAC,GAIA,MAAM,WAACjZ,EAAU,OAAElB,GAAU6J,GAA4BsQ,GACnD12B,EAAOy2B,EAAW1rC,KAAI2O,GAAOA,EAAIiV,aACjCoG,EAAO/yC,KAAK8zD,WAAW,CAAC91B,GAAOyd,EAAY,aAAclB,GAEzDz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,sBAAuBvc,GAG9D8R,GAAwBrlD,GAAMi+B,GAAS8qB,OAEzC,GAAI,UAAWzlD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,mCAAkC+5B,KAGvC,OAAOl7B,EAAIoyB,MACb,CAKAgD,wCACEu8B,EACApQ,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBrmB,EAAOy2B,EAAW1rC,KAAI2O,GAAOA,EAAIiV,aACjCoG,EAAO/yC,KAAK8zD,WAAW,CAAC91B,GAAOyd,EAAY,SAAUlB,GAErDz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,sBAAuBvc,GAG9D8R,GAAwBrlD,GAAMi+B,GAAS2qB,OAEzC,GAAI,UAAWtlD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,mCAAkC+5B,KAGvC,OAAOl7B,EAAIoyB,MACb,CAKAgD,8BACEu8B,EACApQ,GAMA,aAJkBrkD,KAAK20D,kCACrBF,EACApQ,IAESppD,KACb,CAKAi9B,yBACEK,EACA8rB,EACAhD,GAEA,MAAM,WAAC5F,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,CAACv7B,EAAUoU,YACX8O,OACArnD,EACA,IACKmmD,EACH8G,MAAgB,MAATA,EAAgBA,EAAQ9G,GAAQ8G,QAKrCv+C,EAAMxP,SADY0M,KAAKsvD,YAAY,qBAAsBvc,GACjC6R,GAAc6D,KAC5C,GAAI,UAAW3lD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,kCAAiCs0B,EAAUoU,cAGhD,OAAO7pC,EAAIoyB,MACb,CAOAgD,yBACE4U,EACA8nB,GAEA,MAAM,WAACnZ,EAAU,OAAElB,GACjB6J,GAA4BwQ,IACxB,SAAC72D,KAAa82D,GAAyBta,GAAU,CAAC,EAClDxH,EAAO/yC,KAAK8zD,WAChB,CAAChnB,EAAUH,YACX8O,EACA19C,GAAY,SACZ82D,GAGI/xD,EAAMxP,SADY0M,KAAKsvD,YAAY,qBAAsBvc,GACjC6R,GAAcplD,GAAM6oD,MAClD,GAAI,UAAWvlD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,2CAA0C6oC,EAAUH,cAGzD,OAAO7pC,EAAIoyB,MACb,CAOAgD,+BACE4U,EACA8nB,GAOA,MAAM,WAACnZ,EAAU,OAAElB,GACjB6J,GAA4BwQ,GACxB7hB,EAAO/yC,KAAK8zD,WAChB,CAAChnB,EAAUH,YACX8O,EACA,aACAlB,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,qBAAsBvc,GAG7D6R,GAAcplD,GAAMgpD,MAEtB,GAAI,UAAW1lD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,2CAA0C6oC,EAAUH,cAGzD,OAAO7pC,EAAIoyB,MACb,CAeAgD,yBACE48B,EACArZ,GAEA,IAAIsZ,EAaAC,EAXJ,GAAuB,iBAAZF,EACTC,EAAeD,MACV,CACL,MAAMva,EAASua,EAEf,GAAIva,EAAOuB,aAAamZ,QACtB,OAAO9Y,QAAQ6G,OAAOzI,EAAOuB,YAAYoZ,QAE3CH,EAAexa,EAAOnV,SACxB,CAIA,IACE4vB,EAAmBtoB,IAAAA,OAAYqoB,GAC/B,MAAO1nB,GACP,MAAM,IAAIr5C,MAAM,qCAAuC+gE,EACzD,CAIA,OAFA9oD,GAAmC,KAA5B+oD,EAAiBxiE,OAAe,gCAEf,kBAAbsiE,QACI90D,KAAKm1D,6CAA6C,CAC7D1Z,WAAYA,GAAcz7C,KAAKy7C,WAC/BrW,UAAW2vB,IAEJ,yBAA0BD,QACtB90D,KAAKo1D,qDAAqD,CACrE3Z,WAAYA,GAAcz7C,KAAKy7C,WAC/BqZ,mBAGW90D,KAAKq1D,4CAA4C,CAC5D5Z,WAAYA,GAAcz7C,KAAKy7C,WAC/BqZ,YAGN,CAEQQ,uBAAuBC,GAC7B,OAAO,IAAIpZ,SAAe,CAACzhC,EAAGsoC,KACd,MAAVuS,IAGAA,EAAON,QACTjS,EAAOuS,EAAOL,QAEdK,EAAOC,iBAAiB,SAAS,KAC/BxS,EAAOuS,EAAOL,OAAO,IAEzB,GAEJ,CAEQO,kCAAiCC,GAYvC,IACIC,EACAC,GAdoC,WACxCna,EAAU,UACVrW,GAIDswB,EAWK34B,GAAO,EAkGX,MAAO,CAAC84B,kBAVkBA,KACpBD,IACFA,IACAA,OAAkDxhE,GAErB,MAA3BuhE,IACF31D,KAAK81D,wBAAwBH,GAC7BA,OAA0BvhE,EAC5B,EAEyB2hE,oBAjGC,IAAI5Z,SAG7B,CAACC,EAAS4G,KACX,IACE2S,EAA0B31D,KAAKg2D,YAC7B5wB,GACA,CAAClQ,EAAyBqG,KACxBo6B,OAA0BvhE,EAC1B,MAAM4wD,EAAW,CACfzpB,UACAtgC,MAAOi6B,GAETknB,EAAQ,CAAC6Z,OAAQ3e,GAAkB4e,UAAWlR,YAAU,GAE1DvJ,GAEF,MAAM0a,EAA2B,IAAIha,SACnCia,IACiC,MAA3BT,EACFS,IAEAR,EACE51D,KAAKq2D,2BACHV,GACAW,IACoB,eAAdA,GACFF,GACF,GAGR,IAGJ,WAEE,SADMD,EACFp5B,EAAM,OACV,MAAMioB,QAAiBhlD,KAAKu2D,mBAAmBnxB,GAC/C,GAAIrI,EAAM,OACV,GAAgB,MAAZioB,EACF,OAEF,MAAM,QAACzpB,EAAO,MAAEtgC,GAAS+pD,EACzB,GAAa,MAAT/pD,EAGJ,GAAIA,GAAOoyC,IACT2V,EAAO/nD,EAAMoyC,SACR,CACL,OAAQoO,GACN,IAAK,YACL,IAAK,SACL,IAAK,eACH,GAAiC,cAA7BxgD,EAAMiwD,mBACR,OAEF,MAEF,IAAK,YACL,IAAK,MACL,IAAK,OACH,GAC+B,cAA7BjwD,EAAMiwD,oBACuB,cAA7BjwD,EAAMiwD,mBAEN,OAQNnuB,GAAO,EACPqf,EAAQ,CACN6Z,OAAQ3e,GAAkB4e,UAC1BlR,SAAU,CACRzpB,UACAtgC,UAGN,CACD,EAhDD,GAiDA,MAAOoyC,GACP2V,EAAO3V,EACT,KAaJ,CAEA,2DAAkEmpB,GAM/D,IANgE,WACjE/a,EACAqZ,UAAU,YAAChZ,EAAW,qBAAEjE,EAAoB,UAAEzS,IAI/CoxB,EACKz5B,GAAgB,EACpB,MAAM05B,EAAgB,IAAIta,SAEvBC,IACD,MAAMsa,EAAmBx+B,UACvB,IAEE,aAD0Bl4B,KAAK22D,eAAelb,GAE9C,MAAOmb,GACP,OAAQ,CACV,GAEF,WACE,IAAIC,QAA2BH,IAC/B,IAAI35B,EAAJ,CACA,KAAO85B,GAAsBhf,GAAsB,CAEjD,SADMoE,GAAM,KACRlf,EAAM,OAEV,GADA85B,QAA2BH,IACvB35B,EAAM,MACZ,CACAqf,EAAQ,CAAC6Z,OAAQ3e,GAAkBwf,sBAPnB,CAQjB,EAVD,EAUI,KAEA,kBAACjB,EAAiB,oBAAEE,GACxB/1D,KAAKy1D,kCAAkC,CAACha,aAAYrW,cAChD2xB,EAAsB/2D,KAAKs1D,uBAAuBxZ,GACxD,IAAI5mB,EACJ,IACE,MAAM8hC,QAAgB7a,QAAQ8a,KAAK,CACjCF,EACAhB,EACAU,IAEF,GAAIO,EAAQf,SAAW3e,GAAkB4e,UAGvC,MAAM,IAAIvoB,GAA2CvI,GAFrDlQ,EAAS8hC,EAAQhS,QAIrB,CAAE,QACAjoB,GAAO,EACP84B,GACF,CACA,OAAO3gC,CACT,CAEA,kDAAyDgiC,GAYtD,IAZuD,WACxDzb,EACAqZ,UAAU,YACRhZ,EAAW,eACX5D,EAAc,mBACd6D,EAAkB,WAClBC,EAAU,UACV5W,IAKH8xB,EACKn6B,GAAgB,EACpB,MAAM05B,EAAgB,IAAIta,SAGvBC,IACD,IAAI+a,EAAwCnb,EACxCob,EAAiC,KACrC,MAAMC,EAAuBn/B,UAC3B,IACE,MAAM,QAACqD,EAAStgC,MAAO8hD,SAAsB/8C,KAAKs3D,mBAChDvb,EACA,CACEN,aACAvD,mBAIJ,OADAkf,EAAkB77B,EAAQ4lB,KACnBpE,GAAc5P,MACrB,MAAO30C,GAGP,OAAO2+D,CACT,GAEF,WAEE,GADAA,QAA0BE,KACtBt6B,EACJ,OAEE,CACA,GAAIif,IAAemb,EAKjB,YAJA/a,EAAQ,CACN6Z,OAAQ3e,GAAkBigB,cAC1BC,2BAA4BJ,IAKhC,SADMnb,GAAM,KACRlf,EAAM,OAEV,GADAo6B,QAA0BE,IACtBt6B,EAAM,MACZ,CACD,EAlBD,EAkBI,KAEA,kBAAC84B,EAAiB,oBAAEE,GACxB/1D,KAAKy1D,kCAAkC,CAACha,aAAYrW,cAChD2xB,EAAsB/2D,KAAKs1D,uBAAuBxZ,GACxD,IAAI5mB,EACJ,IACE,MAAM8hC,QAAgB7a,QAAQ8a,KAAK,CACjCF,EACAhB,EACAU,IAEF,GAAIO,EAAQf,SAAW3e,GAAkB4e,UACvChhC,EAAS8hC,EAAQhS,aACZ,CAEL,IAAIyS,EAIJ,OAEE,CACA,MAAM7b,QAAe57C,KAAKu2D,mBAAmBnxB,GAC7C,GAAc,MAAVwW,EACF,MAEF,KACEA,EAAOrgB,QAAQ4lB,MACd6V,EAAQQ,4BAA8Btf,IAFzC,CAOAuf,EAAkB7b,EAClB,KAFA,OAFQK,GAAM,IAKhB,CACA,IAAIwb,GAAiBx8D,MAyCnB,MAAM,IAAI8yC,GAAoC3I,GAzCpB,CAC1B,MAAMsyB,EAAsBjc,GAAc,aACpC,mBAACyP,GAAsBuM,EAAgBx8D,MAC7C,OAAQy8D,GACN,IAAK,YACL,IAAK,SACH,GACyB,cAAvBxM,GACuB,cAAvBA,GACuB,cAAvBA,EAEA,MAAM,IAAInd,GAAoC3I,GAEhD,MACF,IAAK,YACL,IAAK,SACL,IAAK,eACH,GACyB,cAAvB8lB,GACuB,cAAvBA,EAEA,MAAM,IAAInd,GAAoC3I,GAEhD,MACF,IAAK,YACL,IAAK,MACL,IAAK,OACH,GAA2B,cAAvB8lB,EACF,MAAM,IAAInd,GAAoC3I,GAQpDlQ,EAAS,CACPqG,QAASk8B,EAAgBl8B,QACzBtgC,MAAO,CAACoyC,IAAKoqB,EAAgBx8D,MAAMoyC,KAEvC,CAGF,CACF,CAAE,QACAtQ,GAAO,EACP84B,GACF,CACA,OAAO3gC,CACT,CAEA,mDAA0DyiC,GAMvD,IACGC,GAPqD,WACzDnc,EAAU,UACVrW,GAIDuyB,EAEC,MAAMlB,EAAgB,IAAIta,SAGvBC,IACD,IAAIyb,EAAY73D,KAAKmvD,mCAAqC,IAC1D,OAAQ1T,GACN,IAAK,YACL,IAAK,SACL,IAAK,SACL,IAAK,YACL,IAAK,eACHoc,EAAY73D,KAAKmvD,mCAAqC,IAQ1DyI,EAAYvb,YACV,IAAMD,EAAQ,CAAC6Z,OAAQ3e,GAAkBwgB,UAAWD,eACpDA,EACD,KAEG,kBAAChC,EAAiB,oBAAEE,GACxB/1D,KAAKy1D,kCAAkC,CACrCha,aACArW,cAEJ,IAAIlQ,EACJ,IACE,MAAM8hC,QAAgB7a,QAAQ8a,KAAK,CAAClB,EAAqBU,IACzD,GAAIO,EAAQf,SAAW3e,GAAkB4e,UAGvC,MAAM,IAAItoB,GACRxI,EACA4xB,EAAQa,UAAY,KAJtB3iC,EAAS8hC,EAAQhS,QAOrB,CAAE,QACA+S,aAAaH,GACb/B,GACF,CACA,OAAO3gC,CACT,CAKAgD,wBACE,MACMp1B,EAAMxP,SADY0M,KAAKsvD,YAAY,kBAAmB,IAC9B1K,GAAcplD,GAAM0qD,MAClD,GAAI,UAAWpnD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,+BAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,sBAAsBujB,GACpB,MAAM1I,EAAO/yC,KAAK8zD,WAAW,GAAIrY,GAE3B34C,EAAMxP,SADY0M,KAAKsvD,YAAY,kBAAmBvc,GAC9B8X,IAC9B,GAAI,UAAW/nD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,+BAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,cACEmsB,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,GACArY,OACArnD,EACAmmD,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,UAAWvc,GACtB6R,GAAcp4C,OAC5C,GAAI,UAAW1J,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,sBAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,oBACEmsB,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,GACArY,OACArnD,EACAmmD,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,gBAAiBvc,GAC5B6R,GAAc9mD,OAC5C,GAAI,UAAWgF,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,6BAE1C,OAAOnB,EAAIoyB,MACb,CAQAgD,qBACE8/B,EACAzuD,GAEA,MAAMwpC,EAAO,CAACilB,EAAWzuD,GAEnBzG,EAAMxP,SADY0M,KAAKsvD,YAAY,iBAAkBvc,GAC7B6R,GAAcplD,GAAMykD,MAClD,GAAI,UAAWnhD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,8BAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,yBACEkN,EACAmV,GAEA,MAAM,QAAChf,EAAStgC,MAAOvH,SAAgBsM,KAAKi4D,qBAC1C,CAAC7yB,GACDmV,GAEFtuC,GAAyB,IAAlBvY,EAAOlB,QAEd,MAAO,CAAC+oC,UAAStgC,MADHvH,EAAO,GAEvB,CAKAwkC,2BACEyf,EACA4C,GAEA,MAAM8D,EAAgB,CAAC1G,GACnB4C,GACF8D,EAAOxmD,KAAK0iD,GAEd,MACMz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,uBAAwBjR,GACnC8M,IAC9B,GAAI,UAAWroD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,kCAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,0BACEmsB,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,GACArY,OACArnD,EACAmmD,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,sBAAuBvc,GAClC6R,GAAcp4C,OAC5C,GAAI,UAAW1J,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,mCAGJ,OAAOnB,EAAIoyB,MACb,CAOAgD,qBAAqBujB,GAKnB,aAJqBz7C,KAAKk4D,UAAU,CAClCzc,aACA0c,mCAAmC,KAEvBl9D,MAAMuT,KACtB,CAKA0pB,2BACEujB,GAEA,MAAM1I,EAAO/yC,KAAK8zD,WAAW,GAAIrY,GAE3B34C,EAAMxP,SADY0M,KAAKsvD,YAAY,uBAAwBvc,GACnCkU,IAC9B,GAAI,UAAWnkD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,2BAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,yBACEia,EACAkP,EACAgD,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,CAAC3hB,EAAUppB,KAAIkmB,GAAUA,EAAOtC,cAChC8O,OACArnD,EACA,IACKmmD,EACH8G,MAAgB,MAATA,EAAgBA,EAAQ9G,GAAQ8G,QAIrCv+C,EAAMxP,SADY0M,KAAKsvD,YAAY,qBAAsBvc,GACjCwS,IAC9B,GAAI,UAAWziD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,kCAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,yBACE,MACMp1B,EAAMxP,SADY0M,KAAKsvD,YAAY,mBAAoB,IAC/BpI,IAC9B,GAAI,UAAWpkD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,gCAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,mBACEmsB,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,GACArY,OACArnD,EACAmmD,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,eAAgBvc,GAC3BoU,IAC9B,GAAI,UAAWrkD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,4BAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,yBACE,MACMp1B,EAAMxP,SADY0M,KAAKsvD,YAAY,mBAAoB,IAC/BlI,IAC9B,GAAI,UAAWtkD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,gCAE1C,MAAMm0D,EAAgBt1D,EAAIoyB,OAC1B,OAAO,IAAI0rB,GACTwX,EAAcvX,cACduX,EAActX,yBACdsX,EAAcrX,OACdqX,EAAcpX,iBACdoX,EAAcnX,gBAElB,CAMA/oB,0BACE,MACMp1B,EAAMxP,SADY0M,KAAKsvD,YAAY,oBAAqB,IAChCjI,IAC9B,GAAI,UAAWvkD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,iCAE1C,OAAOnB,EAAIoyB,MACb,CAMAgD,wCACEsc,EACAiH,GAEA,MAAM1I,EAAO/yC,KAAK8zD,WAAW,CAACtf,GAAaiH,GAKrC34C,EAAMxP,SAJY0M,KAAKsvD,YAC3B,oCACAvc,GAE4BqY,IAC9B,MAAI,UAAWtoD,GACbkB,QAAQy0C,KAAK,sDACN,GAEF31C,EAAIoyB,MACb,CAQAgD,mCAAmCujB,GAMjC,MAAM1I,EAAO/yC,KAAK8zD,WAAW,GAAIrY,GAE3B34C,EAAMxP,SADY0M,KAAKsvD,YAAY,qBAAsBvc,GACjC+a,IAC9B,GAAI,UAAWhrD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,kCAE1C,OAAOnB,EAAIoyB,MACb,CAMAgD,kCACE3uB,GAEA,MAIMzG,EAAMxP,SAJY0M,KAAKsvD,YAC3B,8BACA/lD,EAAQ,CAACA,GAAS,IAEU0kD,IAC9B,GAAI,UAAWnrD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,4CAIJ,OAAOnB,EAAIoyB,MACb,CAOAgD,mCACEigB,EACAsD,GAEA,MAAM1I,EAAO/yC,KAAK8zD,WAAW,CAAC3b,GAAYsD,GAMpC34C,EAAMxP,SALY0M,KAAKsvD,YAC3B,+BACAvc,GAG4Bsb,IAC9B,GAAI,UAAWvrD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,gCAE1C,MAAM,QAACs3B,EAAO,MAAEtgC,GAAS6H,EAAIoyB,OAC7B,MAAO,CACLqG,UACAtgC,MAAiB,OAAVA,EAAiBA,EAAM6hD,cAAgB,KAElD,CAKA5kB,uBACExtB,EACA+wC,GAEA,MAAM4c,EAAczoD,GAASlF,EAAQohC,aAAavvC,SAAS,UACrDw2C,EAAO/yC,KAAK8zD,WAAW,CAACuE,GAAc5c,GAGtC34C,EAAMxP,SAFY0M,KAAKsvD,YAAY,mBAAoBvc,GAE/B8R,GAAwBpnB,GAASjxB,QAC/D,GAAI,UAAW1J,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,iCAE1C,GAAmB,OAAfnB,EAAIoyB,OACN,MAAM,IAAIlhC,MAAM,qBAElB,OAAO8O,EAAIoyB,MACb,CAQAgD,yBACEujB,GAEA,IAEE,aADkBz7C,KAAKs4D,6BAA6B7c,IACzCxgD,MACX,MAAOzC,GACP,MAAM,IAAIxE,MAAM,mCAAqCwE,EACvD,CACF,CAMA0/B,yBACEmsB,GAEA,IAEE,aADkBrkD,KAAKu4D,6BAA6BlU,IACzCppD,MACX,MAAOzC,GACP,MAAM,IAAIxE,MAAM,mCAAqCwE,EACvD,CACF,CAMA0/B,mCACEmsB,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,GACArY,OACArnD,EACAmmD,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,qBAAsBvc,GACjCib,IAC9B,GAAI,UAAWlrD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,kCAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,mBACE,MACMp1B,EAAMxP,SADY0M,KAAKsvD,YAAY,aAAc,IACzB1K,GAAc4B,KAC5C,GAAI,UAAW1jD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,yBAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,uBACE,MACMp1B,EAAMxP,SADY0M,KAAKsvD,YAAY,iBAAkB,IAC7B1K,GAAc9mD,OAC5C,GAAI,UAAWgF,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,8BAE1C,OAAOnB,EAAIoyB,MACb,CA0DAgD,eACEipB,EACAuT,GAOA,MAAM,WAACjZ,EAAU,OAAElB,GAAU6J,GAA4BsQ,GACnD3hB,EAAO/yC,KAAKw4D,2BAChB,CAACrX,GACD1F,OACArnD,EACAmmD,GAEIke,QAAkBz4D,KAAKsvD,YAAY,WAAYvc,GACrD,IACE,OAAQwH,GAAQme,oBACd,IAAK,WAAY,CACf,MAAM51D,EAAMxP,GAAOmlE,EAAWnL,IAC9B,GAAI,UAAWxqD,EACb,MAAMA,EAAImB,MAEZ,OAAOnB,EAAIoyB,MACb,CACA,IAAK,OAAQ,CACX,MAAMpyB,EAAMxP,GAAOmlE,EAAWpL,IAC9B,GAAI,UAAWvqD,EACb,MAAMA,EAAImB,MAEZ,OAAOnB,EAAIoyB,MACb,CACA,QAAS,CACP,MAAMpyB,EAAMxP,GAAOmlE,EAAWxL,IAC9B,GAAI,UAAWnqD,EACb,MAAMA,EAAImB,MAEZ,MAAM,OAACixB,GAAUpyB,EACjB,OAAOoyB,EACH,IACKA,EACH8qB,aAAc9qB,EAAO8qB,aAAaj3B,KAChC4vC,IAAA,IAAC,YAAC9jB,EAAW,KAAE7F,EAAI,QAAEoE,GAAQulB,EAAA,MAAM,CACjC3pB,OACA6F,YAAa,IACRA,EACHnqC,QAASq6C,GACP3R,EACAyB,EAAYnqC,UAGhB0oC,UACD,KAGL,IACN,GAEF,MAAO56C,GACP,MAAM,IAAIqpD,GACRrpD,EACA,gCAEJ,CACF,CAsBA0/B,qBACEipB,EACAuT,GAOA,MAAM,WAACjZ,EAAU,OAAElB,GAAU6J,GAA4BsQ,GACnD3hB,EAAO/yC,KAAKw4D,2BAChB,CAACrX,GACD1F,EACA,aACAlB,GAEIke,QAAkBz4D,KAAKsvD,YAAY,WAAYvc,GACrD,IACE,OAAQwH,GAAQme,oBACd,IAAK,WAAY,CACf,MAAM51D,EAAMxP,GAAOmlE,EAAWjL,IAC9B,GAAI,UAAW1qD,EACb,MAAMA,EAAImB,MAEZ,OAAOnB,EAAIoyB,MACb,CACA,IAAK,OAAQ,CACX,MAAMpyB,EAAMxP,GAAOmlE,EAAWhL,IAC9B,GAAI,UAAW3qD,EACb,MAAMA,EAAImB,MAEZ,OAAOnB,EAAIoyB,MACb,CACA,QAAS,CACP,MAAMpyB,EAAMxP,GAAOmlE,EAAWlL,IAC9B,GAAI,UAAWzqD,EACb,MAAMA,EAAImB,MAEZ,OAAOnB,EAAIoyB,MACb,GAEF,MAAO18B,GACP,MAAM,IAAIqpD,GAAmBrpD,EAAmB,sBAClD,CACF,CAKA0/B,qBACEmsB,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAK8zD,WAChB,GACArY,OACArnD,EACAmmD,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,iBAAkBvc,GAC7B6R,GAAcp4C,OAC5C,GAAI,UAAW1J,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,0CAIJ,OAAOnB,EAAIoyB,MACb,CAKAgD,yBACE08B,GAEA,IAAIgE,EACAnd,EAEJ,GAAkC,kBAAvBmZ,EACTnZ,EAAamZ,OACR,GAAIA,EAAoB,CAC7B,MAAOnZ,WAAYh5C,KAAMq4B,GAAQ85B,EACjCnZ,EAAah5C,EACbm2D,EAAQ99B,CACV,CAEA,MAAMiY,EAAO/yC,KAAK8zD,WAAW,GAAIrY,EAAY,SAAUmd,GAEjD91D,EAAMxP,SADY0M,KAAKsvD,YAAY,qBAAsBvc,GACjC8T,IAC9B,GAAI,UAAW/jD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,8CAIJ,OAAOnB,EAAIoyB,MACb,CA2BAgD,qBACEkN,EACAsvB,GAEA,MAAM,WAACjZ,EAAU,OAAElB,GAAU6J,GAA4BsQ,GACnD3hB,EAAO/yC,KAAKw4D,2BAChB,CAACpzB,GACDqW,OACArnD,EACAmmD,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,iBAAkBvc,GAC7B6a,IAC9B,GAAI,UAAW9qD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,6BAG1C,MAAMixB,EAASpyB,EAAIoyB,OACnB,OAAKA,EAEE,IACFA,EACH2f,YAAa,IACR3f,EAAO2f,YACVnqC,QAASq6C,GACP7vB,EAAOke,QACPle,EAAO2f,YAAYnqC,WARLwqB,CAYtB,CAKAgD,2BACEkN,EACAif,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxBtR,EAAO/yC,KAAKw4D,2BAChB,CAACpzB,GACDqW,EACA,aACAlB,GAGIz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,iBAAkBvc,GAC7B8a,IAC9B,GAAI,UAAW/qD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,6BAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,4BACEyf,EACA0M,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxB0O,EAAQpb,EAAW5uB,KAAIqc,IAOpB,CACL4tB,WAAY,iBACZjgB,KARW/yC,KAAKw4D,2BAChB,CAACpzB,GACDqW,EACA,aACAlB,OAiBJ,aATwBv6C,KAAKuvD,iBAAiBwD,IACxBhqC,KAAK0vC,IACzB,MAAM31D,EAAMxP,GAAOmlE,EAAW5K,IAC9B,GAAI,UAAW/qD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,8BAE1C,OAAOnB,EAAIoyB,MAAM,GAIrB,CAgCAgD,sBACEyf,EACA0M,GAEA,MAAM,WAAC5I,EAAU,OAAElB,GACjB6J,GAA4BC,GACxB0O,EAAQpb,EAAW5uB,KAAIqc,IAOpB,CACL4tB,WAAY,iBACZjgB,KARW/yC,KAAKw4D,2BAChB,CAACpzB,GACDqW,OACArnD,EACAmmD,OA6BJ,aArBwBv6C,KAAKuvD,iBAAiBwD,IACxBhqC,KAAK0vC,IACzB,MAAM31D,EAAMxP,GAAOmlE,EAAW7K,IAC9B,GAAI,UAAW9qD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,8BAE1C,MAAMixB,EAASpyB,EAAIoyB,OACnB,OAAKA,EAEE,IACFA,EACH2f,YAAa,IACR3f,EAAO2f,YACVnqC,QAASq6C,GACP7vB,EAAOke,QACPle,EAAO2f,YAAYnqC,WARLwqB,CAWnB,GAIL,CAQAgD,wBACEipB,EACA1F,GAEA,MAAM1I,EAAO/yC,KAAKw4D,2BAA2B,CAACrX,GAAO1F,GAE/C34C,EAAMxP,SADY0M,KAAKsvD,YAAY,oBAAqBvc,GAChC2a,IAE9B,GAAI,UAAW5qD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,iCAG1C,MAAMixB,EAASpyB,EAAIoyB,OACnB,IAAKA,EACH,MAAM,IAAIlhC,MAAM,mBAAqBmtD,EAAO,cAG9C,MAAM0X,EAAQ,IACT3jC,EACH8qB,aAAc9qB,EAAO8qB,aAAaj3B,KAAI+vC,IAAyB,IAAxB,YAACjkB,EAAW,KAAE7F,GAAK8pB,EACxD,MAAMpuD,EAAU,IAAIooC,GAAQ+B,EAAYnqC,SACxC,MAAO,CACLskC,OACA6F,YAAa,IACRA,EACHnqC,WAEH,KAIL,MAAO,IACFmuD,EACH7Y,aAAc6Y,EAAM7Y,aAAaj3B,KAAIgwC,IAAyB,IAAxB,YAAClkB,EAAW,KAAE7F,GAAK+pB,EACvD,MAAO,CACL/pB,OACA6F,YAAa6C,GAAYoD,SACvBjG,EAAYnqC,QACZmqC,EAAY8C,YAEf,IAGP,CAKAzf,gBACE8/B,EACAgB,EACAvd,GAEA,MAAM1I,EAAO/yC,KAAKw4D,gCACJpkE,IAAZ4kE,EAAwB,CAAChB,EAAWgB,GAAW,CAAChB,GAChDvc,GAGI34C,EAAMxP,SADY0M,KAAKsvD,YAAY,YAAavc,GACxB6R,GAAcplD,GAAMgN,QAClD,GAAI,UAAW1J,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,wBAE1C,OAAOnB,EAAIoyB,MACb,CAKAgD,yBACEipB,EACA1F,GAEA,MAAM1I,EAAO/yC,KAAKw4D,2BAChB,CAACrX,GACD1F,OACArnD,EACA,CACEskE,mBAAoB,aACpBtL,SAAS,IAIPtqD,EAAMxP,SADY0M,KAAKsvD,YAAY,WAAYvc,GACvB4a,IAC9B,GAAI,UAAW7qD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,uBAE1C,MAAMixB,EAASpyB,EAAIoyB,OACnB,IAAKA,EACH,MAAM,IAAIlhC,MAAM,SAAWmtD,EAAO,cAEpC,OAAOjsB,CACT,CAOAgD,kCACEipB,EACA1F,GAEA,MAAM1I,EAAO/yC,KAAKw4D,2BAChB,CAACrX,GACD1F,OACArnD,EACA,CACEskE,mBAAoB,aACpBtL,SAAS,IAIPtqD,EAAMxP,SADY0M,KAAKsvD,YAAY,oBAAqBvc,GAChC4a,IAC9B,GAAI,UAAW7qD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,iCAE1C,MAAMixB,EAASpyB,EAAIoyB,OACnB,IAAKA,EACH,MAAM,IAAIlhC,MAAM,mBAAqBmtD,EAAO,cAE9C,OAAOjsB,CACT,CAOAgD,8BACEkN,EACAqW,GAEA,MAAM1I,EAAO/yC,KAAKw4D,2BAA2B,CAACpzB,GAAYqW,GAEpD34C,EAAMxP,SADY0M,KAAKsvD,YAAY,0BAA2Bvc,GACtC6a,IAC9B,GAAI,UAAW9qD,EACb,MAAM,IAAI++C,GAAmB/+C,EAAImB,MAAO,6BAG1C,MAAMixB,EAASpyB,EAAIoyB,OACnB,IAAKA,EAAQ,OAAOA,EAEpB,MAAMxqB,EAAU,IAAIooC,GAAQ5d,EAAO2f,YAAYnqC,SACzCitC,EAAaziB,EAAO2f,YAAY8C,WACtC,MAAO,IACFziB,EACH2f,YAAa6C,GAAYoD,SAASpwC,EAASitC,GAE/C,CAOAzf,oCACEkN,EACAqW,GAEA,MAAM1I,EAAO/yC,KAAKw4D,2BAChB,CAACpzB,GACDqW,EACA,cAGI34C,EAAMxP,SADY0M,KAAKsvD,YAAY,0BAA2Bvc,GACtC8a,IAC9B,GAAI,UAAW/qD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,uCAGJ,OAAOnB,EAAIoyB,MACb,CAOAgD,qCACEyf,EACA8D,GAEA,MAAMsX,EAAQpb,EAAW5uB,KAAIqc,IAMpB,CACL4tB,WAAY,0BACZjgB,KAPW/yC,KAAKw4D,2BAChB,CAACpzB,GACDqW,EACA,kBAoBJ,aAZwBz7C,KAAKuvD,iBAAiBwD,IACxBhqC,KAAK0vC,IACzB,MAAM31D,EAAMxP,GAAOmlE,EAAW5K,IAC9B,GAAI,UAAW/qD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,wCAGJ,OAAOnB,EAAIoyB,MAAM,GAIrB,CAYAgD,uCACEgV,EACA8qB,EACAgB,GAEA,IAAIl9B,EAAe,CAAC,EAEhBm9B,QAA4Bj5D,KAAKk5D,yBACrC,OAAS,UAAWp9B,QAClBk8B,GACiB,GAAKA,EAAYiB,IAIlC,IACE,MAAMJ,QAAc74D,KAAKm5D,4BACvBnB,EACA,aAEEa,EAAMlhB,WAAWnlD,OAAS,IAC5BspC,EAAQs9B,MACNP,EAAMlhB,WAAWkhB,EAAMlhB,WAAWnlD,OAAS,GAAG+J,YAElD,MAAO8wC,GACP,GAAIA,aAAer5C,OAASq5C,EAAI3iC,QAAQ3E,SAAS,WAC/C,SAEA,MAAMsnC,CAEV,CAGF,IAAIgsB,QAA6Br5D,KAAKs5D,QAAQ,aAC9C,OAAS,WAAYx9B,QACnBk9B,EACcK,IAId,IACE,MAAMR,QAAc74D,KAAKm5D,4BAA4BH,GACjDH,EAAMlhB,WAAWnlD,OAAS,IAC5BspC,EAAQy9B,OACNV,EAAMlhB,WAAWkhB,EAAMlhB,WAAWnlD,OAAS,GAAG+J,YAElD,MAAO8wC,GACP,GAAIA,aAAer5C,OAASq5C,EAAI3iC,QAAQ3E,SAAS,WAC/C,SAEA,MAAMsnC,CAEV,CAOF,aAJqCrtC,KAAKw5D,kCACxCtsB,EACApR,IAE4B/S,KAAI0oC,GAAQA,EAAKrsB,WACjD,CAUAlN,wCACEgV,EACApR,EACA2f,GAEA,MAAM1I,EAAO/yC,KAAKw4D,2BAChB,CAACtrB,EAAQP,YACT8O,OACArnD,EACA0nC,GAMIh5B,EAAMxP,SAJY0M,KAAKsvD,YAC3B,oCACAvc,GAE4B6V,IAC9B,GAAI,UAAW9lD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,kDAGJ,OAAOnB,EAAIoyB,MACb,CAUAgD,8BACEgV,EACApR,EACA2f,GAEA,MAAM1I,EAAO/yC,KAAKw4D,2BAChB,CAACtrB,EAAQP,YACT8O,OACArnD,EACA0nC,GAGIh5B,EAAMxP,SADY0M,KAAKsvD,YAAY,0BAA2Bvc,GACtCgW,IAC9B,GAAI,UAAWjmD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACJ,wCAGJ,OAAOnB,EAAIoyB,MACb,CAEAgD,4BACEoa,EACAiI,GAEA,MAAM,QAAChf,EAAStgC,MAAOw+D,SAAqBz5D,KAAKw0D,yBAC/CliB,EACAiI,GAGF,IAAIt/C,EAAQ,KAQZ,OAPoB,OAAhBw+D,IACFx+D,EAAQ,IAAIioD,GAA0B,CACpCxrB,IAAK4a,EACL/rB,MAAO28B,GAA0BlX,YAAYytB,EAAYt6D,SAItD,CACLo8B,UACAtgC,QAEJ,CAKAi9B,yBACE6kB,EACAsH,GAEA,MAAM,QAAC9oB,EAAStgC,MAAOw+D,SAAqBz5D,KAAKw0D,yBAC/CzX,EACAsH,GAGF,IAAIppD,EAAQ,KAKZ,OAJoB,OAAhBw+D,IACFx+D,EAAQ2hD,GAAa8c,gBAAgBD,EAAYt6D,OAG5C,CACLo8B,UACAtgC,QAEJ,CAKAi9B,eACE6kB,EACAsH,GAEA,aAAarkD,KAAKs3D,mBAAmBva,EAAcsH,GAChD2P,MAAKrvD,GAAKA,EAAE1J,QACZg5D,OAAMz7D,IACL,MAAM,IAAIxE,MACR,mCACE+oD,EAAapQ,WACb,KACAn0C,EACH,GAEP,CAgBA0/B,qBACEzR,EACA63B,GAEA,MAIMx7C,EAAMxP,SAJY0M,KAAKsvD,YAAY,iBAAkB,CACzD7oC,EAAGkmB,WACH2R,IAE4BgQ,IAC9B,GAAI,UAAWxrD,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,cAAawiB,EAAGkmB,qBAGrB,OAAO7pC,EAAIoyB,MACb,CAKAgD,sCACEyhC,GAEA,IAAKA,EAAc,CAEjB,KAAO35D,KAAK8vD,yBACJ7T,GAAM,KAEd,MACM2d,EADiBC,KAAKC,MAAQ95D,KAAK+vD,eAAeE,WAjvKpB,IAmvKpC,GAA4C,OAAxCjwD,KAAK+vD,eAAeC,kBAA6B4J,EACnD,OAAO55D,KAAK+vD,eAAeC,eAE/B,CAEA,aAAahwD,KAAK+5D,mBACpB,CAKA7hC,0BACEl4B,KAAK8vD,mBAAoB,EACzB,IACE,MAAMkK,EAAYH,KAAKC,MACjBG,EAAwBj6D,KAAK+vD,eAAeC,gBAC5CkK,EAAkBD,EACpBA,EAAsB9hB,UACtB,KACJ,IAAK,IAAIvgD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMo4D,QAAwBhwD,KAAKm6D,mBAAmB,aAEtD,GAAID,IAAoBlK,EAAgB7X,UAOtC,OANAn4C,KAAK+vD,eAAiB,CACpBC,kBACAC,UAAW4J,KAAKC,MAChB5J,sBAAuB,GACvBC,oBAAqB,IAEhBH,QAIH/T,GAAMme,IACd,CAEA,MAAM,IAAIpmE,MACkC,0CAAA6lE,KAAKC,MAAQE,MAE3D,CAAE,QACAh6D,KAAK8vD,mBAAoB,CAC3B,CACF,CAKA53B,gCACEqiB,GAEA,MAAM,WAACkB,EAAYlB,OAAQ2Z,GAAa9P,GAA4B7J,GAC9DxH,EAAO/yC,KAAK8zD,WAAW,GAAIrY,EAAY,SAAUyY,GAEjDpxD,EAAMxP,SADY0M,KAAKsvD,YAAY,4BAA6Bvc,GACxC8R,GAAwBr4C,OACtD,GAAI,UAAW1J,EACb,MAAM,IAAI++C,GACR/+C,EAAImB,MACH,0CAGL,OAAOnB,EAAIoyB,MACb,CA2BAgD,0BACEmiC,EACAC,EACAC,GAEA,GAAI,YAAaF,EAAsB,CACrC,MACM1f,EADc0f,EACgBvuB,YAC9B0uB,EACJpoE,EAAAA,GAAAA,KAAYuoD,GAAiBp+C,SAAS,UACxC,GAAInE,MAAMC,QAAQiiE,SAAwClmE,IAApBmmE,EACpC,MAAM,IAAIvmE,MAAM,qBAGlB,MAAMumD,EAAc+f,GAAmB,CAAC,EACxC/f,EAAOx8C,SAAW,SACZ,eAAgBw8C,IACpBA,EAAOkB,WAAaz7C,KAAKy7C,YAG3B,MAAM1I,EAAO,CAACynB,EAAoBjgB,GAE5Bz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,sBAAuBvc,GAClC0T,IAC9B,GAAI,UAAW3jD,EACb,MAAM,IAAI9O,MAAM,mCAAqC8O,EAAImB,MAAMyG,SAEjE,OAAO5H,EAAIoyB,MACb,CAEA,IAAI2f,EACJ,GAAIwlB,aAAgC3iB,GAAa,CAC/C,IAAI+iB,EAA0BJ,EAC9BxlB,EAAc,IAAI6C,GAClB7C,EAAY+C,SAAW6iB,EAAW7iB,SAClC/C,EAAYrG,aAAe6rB,EAAqB7rB,aAChDqG,EAAYiD,UAAY2iB,EAAW3iB,UACnCjD,EAAY8C,WAAa8iB,EAAW9iB,UACtC,MACE9C,EAAc6C,GAAYoD,SAASuf,GAEnCxlB,EAAYmD,SAAWnD,EAAYoD,WAAQ7jD,EAG7C,QAAwBA,IAApBkmE,IAAkCliE,MAAMC,QAAQiiE,GAClD,MAAM,IAAItmE,MAAM,qBAGlB,MAAMqkD,EAAUiiB,EAChB,GAAIzlB,EAAYiD,WAAaO,EAC3BxD,EAAY/b,QAAQuf,OACf,CACL,IAAIshB,EAAe35D,KAAK6vD,yBACxB,OAAS,CACP,MAAMG,QAAwBhwD,KAAK06D,gCACjCf,GAKF,GAHA9kB,EAAYgD,qBAAuBmY,EAAgBnY,qBACnDhD,EAAY5B,gBAAkB+c,EAAgB7X,WAEzCE,EAAS,MAGd,GADAxD,EAAY/b,QAAQuf,IACfxD,EAAYzP,UACf,MAAM,IAAIpxC,MAAM,cAGlB,MAAMoxC,EAAYyP,EAAYzP,UAAU7oC,SAAS,UACjD,IACGyD,KAAK+vD,eAAeI,oBAAoBpqD,SAASq/B,KACjDplC,KAAK+vD,eAAeG,sBAAsBnqD,SAASq/B,GACpD,CAGAplC,KAAK+vD,eAAeI,oBAAoBt4D,KAAKutC,GAC7C,KACF,CAKEu0B,GAAe,CAEnB,CACF,CAEA,MAAMjvD,EAAUmqC,EAAYyE,WACtBxE,EAAWpqC,EAAQohC,YAEnB0uB,EADkB3lB,EAAY2F,WAAW1F,GACJv4C,SAAS,UAC9Cg+C,EAAc,CAClBx8C,SAAU,SACV09C,WAAYz7C,KAAKy7C,YAGnB,GAAI8e,EAAiB,CACnB,MAAMpoB,GACJ/5C,MAAMC,QAAQkiE,GACVA,EACA7vD,EAAQwpC,iBACZnrB,KAAI2O,GAAOA,EAAIiV,aAEjB4N,EAAiB,SAAI,CACnBx8C,SAAU,SACVo0C,YAEJ,CAEIkG,IACFkC,EAAOogB,WAAY,GAGrB,MAAM5nB,EAAO,CAACynB,EAAoBjgB,GAE5Bz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,sBAAuBvc,GAClC0T,IAC9B,GAAI,UAAW3jD,EAAK,CAClB,IAAI8+C,EACJ,GAAI,SAAU9+C,EAAImB,QAChB29C,EAAO9+C,EAAImB,MAAM9E,KAAKyiD,KAClBA,GAAQxpD,MAAMC,QAAQupD,IAAO,CAC/B,MAAMgZ,EAAc,SACdC,EAAWD,EAAchZ,EAAK5mB,KAAK4/B,GACzC52D,QAAQC,MAAMnB,EAAImB,MAAMyG,QAASmwD,EACnC,CAEF,MAAM,IAAIlZ,GACR,mCAAqC7+C,EAAImB,MAAMyG,QAC/Ck3C,EAEJ,CACA,OAAO9+C,EAAIoyB,MACb,CA2BAgD,sBACE2c,EACAimB,EACAh/B,GAEA,GAAI,YAAa+Y,EAAa,CAC5B,GAAIimB,GAAoB1iE,MAAMC,QAAQyiE,GACpC,MAAM,IAAI9mE,MAAM,qBAGlB,MAAM2mD,EAAkB9F,EAAY/I,YACpC,aAAa9rC,KAAK+6D,mBAAmBpgB,EAAiB7e,EACxD,CAEA,QAAyB1nC,IAArB0mE,IAAmC1iE,MAAMC,QAAQyiE,GACnD,MAAM,IAAI9mE,MAAM,qBAGlB,MAAMqkD,EAAUyiB,EAChB,GAAIjmB,EAAYiD,UACdjD,EAAY/b,QAAQuf,OACf,CACL,IAAIshB,EAAe35D,KAAK6vD,yBACxB,OAAS,CACP,MAAMG,QAAwBhwD,KAAK06D,gCACjCf,GAKF,GAHA9kB,EAAYgD,qBAAuBmY,EAAgBnY,qBACnDhD,EAAY5B,gBAAkB+c,EAAgB7X,UAC9CtD,EAAY/b,QAAQuf,IACfxD,EAAYzP,UACf,MAAM,IAAIpxC,MAAM,cAGlB,MAAMoxC,EAAYyP,EAAYzP,UAAU7oC,SAAS,UACjD,IAAKyD,KAAK+vD,eAAeG,sBAAsBnqD,SAASq/B,GAAY,CAGlEplC,KAAK+vD,eAAeG,sBAAsBr4D,KAAKutC,GAC/C,KACF,CAKEu0B,GAAe,CAEnB,CACF,CAEA,MAAMhf,EAAkB9F,EAAY/I,YACpC,aAAa9rC,KAAK+6D,mBAAmBpgB,EAAiB7e,EACxD,CAMA5D,yBACE8iC,EACAl/B,GAEA,MAAM0+B,EAAqB5qD,GAASorD,GAAgBz+D,SAAS,UAK7D,aAJqByD,KAAKi7D,uBACxBT,EACA1+B,EAGJ,CAMA5D,6BACEsiC,EACA1+B,GAEA,MAAMye,EAAc,CAACx8C,SAAU,UACzBw9C,EAAgBzf,GAAWA,EAAQyf,cACnCC,EACH1f,GAAWA,EAAQ0f,qBAAwBx7C,KAAKy7C,WAE/C3f,GAAiC,MAAtBA,EAAQ4f,aACrBnB,EAAOmB,WAAa5f,EAAQ4f,YAE1B5f,GAAqC,MAA1BA,EAAQoc,iBACrBqC,EAAOrC,eAAiBpc,EAAQoc,gBAE9BqD,IACFhB,EAAOgB,cAAgBA,GAErBC,IACFjB,EAAOiB,oBAAsBA,GAG/B,MAAMzI,EAAO,CAACynB,EAAoBjgB,GAE5Bz3C,EAAMxP,SADY0M,KAAKsvD,YAAY,kBAAmBvc,GAC9Bwb,IAC9B,GAAI,UAAWzrD,EAAK,CAClB,IAAI8+C,EAIJ,KAHI,SAAU9+C,EAAImB,QAChB29C,EAAO9+C,EAAImB,MAAM9E,KAAKyiD,MAElB,IAAID,GACR,+BAAiC7+C,EAAImB,MAAMyG,QAC3Ck3C,EAEJ,CACA,OAAO9+C,EAAIoyB,MACb,CAKAi+B,YACEnzD,KAAKyvD,wBAAyB,EAC9BzvD,KAAK0vD,uBAAyBwL,aAAY,KAExC,WACE,UACQl7D,KAAKwvD,cAAcvM,OAAO,QAEhC,MAAO,CACV,EALD,EAKI,GACH,KACHjjD,KAAKm7D,sBACP,CAKA/H,WAAW/lB,GACTrtC,KAAKyvD,wBAAyB,EAC9BzrD,QAAQC,MAAM,YAAaopC,EAAI3iC,QACjC,CAKA2oD,WAAWrpD,GACThK,KAAKyvD,wBAAyB,EAC9BzvD,KAAK4vD,yBACF5vD,KAAK4vD,wBAA0B,GAAK/8D,OAAOuoE,iBAC1Cp7D,KAAK2vD,2BACPoI,aAAa/3D,KAAK2vD,0BAClB3vD,KAAK2vD,yBAA2B,MAE9B3vD,KAAK0vD,yBACP2L,cAAcr7D,KAAK0vD,wBACnB1vD,KAAK0vD,uBAAyB,MAGnB,MAAT1lD,GAOJhK,KAAKwwD,6CAA+C,CAAC,EACrDn9D,OAAO+oC,QACLp8B,KAAKywD,sBACLlmB,SAAQ+wB,IAA0B,IAAxBt3C,EAAMilC,GAAaqS,EAC7Bt7D,KAAKu7D,iBAAiBv3C,EAAM,IACvBilC,EACH1iC,MAAO,WACP,KAZFvmB,KAAKm7D,sBAcT,CAKQI,iBACNv3C,EACAw3C,GAEA,MAAMC,EAAYz7D,KAAKywD,qBAAqBzsC,IAAOuC,MAEnD,GADAvmB,KAAKywD,qBAAqBzsC,GAAQw3C,EAC9BC,IAAcD,EAAiBj1C,MAAO,CACxC,MAAMm1C,EACJ17D,KAAKuwD,wCAAwCvsC,GAC3C03C,GACFA,EAAqBnxB,SAAQoxB,IAC3B,IACEA,EAAGH,EAAiBj1C,OAEpB,MAAO,IAGf,CACF,CAKQ8vC,2BACNuF,EACA5J,GACkC,IAAA6J,EAClC,MAAM73C,EACJhkB,KAAKswD,wCAAwCsL,GAC/C,GAAY,MAAR53C,EACF,MAAO,OAET,MAAM03C,GAAwBG,EAAA77D,KAAKuwD,yCACjCvsC,KAD4B63C,EAC5B73C,GACI,IAAIuY,KAEV,OADAm/B,EAAqB7oD,IAAIm/C,GAClB,KACL0J,EAAqBznC,OAAO+9B,GACM,IAA9B0J,EAAqBn8D,aAChBS,KAAKuwD,wCAAwCvsC,EACtD,CAEJ,CAKAkU,6BACE,GAAsD,IAAlD7kC,OAAO2qC,KAAKh+B,KAAKywD,sBAAsBj+D,OAiBzC,YAhBIwN,KAAKyvD,yBACPzvD,KAAKyvD,wBAAyB,EAC9BzvD,KAAK2vD,yBAA2BtT,YAAW,KACzCr8C,KAAK2vD,yBAA2B,KAChC,IACE3vD,KAAKwvD,cAAcsM,QACnB,MAAOzuB,GAEHA,aAAer5C,OACjBgQ,QAAQuuD,IACL,yCAAwCllB,EAAI3iC,UAGnD,IACC,OAWP,GANsC,OAAlC1K,KAAK2vD,2BACPoI,aAAa/3D,KAAK2vD,0BAClB3vD,KAAK2vD,yBAA2B,KAChC3vD,KAAKyvD,wBAAyB,IAG3BzvD,KAAKyvD,uBAER,YADAzvD,KAAKwvD,cAAcuM,UAIrB,MAAMC,EAA4Bh8D,KAAK4vD,wBACjCqM,EAAiCA,IAC9BD,IAA8Bh8D,KAAK4vD,8BAGtCzT,QAAQiE,IAKZ/sD,OAAO2qC,KAAKh+B,KAAKywD,sBAAsB1nC,KAAImP,UACzC,MAAM+wB,EAAejpD,KAAKywD,qBAAqBzsC,GAC/C,QAAqB5vB,IAAjB60D,EAIJ,OAAQA,EAAa1iC,OACnB,IAAK,UACL,IAAK,eACH,GAAoC,IAAhC0iC,EAAaiT,UAAU38D,KAqBzB,cAPOS,KAAKywD,qBAAqBzsC,GACN,iBAAvBilC,EAAa1iC,cACRvmB,KAAKwwD,6CACVvH,EAAakT,iCAGXn8D,KAAKm7D,4BAGP,WACJ,MAAM,KAACpoB,EAAI,OAAEkf,GAAUhJ,EACvB,IACEjpD,KAAKu7D,iBAAiBv3C,EAAM,IACvBilC,EACH1iC,MAAO,gBAET,MAAM41C,QACGn8D,KAAKwvD,cAAcr1D,KAAK83D,EAAQlf,GACzC/yC,KAAKu7D,iBAAiBv3C,EAAM,IACvBilC,EACHkT,uBACA51C,MAAO,eAETvmB,KAAKwwD,6CACH2L,GACElT,EAAaiT,gBACXl8D,KAAKm7D,uBACX,MAAO3iE,GAQP,GAPIA,aAAaxE,OACfgQ,QAAQC,MACL,GAAEguD,uBACHlf,EACAv6C,EAAEkS,UAGDuxD,IACH,OAGFj8D,KAAKu7D,iBAAiBv3C,EAAM,IACvBilC,EACH1iC,MAAO,kBAEHvmB,KAAKm7D,sBACb,CACD,EApCK,GAqCN,MACF,IAAK,aACiC,IAAhClS,EAAaiT,UAAU38D,WAInB,WACJ,MAAM,qBAAC48D,EAAoB,kBAAEC,GAAqBnT,EAClD,GACEjpD,KAAK0wD,gCAAgC1c,IAAImoB,GAWzCn8D,KAAK0wD,gCAAgCz8B,OACnCkoC,OAEG,CACLn8D,KAAKu7D,iBAAiBv3C,EAAM,IACvBilC,EACH1iC,MAAO,kBAETvmB,KAAKu7D,iBAAiBv3C,EAAM,IACvBilC,EACH1iC,MAAO,kBAET,UACQvmB,KAAKwvD,cAAcr1D,KAAKiiE,EAAmB,CAC/CD,IAEF,MAAO3jE,GAIP,GAHIA,aAAaxE,OACfgQ,QAAQC,MAAS,GAAAm4D,WAA4B5jE,EAAEkS,UAE5CuxD,IACH,OAQF,OALAj8D,KAAKu7D,iBAAiBv3C,EAAM,IACvBilC,EACH1iC,MAAO,0BAEHvmB,KAAKm7D,sBAEb,CACF,CACAn7D,KAAKu7D,iBAAiBv3C,EAAM,IACvBilC,EACH1iC,MAAO,uBAEHvmB,KAAKm7D,sBACZ,EAnDK,GAqDR,IAOV,CAKQkB,0BAGNF,EACAG,GAEA,MAAMJ,EACJl8D,KAAKwwD,6CAA6C2L,QAClC/nE,IAAd8nE,GAGJA,EAAU3xB,SAAQoxB,IAChB,IACEA,KAKKW,GAEL,MAAO9jE,GACPwL,QAAQC,MAAMzL,EAChB,IAEJ,CAKA86D,yBAAyBiJ,GACvB,MAAM,OAACrnC,EAAM,aAAE+zB,GAAgB31D,GAC7BipE,EACAvT,IAEFhpD,KAAKq8D,0BAAiDpT,EAAc,CAClE/zB,EAAOj6B,MACPi6B,EAAOqG,SAEX,CAKQihC,kBACNC,EAyBA1pB,GAEA,MAAM6oB,EAAuB57D,KAAKowD,4BAC5BpsC,EAAO04C,GACX,CAACD,EAAmBxK,OAAQlf,IAGxB4pB,EAAuB38D,KAAKywD,qBAAqBzsC,GA4BvD,YA3B6B5vB,IAAzBuoE,EACF38D,KAAKywD,qBAAqBzsC,GAAQ,IAC7By4C,EACH1pB,OACAmpB,UAAW,IAAI3/B,IAAI,CAACkgC,EAAmBzK,WACvCzrC,MAAO,WAGTo2C,EAAqBT,UAAUrpD,IAAI4pD,EAAmBzK,UAExDhyD,KAAKswD,wCAAwCsL,GAAwB53C,EACrEhkB,KAAKqwD,oDACHuL,GACE1jC,iBACKl4B,KAAKqwD,oDACVuL,UAEK57D,KAAKswD,wCAAwCsL,GACpD,MAAM3S,EAAejpD,KAAKywD,qBAAqBzsC,GAC/C/X,QACmB7X,IAAjB60D,EAC4E,4EAAA2S,KAE9E3S,EAAaiT,UAAUjoC,OAAOwoC,EAAmBzK,gBAC3ChyD,KAAKm7D,sBAAsB,EAEnCn7D,KAAKm7D,uBACES,CACT,CAUAgB,gBACErkC,EACAy5B,EACAvW,GAEA,MAAM1I,EAAO/yC,KAAK8zD,WAChB,CAACv7B,EAAUoU,YACX8O,GAAcz7C,KAAKkvD,aAAe,YAClC,UAEF,OAAOlvD,KAAKw8D,kBACV,CACExK,WACAC,OAAQ,mBACRmK,kBAAmB,sBAErBrpB,EAEJ,CAOA7a,kCACE0jC,SAEM57D,KAAK68D,+BACTjB,EACA,iBAEJ,CAKArI,gCAAgCgJ,GAC9B,MAAM,OAACrnC,EAAM,aAAE+zB,GAAgB31D,GAC7BipE,EACApT,IAEFnpD,KAAKq8D,0BAAwDpT,EAAc,CACzE,CACE6T,UAAW5nC,EAAOj6B,MAAMg0C,OACxBwqB,YAAavkC,EAAOj6B,MAAMk4C,SAE5Bje,EAAOqG,SAEX,CAYAwhC,uBACEjwB,EACAklB,EACAvW,EACAuhB,GAEA,MAAMjqB,EAAO/yC,KAAK8zD,WAChB,CAAChnB,EAAUH,YACX8O,GAAcz7C,KAAKkvD,aAAe,YAClC,SACA8N,EAAU,CAACA,QAASA,QAAW5oE,GAEjC,OAAO4L,KAAKw8D,kBACV,CACExK,WACAC,OAAQ,mBACRmK,kBAAmB,sBAErBrpB,EAEJ,CAOA7a,yCACE0jC,SAEM57D,KAAK68D,+BACTjB,EACA,yBAEJ,CAKAqB,OACEnsB,EACAkhB,EACAvW,GAEA,MAAM1I,EAAO/yC,KAAK8zD,WAChB,CAAmB,kBAAXhjB,EAAsB,CAACosB,SAAU,CAACpsB,EAAOv0C,aAAeu0C,GAChE2K,GAAcz7C,KAAKkvD,aAAe,aAEpC,OAAOlvD,KAAKw8D,kBACV,CACExK,WACAC,OAAQ,gBACRmK,kBAAmB,mBAErBrpB,EAEJ,CAOA7a,2BACE0jC,SAEM57D,KAAK68D,+BAA+BjB,EAAsB,OAClE,CAKAhI,sBAAsB2I,GACpB,MAAM,OAACrnC,EAAM,aAAE+zB,GAAgB31D,GAAOipE,EAAc9N,IACpDzuD,KAAKq8D,0BAAwCpT,EAAc,CACzD/zB,EAAOj6B,MACPi6B,EAAOqG,SAEX,CAKAi4B,sBAAsB+I,GACpB,MAAM,OAACrnC,EAAM,aAAE+zB,GAAgB31D,GAAOipE,EAAchT,IACpDvpD,KAAKq8D,0BAA8CpT,EAAc,CAAC/zB,GACpE,CAQAioC,aAAanL,GACX,OAAOhyD,KAAKw8D,kBACV,CACExK,WACAC,OAAQ,gBACRmK,kBAAmB,mBAErB,GAEJ,CAOAlkC,+BACE0jC,SAEM57D,KAAK68D,+BACTjB,EACA,cAEJ,CAKAnI,6BAA6B8I,GAC3B,MAAM,OAACrnC,EAAM,aAAE+zB,GAAgB31D,GAC7BipE,EACAxS,IAEF/pD,KAAKq8D,0BAA8CpT,EAAc,CAAC/zB,GACpE,CASAkoC,aAAapL,GACX,OAAOhyD,KAAKw8D,kBACV,CACExK,WACAC,OAAQ,wBACRmK,kBAAmB,2BAErB,GAEJ,CAOAlkC,+BACE0jC,SAEM57D,KAAK68D,+BACTjB,EACA,cAEJ,CAMA,qCACEA,EACAyB,GAEA,MAAMC,EACJt9D,KAAKqwD,oDACHuL,GAEA0B,QACIA,IAENt5D,QAAQy0C,KAEH,wEAAImjB,YAA+ByB,gCAI5C,CAEAvJ,WACE/gB,EACAwqB,EACAx/D,EACA66D,GAEA,MAAMnd,EAAa8hB,GAAYv9D,KAAKkvD,YACpC,GAAIzT,GAAc19C,GAAY66D,EAAO,CACnC,IAAI98B,EAAe,CAAC,EAChB/9B,IACF+9B,EAAQ/9B,SAAWA,GAEjB09C,IACF3f,EAAQ2f,WAAaA,GAEnBmd,IACF98B,EAAUzoC,OAAOG,OAAOsoC,EAAS88B,IAEnC7lB,EAAKl7C,KAAKikC,EACZ,CACA,OAAOiX,CACT,CAKAylB,2BACEzlB,EACAwqB,EACAx/D,EACA66D,GAEA,MAAMnd,EAAa8hB,GAAYv9D,KAAKkvD,YACpC,GAAIzT,IAAe,CAAC,YAAa,aAAa11C,SAAS01C,GACrD,MAAM,IAAIznD,MACR,8CACEgM,KAAKkvD,YACL,+CAGN,OAAOlvD,KAAK8zD,WAAW/gB,EAAMwqB,EAAUx/D,EAAU66D,EACnD,CAKAlF,2BAA2B6I,GACzB,MAAM,OAACrnC,EAAM,aAAE+zB,GAAgB31D,GAC7BipE,EACAvS,IAEmB,sBAAjB90B,EAAOj6B,OAcT+E,KAAK0wD,gCAAgC79C,IAAIo2C,GAE3CjpD,KAAKq8D,0BACHpT,EACiB,sBAAjB/zB,EAAOj6B,MACH,CAAC,CAACiE,KAAM,YAAag2B,EAAOqG,SAC5B,CAAC,CAACr8B,KAAM,SAAUg2B,OAAQA,EAAOj6B,OAAQi6B,EAAOqG,SAExD,CAUAy6B,YACE5wB,EACA4sB,EACAvW,GAEA,MAAM1I,EAAO/yC,KAAK8zD,WAChB,CAAC1uB,GACDqW,GAAcz7C,KAAKkvD,aAAe,aAE9B0M,EAAuB57D,KAAKw8D,kBAChC,CACExK,SAAUA,CAACuK,EAAchhC,KACvB,GAA0B,WAAtBghC,EAAar9D,KAAmB,CAClC8yD,EAASuK,EAAarnC,OAAQqG,GAG9B,IACEv7B,KAAK81D,wBAAwB8F,GAE7B,MAAO4B,GACP,CAEJ,GAEFvL,OAAQ,qBACRmK,kBAAmB,wBAErBrpB,GAEF,OAAO6oB,CACT,CAYA6B,uBACEr4B,EACA4sB,EACAl2B,GAEA,MAAM,WAAC2f,KAAemd,GAAS,IAC1B98B,EACH2f,WACG3f,GAAWA,EAAQ2f,YAAez7C,KAAKkvD,aAAe,aAErDnc,EAAO/yC,KAAK8zD,WAChB,CAAC1uB,GACDqW,OACArnD,EACAwkE,GAEIgD,EAAuB57D,KAAKw8D,kBAChC,CACExK,SAAUA,CAACuK,EAAchhC,KACvBy2B,EAASuK,EAAchhC,GAGvB,IACEv7B,KAAK81D,wBAAwB8F,GAE7B,MAAO4B,GACP,GAGJvL,OAAQ,qBACRmK,kBAAmB,wBAErBrpB,GAEF,OAAO6oB,CACT,CAOA1jC,8BACE0jC,SAEM57D,KAAK68D,+BACTjB,EACA,mBAEJ,CAKAjI,sBAAsB4I,GACpB,MAAM,OAACrnC,EAAM,aAAE+zB,GAAgB31D,GAAOipE,EAActS,IACpDjqD,KAAKq8D,0BAA8CpT,EAAc,CAAC/zB,GACpE,CAQAwoC,aAAa1L,GACX,OAAOhyD,KAAKw8D,kBACV,CACExK,WACAC,OAAQ,gBACRmK,kBAAmB,mBAErB,GAEJ,CAOAlkC,+BACE0jC,SAEM57D,KAAK68D,+BACTjB,EACA,cAEJ,EC1/MK,MAAM+B,GASXjrE,YAAYkrE,GAA0B,KAR9BC,cAAQ,EASd79D,KAAK69D,SAAWD,GAAWnyB,IAC7B,CAKAnf,kBACE,OAAO,IAAIqxC,GAAQlyB,KACrB,CAcAnf,qBACEqf,EACA7P,GAEA,GAA6B,KAAzB6P,EAAU1tC,WACZ,MAAM,IAAIjK,MAAM,uBAElB,MAAMukC,EAAYoT,EAAUvvC,MAAM,GAAI,IACtC,IAAK0/B,IAAYA,EAAQgiC,eAAgB,CACvC,MAAMpyB,EAAgBC,EAAUvvC,MAAM,EAAG,IACnC2hE,EAAoBllC,GAAa6S,GACvC,IAAK,IAAIsyB,EAAK,EAAGA,EAAK,GAAIA,IACxB,GAAIzlC,EAAUylC,KAAQD,EAAkBC,GACtC,MAAM,IAAIhqE,MAAM,gCAGtB,CACA,OAAO,IAAI2pE,GAAQ,CAACplC,YAAWoT,aACjC,CAOArf,gBAAgBic,GACd,MAAMhQ,EAAYM,GAAa0P,GACzBoD,EAAY,IAAI15C,WAAW,IAGjC,OAFA05C,EAAU3mC,IAAIujC,GACdoD,EAAU3mC,IAAIuzB,EAAW,IAClB,IAAIolC,GAAQ,CAACplC,YAAWoT,aACjC,CAKIpT,gBACF,OAAO,IAAI+T,GAAUtsC,KAAK69D,SAAStlC,UACrC,CAKIoT,gBACF,OAAO,IAAI15C,WAAW+N,KAAK69D,SAASlyB,UACtC,QCLWsyB,GAAmC5qE,OAAOq4B,OAAO,CAC5DwyC,kBAAmB,CACjB/wD,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CACAA,GAAAA,GAAiB,eACjBpmB,GAAiB,cACjBomB,GAAAA,GAAgB,eAGpBivB,kBAAmB,CACjBhxD,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAiB,kBAEtBkvB,kBAAmB,CACjBjxD,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CACAA,GAAAA,GAAiB,eACjBpmB,KACAomB,GAAAA,GACE3W,KACA2W,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,gBAINmvB,sBAAuB,CACrBlxD,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAiB,kBAEtBovB,iBAAkB,CAChBnxD,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAiB,oBAuIjB,MAAMqvB,GAIX7rE,cAAe,CAMf45B,yBAAyB+xB,GACvB,MAAOmgB,EAAoBC,GAAYnyB,GAAUgB,uBAC/C,CAAC+Q,EAAO0F,UAAUn0C,YAAYytC,EAAAA,GAAAA,IAAWz2C,OAAOy3C,EAAOqgB,YAAa,IACpE1+D,KAAK8sC,WAID3tC,EAAOm9C,GADA2hB,GAAiCC,kBAChB,CAC5BQ,WAAY93D,OAAOy3C,EAAOqgB,YAC1BD,SAAUA,IAGNzgC,EAAO,CACX,CACEiR,OAAQuvB,EACRnuB,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQoP,EAAO0F,UACf1T,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQoP,EAAOpO,MACfI,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQmP,GAActR,UACtBuD,UAAU,EACVC,YAAY,IAIhB,MAAO,CACL,IAAIkH,GAAuB,CACzB1K,UAAW9sC,KAAK8sC,UAChB9O,KAAMA,EACN7+B,KAAMA,IAERq/D,EAEJ,CAEAlyC,yBAAyB+xB,GACvB,MACMl/C,EAAOm9C,GADA2hB,GAAiCE,mBAGxCngC,EAAO,CACX,CACEiR,OAAQoP,EAAOtM,YACf1B,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQoP,EAAO0F,UACf1T,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIkH,GAAuB,CAChC1K,UAAW9sC,KAAK8sC,UAChB9O,KAAMA,EACN7+B,KAAMA,GAEV,CAEAmtB,yBAAyB+xB,GACvB,MACMl/C,EAAOm9C,GADA2hB,GAAiCG,kBAChB,CAC5BjsB,UAAWkM,EAAOlM,UAAUppB,KAAI41C,GAAQA,EAAK75C,cAGzCkZ,EAAO,CACX,CACEiR,OAAQoP,EAAOtM,YACf1B,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQoP,EAAO0F,UACf1T,UAAU,EACVC,YAAY,IAmBhB,OAfI+N,EAAOpO,OACTjS,EAAKnmC,KACH,CACEo3C,OAAQoP,EAAOpO,MACfI,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQmP,GAActR,UACtBuD,UAAU,EACVC,YAAY,IAKX,IAAIkH,GAAuB,CAChC1K,UAAW9sC,KAAK8sC,UAChB9O,KAAMA,EACN7+B,KAAMA,GAEV,CAEAmtB,6BAA6B+xB,GAC3B,MACMl/C,EAAOm9C,GADA2hB,GAAiCI,uBAGxCrgC,EAAO,CACX,CACEiR,OAAQoP,EAAOtM,YACf1B,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQoP,EAAO0F,UACf1T,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIkH,GAAuB,CAChC1K,UAAW9sC,KAAK8sC,UAChB9O,KAAMA,EACN7+B,KAAMA,GAEV,CAEAmtB,wBAAwB+xB,GACtB,MACMl/C,EAAOm9C,GADA2hB,GAAiCK,kBAGxCtgC,EAAO,CACX,CACEiR,OAAQoP,EAAOtM,YACf1B,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQoP,EAAO0F,UACf1T,UAAU,EACVC,YAAY,GAEd,CACErB,OAAQoP,EAAOugB,UACfvuB,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIkH,GAAuB,CAChC1K,UAAW9sC,KAAK8sC,UAChB9O,KAAMA,EACN7+B,KAAMA,GAEV,EA3KWo/D,GAMJzxB,UAAuB,IAAIR,GAChC,qDC1FSuyB,GAAqCxrE,OAAOq4B,OAItD,CACDozC,aAAc,CACZ3xD,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CACAA,GAAAA,GAAgB,eAChBA,GAAAA,GAAiB,SACjBA,GAAAA,GAAiB,oBAGrB6vB,iBAAkB,CAChB5xD,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAgB,eAAgBA,GAAAA,GAAiB,YAEtD8vB,oBAAqB,CACnB7xD,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAgB,eAAgBA,GAAAA,GAAiB,YAEtD+vB,oBAAqB,CACnB9xD,MAAO,EACPvY,OAAQs6C,GAAAA,GAEN,CAACA,GAAAA,GAAgB,eAAgBpmB,GAAI,sBAOpC,MAAMo2C,GAIXxsE,cAAe,CAYf45B,oBAAoB+xB,GAClB,MACMl/C,EAAOm9C,GADAuiB,GAAmCC,aAClBzgB,GAC9B,OAAO,IAAI7G,GAAuB,CAChCxZ,KAAM,GACN8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAEAmtB,wBACE+xB,GAEA,MACMl/C,EAAOm9C,GADAuiB,GAAmCE,iBAClB1gB,GAC9B,OAAO,IAAI7G,GAAuB,CAChCxZ,KAAM,GACN8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAEAmtB,2BACE+xB,GAEA,MACMl/C,EAAOm9C,GADAuiB,GAAmCG,oBAClB3gB,GAC9B,OAAO,IAAI7G,GAAuB,CAChCxZ,KAAM,GACN8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAEAmtB,2BACE+xB,GAEA,MACMl/C,EAAOm9C,GADAuiB,GAAmCI,oBAClB,CAC5BE,cAAev4D,OAAOy3C,EAAO8gB,iBAE/B,OAAO,IAAI3nB,GAAuB,CAChCxZ,KAAM,GACN8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,EA9DW+/D,GASJpyB,UAAuB,IAAIR,GAChC,+CC1NJ,MAuBM8yB,GAA6BlwB,GAAAA,GAYjC,CACAA,GAAAA,GAAgB,iBAChBA,GAAAA,GAAgB,WAChBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAiB,6BACjBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAiB,6BACjBA,GAAAA,GAAiB,qBACjBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAiB,6BAGZ,MAAMmwB,GAIX3sE,cAAe,CAcf45B,sCACE+xB,GAEA,MAAM,UAAC9lB,EAAS,QAAE7tB,EAAO,UAAE06B,EAAS,iBAAEk6B,GAAoBjhB,EAE1DpyC,GArEqB,KAsEnBssB,EAAU/lC,OACY,4CAAuC+lC,EAAU/lC,gBAGzEyZ,GAzEoB,KA0ElBm5B,EAAU5yC,OACW,2CAAsC4yC,EAAU5yC,gBAGvE,MAAM+sE,EAAkBH,GAA2BzsE,KAC7C6sE,EAAkBD,EAAkBhnC,EAAU/lC,OAC9CitE,EAAoBD,EAAkBp6B,EAAU5yC,OAGhD2sD,EAAkB/sD,EAAAA,GAAAA,MAAaqtE,EAAoB/0D,EAAQlY,QAE3D2a,EACgB,MAApBmyD,EACI,MACAA,EAqBN,OAnBAF,GAA2B3qE,OACzB,CACEirE,cAXkB,EAYlBtwD,QAAS,EACTowD,kBACAG,0BAA2BxyD,EAC3BoyD,kBACAK,0BAA2BzyD,EAC3BsyD,oBACAI,gBAAiBn1D,EAAQlY,OACzBstE,wBAAyB3yD,GAE3BgyC,GAGFA,EAAgB76C,KAAKi0B,EAAWgnC,GAChCpgB,EAAgB76C,KAAK8gC,EAAWo6B,GAChCrgB,EAAgB76C,KAAKoG,EAAS+0D,GAEvB,IAAIjoB,GAAuB,CAChCxZ,KAAM,GACN8O,UAAWuyB,GAAevyB,UAC1B3tC,KAAMggD,GAEV,CAMA7yB,uCACE+xB,GAEA,MAAM,WAAC9pB,EAAU,QAAE7pB,EAAO,iBAAE40D,GAAoBjhB,EAEhDpyC,GA/HsB,KAgIpBsoB,EAAW/hC,OACY,6CAAwC+hC,EAAW/hC,gBAG5E,IACE,MAAMorE,EAAUD,GAAQoC,cAAcxrC,GAChCgE,EAAYqlC,EAAQrlC,UAAUzT,UAC9BsgB,EAAYtM,GAAKpuB,EAASkzD,EAAQjyB,WAExC,OAAO3rC,KAAKggE,+BAA+B,CACzCznC,YACA7tB,UACA06B,YACAk6B,qBAEF,MAAOr7D,GACP,MAAM,IAAIjQ,MAAqC,+BAAAiQ,IACjD,CACF,EAnGWo7D,GASJvyB,UAAuB,IAAIR,GAChC,+CC5DJ2zB,GAAAA,eAAiC,SAACvoC,GAChC,MAAM3b,EAAI+kB,GAAKxtC,OAAOonC,GAAQhD,GAAI,QAAAwT,EAAA/2C,UAAA3B,OADkB0tE,EAAkB,IAAA9nE,MAAA8yC,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAlB+0B,EAAkB/0B,EAAA,GAAAh3C,UAAAg3C,GAGtE,OADA+0B,EAAK31B,SAAQr/B,GAAO6Q,EAAEsJ,OAAOna,KACtB6Q,EAAEuJ,QACX,EAEO,MAAM66C,GAAYA,CACvBh7B,EACAi7B,IvC03BF,SAAkBj7B,EAASi7B,GAAoB,IAAX7/B,EAAIpsC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxC,MAAM,KAAEo0C,EAAI,EAAE9nC,EAAC,EAAEkrB,GAAM0d,GAAYlE,EAASi7B,EAAS7/B,EAAK+I,cACpD+2B,EAAO,IAAIz4B,GAAS/F,GAASD,IAEnC,IAAItJ,EACJ,IAFA+nC,EAAK73B,WAAWD,KAEPjQ,EAAMqQ,GAAS03B,EAAK33B,eAAgBjoC,EAAGkrB,EAAG4U,EAAKsJ,aACpDw2B,EAAK73B,aACT,OAAOiB,GAAYnR,EAAKiI,EAC5B,CuCj4BK0/B,CAAmB96B,EAASi7B,EAAS,CAACz2B,KAAK,EAAOC,WAAW,IACjCq2B,GAAAA,kBAC1B,MAAMK,GvC+yBN,SAAsB/rC,GAAkC,IAAtBqR,EAAYzxC,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,IAAAA,UAAA,GACjD,OAAOo4B,GAAMg0C,eAAehsC,GAAYnB,WAAWwS,EACvD,EwCpxBM46B,GAA+BtxB,GAAAA,GAcnC,CACAA,GAAAA,GAAgB,iBAChBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAgB,6BAChBA,GAAAA,GAAiB,oBACjBA,GAAAA,GAAgB,8BAChBA,GAAAA,GAAiB,qBACjBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAgB,2BAChBA,GAAAA,GAAkB,GAAI,cACtBA,GAAAA,GAAkB,GAAI,aACtBA,GAAAA,GAAgB,gBAGX,MAAMuxB,GAIX/tE,cAAe,CAaf45B,6BACEiM,GAEAtsB,GAlFqB,KAmFnBssB,EAAU/lC,OACY,4CAAuC+lC,EAAU/lC,gBAGzE,IACE,OAAOJ,EAAAA,GAAAA,KAAYguC,GAAWxwB,GAAS2oB,KAAan8B,OAzF3B,IA4FzB,MAAO6H,GACP,MAAM,IAAIjQ,MAA8C,wCAAAiQ,IAC1D,CACF,CAMAqoB,sCACE+xB,GAEA,MAAM,UAAC9lB,EAAS,QAAE7tB,EAAO,UAAE06B,EAAS,WAAEs7B,EAAU,iBAAEpB,GAChDjhB,EACF,OAAOoiB,GAAiBE,gCAAgC,CACtDC,WAAYH,GAAiBI,sBAAsBtoC,GACnD7tB,UACA06B,YACAs7B,aACApB,oBAEJ,CAMAhzC,uCACE+xB,GAEA,MACEuiB,WAAYE,EAAU,QACtBp2D,EAAO,UACP06B,EAAS,WACTs7B,EAAU,iBACVpB,EAAmB,GACjBjhB,EAEJ,IAAIuiB,EAGAA,EAFsB,kBAAfE,EACLA,EAAW1P,WAAW,MACXh/D,EAAAA,GAAAA,KAAY0uE,EAAWh/D,OAAO,GAAI,OAElC1P,EAAAA,GAAAA,KAAY0uE,EAAY,OAG1BA,EAGf70D,GA7I2B,KA8IzB20D,EAAWpuE,OACQ,yCAA6CouE,EAAWpuE,gBAG7E,MAEMgtE,EAFY,GAEkBoB,EAAWpuE,OACzCitE,EAAoBD,EAAkBp6B,EAAU5yC,OAAS,EAGzD2sD,EAAkB/sD,EAAAA,GAAAA,MACtBouE,GAA6B7tE,KAAO+X,EAAQlY,QAsB9C,OAnBAguE,GAA6B/rE,OAC3B,CACEirE,cARkB,EASlBF,kBACAG,0BAA2BL,EAC3ByB,iBAfc,GAgBdC,2BAA4B1B,EAC5BG,oBACAI,gBAAiBn1D,EAAQlY,OACzBstE,wBAAyBR,EACzBl6B,UAAWx1B,GAASw1B,GACpBw7B,WAAYhxD,GAASgxD,GACrBF,cAEFvhB,GAGFA,EAAgB76C,KAAKsL,GAASlF,GAAU81D,GAA6B7tE,MAE9D,IAAI6kD,GAAuB,CAChCxZ,KAAM,GACN8O,UAAW2zB,GAAiB3zB,UAC5B3tC,KAAMggD,GAEV,CAMA7yB,uCACE+xB,GAEA,MAAO9pB,WAAY0sC,EAAI,QAAEv2D,EAAO,iBAAE40D,GAAoBjhB,EAEtDpyC,GAhMsB,KAiMpBg1D,EAAKzuE,OACkB,6CAAwCyuE,EAAKzuE,gBAGtE,IACE,MAAM+hC,EAAa3kB,GAASqxD,GACtB1oC,EAAY+nC,GAChB/rC,GACA,GACAn4B,MAAM,GACF8kE,EAAc9uE,EAAAA,GAAAA,KAAYguC,GAAWxwB,GAASlF,MAC7C06B,EAAWs7B,GAAcP,GAAUe,EAAa3sC,GAEvD,OAAOv0B,KAAKggE,+BAA+B,CACzCznC,YACA7tB,UACA06B,YACAs7B,aACApB,qBAEF,MAAOr7D,GACP,MAAM,IAAIjQ,MAAqC,+BAAAiQ,IACjD,CACF,EAxJWw8D,GASJ3zB,UAAuB,IAAIR,GAChC,qDC7DS60B,GAAkB,IAAI70B,GACjC,+CA+BK,MAAM80B,GAWX1uE,YAAY2uE,EAAuBhgB,EAAeigB,GAAsB,KATxED,mBAAa,OAEbhgB,WAAK,OAELigB,eAAS,EAMPthE,KAAKqhE,cAAgBA,EACrBrhE,KAAKqhD,MAAQA,EACbrhD,KAAKshE,UAAYA,CACnB,EAfWF,GAoBJ5zB,QAAkB,IAAI4zB,GAAO,EAAG,EAAG90B,GAAUkB,eAqazC+zB,GAA4BluE,OAAOq4B,OAI7C,CACD81C,WAAY,CACVr0D,MAAO,EACPvY,OAAQs6C,GAAAA,GAA6D,CACnEA,GAAAA,GAAiB,ehC1ZG,WAAqC,IAApCt8C,EAAgBuB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,aAC5C,OAAO+6C,GAAAA,GAKL,CAAC3W,GAAU,UAAWA,GAAU,eAAgB3lC,EACpD,CgCoZMssD,GhC/YgB,WAAiC,IAAhCtsD,EAAgBuB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,SACxC,OAAO+6C,GAAAA,GAOL,CACEA,GAAAA,GAAkB,iBAClBA,GAAAA,GAAkB,SAClB3W,GAAU,cAEZ3lC,EAEJ,CgCiYM6uE,MAGJC,UAAW,CACTv0D,MAAO,EACPvY,OAAQs6C,GAAAA,GAA4D,CAClEA,GAAAA,GAAiB,eACjB3W,GAAiB,iBACjB2W,GAAAA,GAAiB,6BAGrByyB,SAAU,CACRx0D,MAAO,EACPvY,OAAQs6C,GAAAA,GAA2D,CACjEA,GAAAA,GAAiB,kBAGrB0yB,MAAO,CACLz0D,MAAO,EACPvY,OAAQs6C,GAAAA,GAAwD,CAC9DA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,eAGtB2yB,SAAU,CACR10D,MAAO,EACPvY,OAAQs6C,GAAAA,GAA2D,CACjEA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,eAGtB4yB,WAAY,CACV30D,MAAO,EACPvY,OAAQs6C,GAAAA,GAA6D,CACnEA,GAAAA,GAAiB,kBAGrB6yB,MAAO,CACL50D,MAAO,EACPvY,OAAQs6C,GAAAA,GAAwD,CAC9DA,GAAAA,GAAiB,kBAGrB8yB,kBAAmB,CACjB70D,MAAO,EACPvY,OAAQs6C,GAAAA,GACN,CACEA,GAAAA,GAAiB,eACjB3W,GAAiB,iBACjB2W,GAAAA,GAAiB,0BACjBC,GAAkB,iBAClB5W,GAAiB,uBAiBellC,OAAOq4B,OAAO,CACpDu2C,OAAQ,CACN90D,MAAO,GAET+0D,WAAY,CACV/0D,MAAO,KAOJ,MAAMg1D,GAIXzvE,cAAe,CAqBf45B,kBAAkB+xB,GAChB,MAAM,YAAC+jB,EAAW,WAAEljB,EAAYuiB,OAAQY,GAAehkB,EACjDojB,EAAiBY,GAAejB,GAAO5zB,QAEvCruC,EAAOm9C,GADAilB,GAA0BC,WACT,CAC5BtiB,WAAY,CACVojB,OAAQ1yD,GAASsvC,EAAWojB,OAAO1yD,YACnC2yD,WAAY3yD,GAASsvC,EAAWqjB,WAAW3yD,aAE7C6xD,OAAQ,CACNJ,cAAeI,EAAOJ,cACtBhgB,MAAOogB,EAAOpgB,MACdigB,UAAW1xD,GAAS6xD,EAAOH,UAAU1xD,eAGnCuvC,EAAkB,CACtBnhB,KAAM,CACJ,CAACiR,OAAQmzB,EAAa/xB,UAAU,EAAOC,YAAY,GACnD,CAACrB,OAAQkM,GAAoB9K,UAAU,EAAOC,YAAY,IAE5DxD,UAAW9sC,KAAK8sC,UAChB3tC,QAEF,OAAO,IAAIq4C,GAAuB2H,EACpC,CAMA7yB,6BACE+xB,GAEA,MAAMxJ,EAAc,IAAI6C,GACxB7C,EAAYhiC,IACVurC,GAAcS,sBAAsB,CAClCL,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAO+jB,YACzB1jB,WAAYL,EAAOK,WACnBnW,KAAM8V,EAAO9V,KACb+V,SAAUD,EAAOC,SACjBC,MAAOv+C,KAAKu+C,MACZzR,UAAW9sC,KAAK8sC,aAIpB,MAAM,YAACs1B,EAAW,WAAEljB,EAAU,OAAEuiB,GAAUpjB,EAC1C,OAAOxJ,EAAYhiC,IAAI7S,KAAKwiE,WAAW,CAACJ,cAAaljB,aAAYuiB,WACnE,CAKAn1C,qBAAqB+xB,GACnB,MAAMxJ,EAAc,IAAI6C,GACxB7C,EAAYhiC,IACVurC,GAAcW,cAAc,CAC1BP,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAO+jB,YACzB9jB,SAAUD,EAAOC,SACjBC,MAAOv+C,KAAKu+C,MACZzR,UAAW9sC,KAAK8sC,aAIpB,MAAM,YAACs1B,EAAW,WAAEljB,EAAU,OAAEuiB,GAAUpjB,EAC1C,OAAOxJ,EAAYhiC,IAAI7S,KAAKwiE,WAAW,CAACJ,cAAaljB,aAAYuiB,WACnE,CAOAn1C,gBAAgB+xB,GACd,MAAM,YAAC+jB,EAAW,iBAAEvlB,EAAgB,WAAEyN,GAAcjM,EAG9Cl/C,EAAOm9C,GADAilB,GAA0BI,UAGvC,OAAO,IAAIjqB,IAAc7kC,IAAI,CAC3BmrB,KAAM,CACJ,CAACiR,OAAQmzB,EAAa/xB,UAAU,EAAOC,YAAY,GACnD,CAACrB,OAAQqb,EAAYja,UAAU,EAAOC,YAAY,GAClD,CAACrB,OAAQgM,GAAqB5K,UAAU,EAAOC,YAAY,GAC3D,CACErB,OAAQmM,GACR/K,UAAU,EACVC,YAAY,GAEd,CAACrB,OAAQkyB,GAAiB9wB,UAAU,EAAOC,YAAY,GACvD,CAACrB,OAAQ4N,EAAkBxM,UAAU,EAAMC,YAAY,IAEzDxD,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAMAmtB,iBAAiB+xB,GACf,MAAM,YACJ+jB,EAAW,iBACXvlB,EAAgB,oBAChBuC,EAAmB,uBACnBqjB,EAAsB,gBACtBC,GACErkB,EAGEl/C,EAAOm9C,GADAilB,GAA0BG,UACT,CAC5BiB,cAAe/yD,GAASwvC,EAAoBxvC,YAC5C6yD,uBAAwBA,EAAuBt1D,QAG3C6wB,EAAO,CACX,CAACiR,OAAQmzB,EAAa/xB,UAAU,EAAOC,YAAY,GACnD,CAACrB,OAAQgM,GAAqB5K,UAAU,EAAOC,YAAY,GAC3D,CAACrB,OAAQ4N,EAAkBxM,UAAU,EAAMC,YAAY,IASzD,OAPIoyB,GACF1kC,EAAKnmC,KAAK,CACRo3C,OAAQyzB,EACRryB,UAAU,EACVC,YAAY,KAGT,IAAIoH,IAAc7kC,IAAI,CAC3BmrB,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAMAmtB,yBAAyB+xB,GACvB,MAAM,YACJ+jB,EAAW,cACXQ,EAAa,cACbC,EAAa,eACbC,EAAc,oBACd1jB,EAAmB,uBACnBqjB,EAAsB,gBACtBC,GACErkB,EAGEl/C,EAAOm9C,GADAilB,GAA0BS,kBACT,CAC5BW,cAAe/yD,GAASwvC,EAAoBxvC,YAC5C6yD,uBAAwBA,EAAuBt1D,MAC/C01D,cAAeA,EACfC,eAAgBlzD,GAASkzD,EAAelzD,cAGpCouB,EAAO,CACX,CAACiR,OAAQmzB,EAAa/xB,UAAU,EAAOC,YAAY,GACnD,CAACrB,OAAQ2zB,EAAevyB,UAAU,EAAMC,YAAY,GACpD,CAACrB,OAAQgM,GAAqB5K,UAAU,EAAOC,YAAY,IAS7D,OAPIoyB,GACF1kC,EAAKnmC,KAAK,CACRo3C,OAAQyzB,EACRryB,UAAU,EACVC,YAAY,KAGT,IAAIoH,IAAc7kC,IAAI,CAC3BmrB,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAKAmtB,wBAAwB+xB,GACtB,MAAM,YAAC+jB,EAAW,iBAAEvlB,EAAgB,iBAAEkmB,EAAgB,SAAEzkB,GAAYD,EAE9Dl/C,EAAOm9C,GADAilB,GAA0BK,MACT,CAACtjB,aAC/B,OAAO,IAAI9G,GAAuB,CAChCxZ,KAAM,CACJ,CAACiR,OAAQmzB,EAAa/xB,UAAU,EAAOC,YAAY,GACnD,CAACrB,OAAQ8zB,EAAkB1yB,UAAU,EAAOC,YAAY,GACxD,CAACrB,OAAQ4N,EAAkBxM,UAAU,EAAMC,YAAY,IAEzDxD,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAKAmtB,aAAa+xB,GACX,MAAMxJ,EAAc,IAAI6C,GAUxB,OATA7C,EAAYhiC,IACVurC,GAAcW,cAAc,CAC1BP,WAAYH,EAAOxB,iBACnB4B,iBAAkBJ,EAAO0kB,iBACzBzkB,SAAU,EACVC,MAAOv+C,KAAKu+C,MACZzR,UAAW9sC,KAAK8sC,aAGb+H,EAAYhiC,IAAI7S,KAAKgjE,iBAAiB3kB,GAC/C,CAMA/xB,qBAAqB+xB,GACnB,MAAM,YACJ+jB,EAAW,iBACXvlB,EAAgB,iBAChBkmB,EAAgB,WAChBrkB,EAAU,KACVnW,EAAI,SACJ+V,GACED,EACExJ,EAAc,IAAI6C,GAUxB,OATA7C,EAAYhiC,IACVurC,GAAc9tC,SAAS,CACrBsuC,cAAemkB,EACfrkB,aACAnW,OACAgW,MAAOv+C,KAAKu+C,MACZzR,UAAW9sC,KAAK8sC,aAGb+H,EAAYhiC,IACjB7S,KAAKgjE,iBAAiB,CACpBZ,cACAvlB,mBACAkmB,mBACAzkB,aAGN,CAKAhyB,aAAa+xB,GACX,MAAM,YAAC+jB,EAAW,kBAAEa,EAAiB,iBAAEpmB,GAAoBwB,EAErDl/C,EAAOm9C,GADAilB,GAA0BQ,OAGvC,OAAO,IAAIrqB,IAAc7kC,IAAI,CAC3BmrB,KAAM,CACJ,CAACiR,OAAQmzB,EAAa/xB,UAAU,EAAOC,YAAY,GACnD,CAACrB,OAAQg0B,EAAmB5yB,UAAU,EAAOC,YAAY,GACzD,CAACrB,OAAQgM,GAAqB5K,UAAU,EAAOC,YAAY,GAC3D,CACErB,OAAQmM,GACR/K,UAAU,EACVC,YAAY,GAEd,CAACrB,OAAQ4N,EAAkBxM,UAAU,EAAMC,YAAY,IAEzDxD,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAKAmtB,gBAAgB+xB,GACd,MAAM,YAAC+jB,EAAW,iBAAEvlB,EAAgB,SAAE8B,EAAQ,SAAEL,EAAQ,gBAAEokB,GACxDrkB,EAEIl/C,EAAOm9C,GADAilB,GAA0BM,SACT,CAACvjB,aAEzBtgB,EAAO,CACX,CAACiR,OAAQmzB,EAAa/xB,UAAU,EAAOC,YAAY,GACnD,CAACrB,OAAQ0P,EAAUtO,UAAU,EAAOC,YAAY,GAChD,CAACrB,OAAQgM,GAAqB5K,UAAU,EAAOC,YAAY,GAC3D,CACErB,OAAQmM,GACR/K,UAAU,EACVC,YAAY,GAEd,CAACrB,OAAQ4N,EAAkBxM,UAAU,EAAMC,YAAY,IASzD,OAPIoyB,GACF1kC,EAAKnmC,KAAK,CACRo3C,OAAQyzB,EACRryB,UAAU,EACVC,YAAY,KAGT,IAAIoH,IAAc7kC,IAAI,CAC3BmrB,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAKAmtB,kBAAkB+xB,GAChB,MAAM,YAAC+jB,EAAW,iBAAEvlB,GAAoBwB,EAElCl/C,EAAOm9C,GADAilB,GAA0BO,YAGvC,OAAO,IAAIpqB,IAAc7kC,IAAI,CAC3BmrB,KAAM,CACJ,CAACiR,OAAQmzB,EAAa/xB,UAAU,EAAOC,YAAY,GACnD,CAACrB,OAAQgM,GAAqB5K,UAAU,EAAOC,YAAY,GAC3D,CAACrB,OAAQ4N,EAAkBxM,UAAU,EAAMC,YAAY,IAEzDxD,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,EA3VWgjE,GASJr1B,UAAuB,IAAIR,GAChC,+CAVS61B,GAoBJ5jB,MAAgB,IC5TzB,MAAM2kB,GAA2B7vE,OAAOq4B,OAIrC,CACDy3C,kBAAmB,CACjBh2D,MAAO,EACPvY,OAAQs6C,GAAAA,GAAmE,CACzEA,GAAAA,GAAiB,ejC5KC,WAAmC,IAAlCt8C,EAAgBuB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,WAC1C,OAAO+6C,GAAAA,GAQL,CACE3W,GAAU,cACVA,GAAU,mBACVA,GAAU,wBACV2W,GAAAA,GAAgB,eAElBt8C,EAEJ,CiC4JMwwE,MAGJ1B,UAAW,CACTv0D,MAAO,EACPvY,OAAQs6C,GAAAA,GAA2D,CACjEA,GAAAA,GAAiB,eACjB3W,GAAiB,iBACjB2W,GAAAA,GAAiB,4BAGrB2yB,SAAU,CACR10D,MAAO,EACPvY,OAAQs6C,GAAAA,GAA0D,CAChEA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,eAGtB8yB,kBAAmB,CACjB70D,MAAO,GACPvY,OAAQs6C,GAAAA,GAAmE,CACzEA,GAAAA,GAAiB,ejC5KkB,WAEpC,IADHt8C,EAAgBuB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,4BAEnB,OAAO+6C,GAAAA,GACL,CACEA,GAAAA,GAAiB,yBACjB3W,GAAU,yCACV4W,GAAW,kCACX5W,GAAU,kBAEZ3lC,EAEJ,CiCiKMywE,QAgBiChwE,OAAOq4B,OAAO,CACnD43C,MAAO,CACLn2D,MAAO,GAET+0D,WAAY,CACV/0D,MAAO,KAOJ,MAAMo2D,GAIX7wE,cAAe,CAqBf45B,yBACE+xB,GAEA,MAAM,WAACiM,EAAU,WAAEC,EAAU,SAAE6Y,GAAY/kB,EAErCl/C,EAAOm9C,GADA4mB,GAAyBC,kBACR,CAC5BC,SAAU,CACR7Y,WAAY36C,GAASwzD,EAAS7Y,WAAW36C,YACzC4zD,gBAAiB5zD,GAASwzD,EAASI,gBAAgB5zD,YACnD6zD,qBAAsB7zD,GACpBwzD,EAASK,qBAAqB7zD,YAEhC+1C,WAAYyd,EAASzd,cAGnBxG,EAAkB,CACtBnhB,KAAM,CACJ,CAACiR,OAAQqb,EAAYja,UAAU,EAAOC,YAAY,GAClD,CAACrB,OAAQkM,GAAoB9K,UAAU,EAAOC,YAAY,GAC1D,CAACrB,OAAQgM,GAAqB5K,UAAU,EAAOC,YAAY,GAC3D,CAACrB,OAAQsb,EAAYla,UAAU,EAAMC,YAAY,IAEnDxD,UAAW9sC,KAAK8sC,UAChB3tC,QAEF,OAAO,IAAIq4C,GAAuB2H,EACpC,CAKA7yB,qBAAqB+xB,GACnB,MAAMxJ,EAAc,IAAI6C,GAWxB,OAVA7C,EAAYhiC,IACVurC,GAAcW,cAAc,CAC1BP,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAOiM,WACzBhM,SAAUD,EAAOC,SACjBC,MAAOv+C,KAAKu+C,MACZzR,UAAW9sC,KAAK8sC,aAIb+H,EAAYhiC,IACjB7S,KAAK0jE,kBAAkB,CACrBpZ,WAAYjM,EAAOiM,WACnBC,WAAYlM,EAAO+kB,SAAS7Y,WAC5B6Y,SAAU/kB,EAAO+kB,WAGvB,CAKA92C,iBAAiB+xB,GACf,MAAM,WACJiM,EAAU,iBACVzN,EAAgB,oBAChBuC,EAAmB,sBACnBukB,GACEtlB,EAGEl/C,EAAOm9C,GADA4mB,GAAyBxB,UACR,CAC5BiB,cAAe/yD,GAASwvC,EAAoBxvC,YAC5C+zD,sBAAuBA,EAAsBx2D,QAGzC6wB,EAAO,CACX,CAACiR,OAAQqb,EAAYja,UAAU,EAAOC,YAAY,GAClD,CAACrB,OAAQgM,GAAqB5K,UAAU,EAAOC,YAAY,GAC3D,CAACrB,OAAQ4N,EAAkBxM,UAAU,EAAMC,YAAY,IAGzD,OAAO,IAAIoH,IAAc7kC,IAAI,CAC3BmrB,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAMAmtB,yBAAyB+xB,GACvB,MAAM,qCACJulB,EAAoC,sCACpCC,EAAqC,+BACrCC,EAA8B,oBAC9B1kB,EAAmB,sBACnBukB,EAAqB,WACrBrZ,GACEjM,EAGEl/C,EAAOm9C,GADA4mB,GAAyBlB,kBACR,CAC5BqB,0BAA2B,CACzBQ,sCAAuCj0D,GACrCi0D,EAAsCj0D,YAExCk0D,+BAAgCA,EAChCnB,cAAe/yD,GAASwvC,EAAoBxvC,YAC5C+zD,sBAAuBA,EAAsBx2D,SAI3C6wB,EAAO,CACX,CAACiR,OAAQqb,EAAYja,UAAU,EAAOC,YAAY,GAClD,CAACrB,OAAQgM,GAAqB5K,UAAU,EAAOC,YAAY,GAC3D,CACErB,OAAQ20B,EACRvzB,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIoH,IAAc7kC,IAAI,CAC3BmrB,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAKAmtB,gBAAgB+xB,GACd,MAAM,WAACiM,EAAU,2BAAEyZ,EAA0B,SAAEzlB,EAAQ,SAAEK,GAAYN,EAE/Dl/C,EAAOm9C,GADA4mB,GAAyBrB,SACR,CAACvjB,aAEzBtgB,EAAO,CACX,CAACiR,OAAQqb,EAAYja,UAAU,EAAOC,YAAY,GAClD,CAACrB,OAAQ0P,EAAUtO,UAAU,EAAOC,YAAY,GAChD,CAACrB,OAAQ80B,EAA4B1zB,UAAU,EAAMC,YAAY,IAGnE,OAAO,IAAIoH,IAAc7kC,IAAI,CAC3BmrB,OACA8O,UAAW9sC,KAAK8sC,UAChB3tC,QAEJ,CAUAmtB,oBACE+xB,EACA2lB,EACAC,GAEA,GAAI5lB,EAAOC,SAAW0lB,EAA4BC,EAChD,MAAM,IAAIjwE,MACR,4DAGJ,OAAOuvE,GAAYW,SAAS7lB,EAC9B,EA9LWklB,GASJz2B,UAAuB,IAAIR,GAChC,+CAVSi3B,GAoBJhlB,MAAgB,KCrWS,IAAIjS,GACpC,+CAyBiBptC,GAAK,CACtBtL,KAAMkK,KACNqmE,QAASzmC,GAAS5/B,MAClBsmE,QAAS1mC,GAAS5/B,MAClBumE,gBAAiB3mC,GAAS5/B,QCnCG,IAAIwuC,GACjC,+CAoEwB4C,GAAAA,GAAqC,CAC7D3W,GAAiB,cACjBA,GAAiB,wBACjB2W,GAAAA,GAAgB,cAChBA,GAAAA,KACAA,GAAAA,GACEA,GAAAA,GAAoB,CAClBA,GAAAA,GAAkB,QAClBA,GAAAA,GAAiB,uBAEnBA,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,SAEFA,GAAAA,GAAgB,iBAChBA,GAAAA,GAAkB,YAClBA,GAAAA,KACAA,GAAAA,GACEA,GAAAA,GAAoB,CAClBA,GAAAA,GAAkB,SAClB3W,GAAiB,qBAEnB2W,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,oBAEFA,GAAAA,GACE,CACEA,GAAAA,GACEA,GAAAA,GAAoB,CAClB3W,GAAiB,oBACjB2W,GAAAA,GAAkB,+BAClBA,GAAAA,GAAkB,iBAEpB,GACA,OAEFA,GAAAA,GAAkB,OAClBA,GAAAA,GAAgB,YAElB,eAEFA,GAAAA,KACAA,GAAAA,GACEA,GAAAA,GAAoB,CAClBA,GAAAA,GAAkB,SAClBA,GAAAA,GAAkB,WAClBA,GAAAA,GAAkB,iBAEpBA,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,gBAEFA,GAAAA,GACE,CAACA,GAAAA,GAAkB,QAASA,GAAAA,GAAkB,cAC9C,iEC5HE,SAAUo1B,GAAwBC,GACtC,OAAO,SAACC,EAA2B1hE,EAA2BigB,EAA8BhjB,GAC1F,MAAmB,mBAAfykE,EAAIvS,QACNnvD,EAAIoyB,OAASqvC,EACNxkE,KAEFgjB,IAEX,CAEM,SAAU0hD,GAA+BC,GAC7C,OAAO,SACLF,EACA1hE,EACAigB,EACAhjB,GAEA,MAAmB,2BAAfykE,EAAIvS,QACNnvD,EAAIoyB,OAASwvC,EACN3kE,KAEFgjB,IAEX,CAEM,SAAU4hD,GAAuBD,GACrC,IAAQH,EAAYG,EAAZH,QAER,OAAOK,EAAAA,EAAAA,IAAgB,CAACN,GAAwBC,GAAUE,GAA+BC,IAC3F,CAEM,SAAUG,GAAoBH,GAIlC,IAAQI,EAAcJ,EAAdI,UACF/V,GAAkBgW,EAAAA,EAAAA,IAAsB,CAAED,UAAAA,IAEhD,MAAO,CAAEE,mBADiBJ,EAAAA,EAAAA,IAAgB,CAACD,GAAuBD,GAAiB3V,IACvDA,gBAAAA,EAC9B,CC7BgB,SAAAkW,GAA8Fl0B,GAAA,IAAhEm0B,EAAWn0B,EAAXm0B,YAC5C,OAAOC,EAAAA,EAAAA,IAAqB,eAAAl0B,GAAAm0B,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAOC,EAAAvT,EAAS/M,EAAUjiC,GAAI,IAAAuwB,EAAA,OAAA+xB,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,OAC3C,GACC,gBADIgvC,EAAXE,OACoB,CAAAsT,EAAAxiD,KAAA,eAAAwiD,EAAAC,OAAA,SAASziD,KAAM,UAEtCmiD,EAAa,CAAFK,EAAAxiD,KAAA,cAAQ,IAAI/uB,MAAM,oDAAmD,cAAAuxE,EAAAxiD,KAAA,EAE9DmiD,EAAYnT,GAAQ,OAChB,OADrBze,EAAQiyB,EAAAE,KACdzgB,EAAS9vB,OAASoe,EAASiyB,EAAAC,OAAA,cACpBpxE,GAAS,yBAAAmxE,EAAAG,OAAA,GAAAJ,OACjB,gBAAA5xC,EAAAiyC,EAAAC,GAAA,OAAA30B,EAAAxtC,MAAA,KAAAtP,UAAA,EAT2B,GAU9B,CAEgB,SAAA0xE,GAIf10B,GAAA,IAHC20B,EAAe30B,EAAf20B,gBAIA,OAAOX,EAAAA,EAAAA,IAAqB,eAAA9zB,GAAA+zB,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAOU,EAAAhU,EAAS/M,EAAUjiC,GAAI,IAAAuwB,EAAA,OAAA+xB,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,OAC3C,GACC,oBADIgvC,EAAXE,OACwB,CAAA+T,EAAAjjD,KAAA,eAAAijD,EAAAR,OAAA,SAASziD,KAAM,UAE1C+iD,EAAiB,CAAFE,EAAAjjD,KAAA,cAAQ,IAAI/uB,MAAM,wDAAuD,cAAAgyE,EAAAjjD,KAAA,EAEtE+iD,EAAgB/T,GAAQ,OACpB,OADrBze,EAAQ0yB,EAAAP,KACdzgB,EAAS9vB,OAASoe,EAAS0yB,EAAAR,OAAA,cACpBpxE,GAAS,yBAAA4xE,EAAAN,OAAA,GAAAK,OACjB,gBAAAE,EAAAC,EAAAC,GAAA,OAAA90B,EAAA5tC,MAAA,KAAAtP,UAAA,EAT2B,GAU9B,CAEgB,SAAAiyE,GACdC,EACAC,GAEA,OAAOnB,EAAAA,EAAAA,IAAqB,eAAAzzB,GAAA0zB,EAAAA,EAAAA,GAAAC,IAAAA,MAAa,SAAOkB,EAAAxU,EAAS/M,EAAUjiC,GAAI,IAAAmS,EAAA,OAAAmwC,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAA1jD,KAAA0jD,EAAAzjD,MAAA,OACvD,GAAKgvC,EAAXE,SACOoU,EAAY,CAAAG,EAAAzjD,KAAA,eAAAyjD,EAAAhB,OAAA,SAASziD,KAAM,UAErCujD,EAAS,CAAFE,EAAAzjD,KAAA,cAAQ,IAAI/uB,MAA4B,sBAAA6Q,OAAAwhE,EAA4B,gCAAAG,EAAAzjD,KAAA,EAE3DujD,EAAQvU,GAAQ,OAEZ,OAFnB78B,EAAMsxC,EAAAf,KAEZzgB,EAAS9vB,OAASA,EAAOsxC,EAAAhB,OAAA,cAClBpxE,GAAS,yBAAAoyE,EAAAd,OAAA,GAAAa,OACjB,gBAAAE,EAAAC,EAAAC,GAAA,OAAAj1B,EAAAjuC,MAAA,KAAAtP,UAAA,EAV2B,GAW9B,CAEM,SAAUyyE,GAAuBC,GACrC,IAAQ3B,EACN2B,EADM3B,YAAaY,EACnBe,EADmBf,gBAAiBgB,EACpCD,EADoCC,gBAAiBC,EACrDF,EADqDE,uBAAwBC,EAC7EH,EAD6EG,oBAAqBC,EAClGJ,EADkGI,YAAaC,EAC/GL,EAD+GK,cAAeC,EAC9HN,EAD8HM,aAGhI,OAAOvC,EAAAA,EAAAA,IAAgB,CACrBiB,GAAgC,CAAEC,gBAAAA,IAClCb,GAA4B,CAAEC,YAAAA,IAC9BkB,GAAmE,kBAAmBU,GACtFV,GAA6E,yBAA0BW,GACvGX,GAAuE,sBAAuBY,GAC9FZ,GAAiE,cAAea,GAChFb,GAA0C,mBAAoBc,GAC9Dd,GAA0C,kBAAmBe,IAEjE,qgCCnEA,IAAsBC,GAAwB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,EAAAC,GAAAJ,GAC5C,SAAwFA,EAAAr2B,GAAA,IAA1EwJ,EAAMxJ,EAANwJ,OAAQh0B,EAAKwqB,EAALxqB,MAAK,OAAAkhD,EAAAA,EAAAA,GAAA,KAAAL,GACnBG,EAAAptE,KAAA,MAAEogD,OAAQ,CAAEmtB,YAAWC,GAAAA,GAAA,GAAOptB,EAAOmtB,aAAW,IAAEE,eAAgBC,EAAAA,iBAAAA,UAA6BthD,MAAAA,GACvG,CAoCC,OApCAuhD,EAAAA,EAAAA,GAAAV,EAAA,EAAA1vC,IAAA,cAAAz8B,MAAA,eAAA8sE,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAC,EAAkB5qD,GAAsB,OAAA2qD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,cACtCwiD,EAAAC,OAAA,SAAArpB,QAAQC,WAAS,wBAAAmpB,EAAAG,OAAA,GAAAJ,OACzB,gBAAA5xC,GAAA,OAAAq0C,EAAAtkE,MAAA,KAAAtP,UAAA,EAJA,IAIA,CAAAujC,IAAA,gBAAAz8B,MAAA,eAAA+sE,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAU,EAAoBkC,GAAmB,IAAAC,EAAArB,EAAAsB,EAAAC,EAAAC,EAAAC,EAAA,OAAAjD,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,OAgBH,OAfnCmlD,EAAS,IAAIK,EAAAA,GAEb1B,EAAmB7mE,KAAKwoE,oBAAoBP,GAC5CE,EAAmBvB,GAAuBC,GAChDqB,EAAOrwE,KAAKswE,GAENC,EAAmBzD,GAAuB3kE,KAAKu6C,OAAOmtB,aAC5DQ,EAAOrwE,KAAKuwE,IAENC,EAAwBroE,KAAKyoE,yBAAyBR,KAE1DC,EAAOrwE,KAAKwwE,GAGRC,GAAWI,EAAAA,EAAAA,IAAmBR,GACpCloE,KAAK2oE,0BAA0BL,GAAUtC,EAAAjjD,KAAA,GACnC/iB,KAAK4oE,gBAAe,yBAAA5C,EAAAN,OAAA,GAAAK,EAAA,UAC3B,gBAAAJ,GAAA,OAAAqC,EAAAvkE,MAAA,KAAAtP,UAAA,EApBA,IAoBA,CAAAujC,IAAA,gBAAAz8B,MAAA,eAES4tE,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAkB,IAAA,IAAAmB,EAAA,OAAArC,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAA1jD,KAAA0jD,EAAAzjD,MAAA,OAIL,OAHK2kD,EAAgB1nE,KAAKu6C,OAArBmtB,YACR1nE,KAAKqlB,OAAO,CACVk/C,QAASmD,EAAYnD,UACpBiC,EAAAhB,OAAA,SACIkC,EAAYnD,SAAW,IAAE,wBAAAiC,EAAAd,OAAA,GAAAa,EAAA,UACjC,yBAAAsC,EAAAplE,MAAA,KAAAtP,UAAA,EARA,IAQA,CAAAujC,IAAA,2BAAAz8B,MAES,SAAyByf,GAEnC,KAAC0sD,CAAA,CAvC2C,CAAQ0B,EAAAA,ICAzCC,GAA0B,SAACd,GACtC,IAAMpB,EAAsC,CAC1Cf,gBAAiB,WAAF,IAAEkD,GAAA5D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,cAAAwiD,EAAAC,OAAA,SACRyC,EAAiB1vC,UAAY,CAACmU,IAAAA,OAAYu7B,EAAiB1vC,UAAUzT,YAAc,IAAE,wBAAAygD,EAAAG,OAAA,GAAAJ,OAC7F,yBAAA0D,EAAAvlE,MAAA,KAAAtP,UAAA,EAFgB,GAGjB+wE,YAAa,WAAF,IAAE+D,GAAA7D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAU,IAAA,OAAAV,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,cAAAijD,EAAAR,OAAA,SAAayC,EAAiB1vC,UAAY,CAACmU,IAAAA,OAAYu7B,EAAiB1vC,UAAUzT,YAAc,IAAE,wBAAAkhD,EAAAN,OAAA,GAAAK,OAAC,yBAAAkD,EAAAxlE,MAAA,KAAAtP,UAAA,EAAnG,GACb+yE,cAAe,WAAF,IAAEgC,GAAA9D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAkB,IAAA,OAAAlB,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAA1jD,KAAA0jD,EAAAzjD,MAAA,aACPomD,EAAAA,GAAAA,IAAAA,qBAAkC,wBAAA3C,EAAAd,OAAA,GAAAa,OACzC,yBAAA2C,EAAAzlE,MAAA,KAAAtP,UAAA,EAFc,GAGfgzE,aAAc,WAAF,IAAEiC,GAAAhE,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAgE,IAAA,OAAAhE,IAAAA,MAAA,SAAAiE,GAAA,cAAAA,EAAAxmD,KAAAwmD,EAAAvmD,MAAA,aACNomD,EAAAA,GAAAA,IAAAA,qBAAkC,wBAAAG,EAAA5D,OAAA,GAAA2D,OACzC,yBAAAD,EAAA3lE,MAAA,KAAAtP,UAAA,EAFa,GAGd2yE,gBAAiB,WAAF,IAAAyC,GAAAnE,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAmE,EAAOhF,GAA0C,IAAA3vB,EAAA,OAAAwwB,IAAAA,MAAA,SAAAoE,GAAA,cAAAA,EAAA3mD,KAAA2mD,EAAA1mD,MAAA,cAAA0mD,EAAA1mD,KAAA,EACtCklD,EAAiBnB,gBAAgBtC,EAAInmB,OAAO3zC,SAAQ,OAA7D,OAAXmqC,EAAW40B,EAAAhE,KAAAgE,EAAAjE,OAAA,SACV3wB,GAAW,wBAAA40B,EAAA/D,OAAA,GAAA8D,OACnB,gBAAA91C,GAAA,OAAA61C,EAAA9lE,MAAA,KAAAtP,UAAA,EAHgB,GAIjB8yE,YAAa,WAAF,IAAAyC,GAAAtE,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAsE,EAAOnF,GAAmE,IAAAoF,EAAA,OAAAvE,IAAAA,MAAA,SAAAwE,GAAA,cAAAA,EAAA/mD,KAAA+mD,EAAA9mD,MAAA,cAAA8mD,EAAA9mD,KAAA,EAC/DklD,EAAiBhB,YAAYzC,EAAInmB,OAAO3zC,QAAS85D,EAAInmB,OAAOyrB,SAAQ,OAA7E,OAAPF,EAAOC,EAAApE,KACNoE,EAAArE,OAAA,SAAAoE,EAAQxkC,WAAS,wBAAAykC,EAAAnE,OAAA,GAAAiE,OACzB,gBAAAhE,GAAA,OAAA+D,EAAAjmE,MAAA,KAAAtP,UAAA,EAHY,GAIb6yE,oBAAqB,WAAF,IAAA+C,GAAA3E,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAA2E,EAAOxF,GAA4C,IAAAyF,EAAAC,EAAAr1B,EAAA,OAAAwwB,IAAAA,MAAA,SAAA8E,GAAA,cAAAA,EAAArnD,KAAAqnD,EAAApnD,MAAA,UACvD,QAAXknD,EAACzF,EAAInmB,cAAM,IAAA4rB,GAAVA,EAAYv/D,SAAsB,QAAVw/D,EAAA1F,EAAInmB,cAAM,IAAA6rB,GAAVA,EAAYx/D,QAAQlY,OAAM,CAAA23E,EAAApnD,KAAA,cAC/ComD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,cAAAgB,EAAApnD,KAAA,EAEpBklD,EAAiBjB,oBAAoBxC,EAAInmB,OAAO3zC,SAAQ,OAAjE,OAAXmqC,EAAWs1B,EAAA1E,KAAA0E,EAAA3E,OAAA,SACV3wB,GAAW,wBAAAs1B,EAAAzE,OAAA,GAAAsE,OACnB,gBAAApE,GAAA,OAAAmE,EAAAtmE,MAAA,KAAAtP,UAAA,EANoB,GAOrB4yE,uBAAwB,WAAF,IAAAqD,GAAAhF,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAgF,EAAO7F,GAA0C,IAAA8F,EAAA,OAAAjF,IAAAA,MAAA,SAAAkF,GAAA,cAAAA,EAAAznD,KAAAynD,EAAAxnD,MAAA,cAAAwnD,EAAAxnD,KAAA,EACnDklD,EAAiBlB,uBAAuBvC,EAAInmB,OAAO3zC,SAAQ,OAApE,OAAL4/D,EAAKC,EAAA9E,KACJ8E,EAAA/E,OAAA,UAAEpgC,UAAWklC,EAAMllC,YAAW,wBAAAmlC,EAAA7E,OAAA,GAAA2E,OACtC,gBAAApE,GAAA,OAAAmE,EAAA3mE,MAAA,KAAAtP,UAAA,EAHuB,IAK1B,OAAO0yE,CACT,2kBCrCM,SAAU2D,GAAsClC,GACpD,OAAOnD,EAAAA,EAAAA,IAAqB,eAAAp0B,GAAAq0B,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAOC,EAAAd,EAA6B1hE,EAA4B2nE,GAA6B,IAAAv1C,EAAA,OAAAmwC,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,cAAAwiD,EAAAxiD,KAAA,EACnGulD,EAASvW,QAAO2Y,GAAC,CAAC,EAClClG,IACH,OAFItvC,EAAMqwC,EAAAE,KAGZ3iE,EAAIoyB,OAASA,EAAO,wBAAAqwC,EAAAG,OAAA,GAAAJ,OACrB,gBAAA5xC,EAAAiyC,EAAAC,GAAA,OAAA70B,EAAAttC,MAAA,KAAAtP,UAAA,EAL2B,GAM9B,4bCHA,IAAaw2E,GAAwB,SAAAC,IAAAtD,EAAAA,EAAAA,GAAAqD,EAAAC,GAAA,IAAArD,EAAAsD,GAAAF,GAAA,SAAAA,IAAA,OAAAlD,EAAAA,EAAAA,GAAA,KAAAkD,GAAApD,EAAA9jE,MAAA,KAAAtP,UAAA,CAOlC,OAPkC2zE,EAAAA,EAAAA,GAAA6C,EAAA,EAAAjzC,IAAA,sBAAAz8B,MACzB,SAAoBgtE,GAC5B,OAAOc,GAAwBd,EACjC,GAAC,CAAAvwC,IAAA,2BAAAz8B,MAES,SAAyBgtE,GACjC,OAAOuC,GAAsCvC,EAC/C,KAAC0C,CAAA,CAPkC,CAAQvD,+bCH7C,IAAa0D,GAA2B,SAAAF,IAAAtD,EAAAA,EAAAA,GAAAwD,EAAAF,GAAA,IAAArD,EAAAwD,GAAAD,GAAA,SAAAA,IAAA,OAAArD,EAAAA,EAAAA,GAAA,KAAAqD,GAAAvD,EAAA9jE,MAAA,KAAAtP,UAAA,CAGrC,OAHqC2zE,EAAAA,EAAAA,GAAAgD,EAAA,EAAApzC,IAAA,sBAAAz8B,MAC5B,SAAoBgtE,GAC5B,OCE4B,SAACA,EAAkC+C,GACjE,IAAMnE,EAAsC,CAC1Cf,gBAAiB,WAAF,IAAEkD,GAAA5D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAC,IAAA,IAAA2F,EAAA9rE,EAAA,OAAAkmE,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,cAAAwiD,EAAAxiD,KAAA,EACQklD,EAAiBlM,UAAS,OAArC,OAAqCkP,EAAA1F,EAAAE,KAAzCtmE,EAAI8rE,EAAJ9rE,KAAIomE,EAAAC,OAAA,SACL,CAACrmE,EAAKo5B,YAAU,wBAAAgtC,EAAAG,OAAA,GAAAJ,OACxB,yBAAA0D,EAAAvlE,MAAA,KAAAtP,UAAA,EAHgB,GAIjB+wE,YAAa,WAAF,IAAE+D,GAAA7D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAU,IAAA,IAAAmF,EAAA/rE,EAAA,OAAAkmE,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,cAAAijD,EAAAjjD,KAAA,EACYklD,EAAiBlM,UAAS,OAArC,OAAqCmP,EAAAlF,EAAAP,KAAzCtmE,EAAI+rE,EAAJ/rE,KAAI6mE,EAAAR,OAAA,SACL,CAACrmE,EAAKo5B,YAAU,wBAAAytC,EAAAN,OAAA,GAAAK,OACxB,yBAAAkD,EAAAxlE,MAAA,KAAAtP,UAAA,EAHY,GAIb+yE,cAAe,WAAF,IAAEgC,GAAA9D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAkB,IAAA,OAAAlB,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAA1jD,KAAA0jD,EAAAzjD,MAAA,aACPomD,EAAAA,GAAAA,IAAAA,qBAAkC,wBAAA3C,EAAAd,OAAA,GAAAa,OACzC,yBAAA2C,EAAAzlE,MAAA,KAAAtP,UAAA,EAFc,GAGfgzE,aAAc,WAAF,IAAEiC,GAAAhE,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAgE,IAAA,OAAAhE,IAAAA,MAAA,SAAAiE,GAAA,cAAAA,EAAAxmD,KAAAwmD,EAAAvmD,MAAA,aACNomD,EAAAA,GAAAA,IAAAA,qBAAkC,wBAAAG,EAAA5D,OAAA,GAAA2D,OACzC,yBAAAD,EAAA3lE,MAAA,KAAAtP,UAAA,EAFa,GAGd2yE,gBAAiB,WAAF,IAAAyC,GAAAnE,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAmE,EAAOhF,GAA0C,IAAA2G,EAAAC,EAAAjsE,EAAAo5B,EAAA6M,EAAA,OAAAigC,IAAAA,MAAA,SAAAoE,GAAA,cAAAA,EAAA3mD,KAAA2mD,EAAA1mD,MAAA,OAC5B,GAA9BooD,EAAY3G,EAAInmB,OAAO3zC,QACb,CAAF++D,EAAA1mD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,eAA6B,CAAEz+D,QAAS,gCAAgC,cAAA++D,EAAA1mD,KAAA,EACvEklD,EAAiBnB,gBAAgBp6B,IAAAA,OAAYy+B,EAAU3xB,qBAAoB,OAAtF,GAAsF4xB,EAAA3B,EAAAhE,MAA1FtmE,EAAIisE,EAAJjsE,MACEo5B,WAAcp5B,EAAKimC,UAAS,CAAAqkC,EAAA1mD,KAAA,cAAQ,IAAI/uB,MAAM,uCAAsC,OAGpC,OAFpDukC,EAAY,IAAI+T,GAAUntC,EAAKo5B,WAC/B6M,EAAYsH,IAAAA,OAAYvtC,EAAKimC,WACnC+lC,EAAUjxB,aAAa3hB,EAAWnmC,GAAOC,KAAK+yC,IAAYqkC,EAAAjE,OAAA,SACnD2F,GAAS,yBAAA1B,EAAA/D,OAAA,GAAA8D,OACjB,gBAAA91C,GAAA,OAAA61C,EAAA9lE,MAAA,KAAAtP,UAAA,EATgB,GAUjB8yE,YAAa,WAAF,IAAAyC,GAAAtE,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAsE,EAAOnF,GAAyC,IAAAxf,EAAA,OAAAqgB,IAAAA,MAAA,SAAAwE,GAAA,cAAAA,EAAA/mD,KAAA+mD,EAAA9mD,MAAA,cAAA8mD,EAAA9mD,KAAA,EACpCklD,EAAiBhB,YAAYzC,EAAInmB,OAAO3zC,SAAQ,OAAzD,OAARs6C,EAAQ6kB,EAAApE,KACPoE,EAAArE,OAAA,SAAA94B,IAAAA,OAAYsY,EAAS7lD,KAAKimC,YAAU,wBAAAykC,EAAAnE,OAAA,GAAAiE,OAC5C,gBAAAhE,GAAA,OAAA+D,EAAAjmE,MAAA,KAAAtP,UAAA,EAHY,GAIb4yE,uBAAwB,WAAF,IAAAqD,GAAAhF,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAA2E,EAAOxF,GAA0C,IAAA8D,EAAA6C,EAAAE,EAAAlsE,EAAAo5B,EAAA6M,EAAAsiC,EAAA4D,EAAAxoE,EAAA,OAAAuiE,IAAAA,MAAA,SAAA8E,GAAA,cAAAA,EAAArnD,KAAAqnD,EAAApnD,MAAA,OAC9B,GAAnCulD,EAAW0C,IACF,CAAFb,EAAApnD,KAAA,cAAQomD,EAAAA,GAAAA,SAAAA,OAA0B,CAAEz+D,QAAS,8BAA+BV,KAAM,OAAO,OAClE,GAA9BmhE,EAAY3G,EAAInmB,OAAO3zC,QACb,CAAFy/D,EAAApnD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,eAA6B,CAAEz+D,QAAS,gCAAgC,cAAAy/D,EAAApnD,KAAA,EACvEklD,EAAiBnB,gBAAgBp6B,IAAAA,OAAYy+B,EAAU3xB,qBAAoB,OAAtF,GAAsF6xB,EAAAlB,EAAA1E,MAA1FtmE,EAAIksE,EAAJlsE,MACEo5B,WAAcp5B,EAAKimC,UAAS,CAAA+kC,EAAApnD,KAAA,eAAQ,IAAI/uB,MAAM,uCAAsC,QAGpC,OAFpDukC,EAAY,IAAI+T,GAAUntC,EAAKo5B,WAC/B6M,EAAYsH,IAAAA,OAAYvtC,EAAKimC,WACnC+lC,EAAUjxB,aAAa3hB,EAAWnmC,GAAOC,KAAK+yC,IAAY+kC,EAAApnD,KAAA,GAC/BulD,EAASvW,QAA2B,CAAEE,OAAQ,yBAA0B5T,OAAQ,KAAK,QAC9D,OAD5CqpB,EAAWyC,EAAA1E,KACX6F,EAAO,IAAI3c,GAAW+Y,EAAY5C,WAAUqF,EAAApnD,KAAA,GAChCuoD,EAAKvQ,mBAAmBoQ,EAAUr/B,aAAY,QAAvD,OAAHhpC,EAAGqnE,EAAA1E,KACF0E,EAAA3E,OAAA,UAAEpgC,UAAWtiC,IAAK,yBAAAqnE,EAAAzE,OAAA,GAAAsE,OAC1B,gBAAApE,GAAA,OAAAwE,EAAA3mE,MAAA,KAAAtP,UAAA,EAduB,GAexB6yE,oBAAqB,WAAF,IAAA+C,GAAA3E,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAgF,EAAO7F,GAA4C,IAAAyF,EAAAC,EAAAqB,EAAAC,EAAAh5E,EAAAi5E,EAAA7zE,EAAA8zE,EAAAxgE,EAAA/L,EAAAo5B,EAAA6M,EAAA,OAAAigC,IAAAA,MAAA,SAAAkF,GAAA,cAAAA,EAAAznD,KAAAynD,EAAAxnD,MAAA,UACvD,QAAXknD,EAACzF,EAAInmB,cAAM,IAAA4rB,GAAVA,EAAYv/D,SAAsB,QAAVw/D,EAAA1F,EAAInmB,cAAM,IAAA6rB,GAAVA,EAAYx/D,QAAQlY,OAAM,CAAA+3E,EAAAxnD,KAAA,cAC/ComD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,OAQ9C,IALMqC,EAAUhH,EAAInmB,OAAO3zC,QACnBlY,EAAWg5E,EAAXh5E,OAEFi5E,EAAa,GAEV7zE,EAAI,EAAGA,EAAIpF,EAAQoF,IAC1B6zE,EAAW5zE,KAAK60C,IAAAA,OAAY83B,EAAInmB,OAAO3zC,QAAQ9S,GAAG4hD,qBACnD,OAAA+wB,EAAAxnD,KAAA,EAC2BklD,EAAiBjB,oBAAoByE,GAAW,OAA3D,GAA2DC,EAAAnB,EAAA9E,KAApEv6D,EAAGwgE,EAAHxgE,KAAK/L,EAAIusE,EAAJvsE,MAEHo5B,YAA4B,QAAfgzC,EAAApsE,EAAKw4C,kBAAU,IAAA4zB,OAAA,EAAfA,EAAiB/4E,UAAWA,EAAM,CAAA+3E,EAAAxnD,KAAA,eAAQ,IAAI/uB,MAAMkX,GAAI,QAI/E,IAFMqtB,EAAY,IAAI+T,GAAUntC,EAAKo5B,WAE5B3gC,EAAI,EAAGA,EAAIpF,EAAQoF,IACpBwtC,EAAYsH,IAAAA,OAAYvtC,EAAKw4C,WAAW//C,IAC9C4zE,EAAQ5zE,GAAGsiD,aAAa3hB,EAAWnmC,GAAOC,KAAK+yC,IAChD,OAAAmlC,EAAA/E,OAAA,SAEMgG,GAAO,yBAAAjB,EAAA7E,OAAA,GAAA2E,OACf,gBAAApE,GAAA,OAAA8D,EAAAtmE,MAAA,KAAAtP,UAAA,EAzBoB,IA2BvB,OAAO0yE,CACT,CD3EW8E,CAAiB1D,EAAkBjoE,KAAKgrE,uBAAuBpxE,KAAKoG,MAC7E,KAAC8qE,CAAA,CAHqC,CAAQ1D,+bEAhD,IAAawE,GAAyB,SAAAhB,IAAAtD,EAAAA,EAAAA,GAAAsE,EAAAhB,GAAA,IAAArD,EAAAsE,GAAAD,GAAA,SAAAA,IAAA,OAAAnE,EAAAA,EAAAA,GAAA,KAAAmE,GAAArE,EAAA9jE,MAAA,KAAAtP,UAAA,CAGnC,OAHmC2zE,EAAAA,EAAAA,GAAA8D,EAAA,EAAAl0C,IAAA,sBAAAz8B,MAC1B,SAAoBgtE,GAC5B,OCE+B,SAACA,EAAkC+C,GACpE,IAAMc,EAA2B/C,GAAwBd,GAUzD,OATA6D,EAAyB/E,uBAAsB,eAAAh2B,GAAAq0B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOd,GAA0C,IAAA8D,EAAAzzB,EAAA6yB,EAAA4D,EAAAxoE,EAAA,OAAAuiE,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,OACxD,GAAnCulD,EAAW0C,IACF,CAAFzF,EAAAxiD,KAAA,cAAQomD,EAAAA,GAAAA,SAAAA,OAA0B,CAAEz+D,QAAS,8BAA+BV,KAAM,OAAO,cAAAu7D,EAAAxiD,KAAA,EAC5EklD,EAAiBnB,gBAAgBtC,EAAInmB,OAAO3zC,SAAQ,OAA7D,OAAXmqC,EAAW0wB,EAAAE,KAAAF,EAAAxiD,KAAG,EACOulD,EAASvW,QAA2B,CAAEE,OAAQ,yBAA0B5T,OAAQ,KAAK,OAC9D,OAD5CqpB,EAAWnC,EAAAE,KACX6F,EAAO,IAAI3c,GAAW+Y,EAAY5C,WAAUS,EAAAxiD,KAAA,GAChCuoD,EAAKvQ,mBAAmBlmB,EAAY/I,aAAY,QAAzD,OAAHhpC,EAAGyiE,EAAAE,KACFF,EAAAC,OAAA,UAAEpgC,UAAWtiC,IAAK,yBAAAyiE,EAAAG,OAAA,GAAAJ,OAC1B,gBAAA5xC,GAAA,OAAAqd,EAAAttC,MAAA,KAAAtP,UAAA,EAR8C,GASxC23E,CACT,CDdWC,CAAoB9D,EAAkBjoE,KAAKgrE,uBAAuBpxE,KAAKoG,MAChF,KAAC4rE,CAAA,CAHmC,CAAQxE,+bEC9C,IAAa4E,GAAuB,SAAApB,IAAAtD,EAAAA,EAAAA,GAAA0E,EAAApB,GAAA,IAAArD,EAAA0E,GAAAD,GAAA,SAAAA,IAAA,OAAAvE,EAAAA,EAAAA,GAAA,KAAAuE,GAAAzE,EAAA9jE,MAAA,KAAAtP,UAAA,CAGjC,OAHiC2zE,EAAAA,EAAAA,GAAAkE,EAAA,EAAAt0C,IAAA,sBAAAz8B,MACxB,SAAoBgtE,GAC5B,OCE6B,SAACA,EAAgC+C,GAChE,IAAMnE,EAAmBkC,GAAwBd,GAcjD,OAbApB,EAAiBI,YAAW,eAAAl2B,GAAAq0B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOd,GAAyC,IAAAyG,EAAA7lC,EAAA,OAAAigC,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,cAAAwiD,EAAAxiD,KAAA,EACjDklD,EAAiBnvC,KAAK0rC,EAAInmB,OAAO3zC,QAAS,QAAO,OAA5D,OAA4DugE,EAAA1F,EAAAE,KAArErgC,EAAS6lC,EAAT7lC,UAASmgC,EAAAC,OAAA,SACVpgC,GAAS,wBAAAmgC,EAAAG,OAAA,GAAAJ,OACjB,gBAAA5xC,GAAA,OAAAqd,EAAAttC,MAAA,KAAAtP,UAAA,EAH2B,GAI5B0yE,EAAiBE,uBAAsB,eAAA91B,GAAAm0B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAU,EAAOvB,GAA0C,IAAA8D,EAAAzzB,EAAA6yB,EAAA4D,EAAAxoE,EAAA,OAAAuiE,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,OAChD,GAAnCulD,EAAW0C,IACF,CAAFhF,EAAAjjD,KAAA,cAAQomD,EAAAA,GAAAA,SAAAA,OAA0B,CAAEz+D,QAAS,8BAA+BV,KAAM,OAAO,cAAAg8D,EAAAjjD,KAAA,EAC5EklD,EAAiBnB,gBAAgBtC,EAAInmB,OAAO3zC,SAAQ,OAA7D,OAAXmqC,EAAWmxB,EAAAP,KAAAO,EAAAjjD,KAAG,EACOulD,EAASvW,QAA2B,CAAEE,OAAQ,yBAA0B5T,OAAQ,KAAK,OAC9D,OAD5CqpB,EAAW1B,EAAAP,KACX6F,EAAO,IAAI3c,GAAW+Y,EAAY5C,WAAUkB,EAAAjjD,KAAA,GAChCuoD,EAAKvQ,mBAAmBlmB,EAAY/I,aAAY,QAAzD,OAAHhpC,EAAGkjE,EAAAP,KACFO,EAAAR,OAAA,UAAEpgC,UAAWtiC,IAAK,yBAAAkjE,EAAAN,OAAA,GAAAK,OAC1B,gBAAAJ,GAAA,OAAA10B,EAAAxtC,MAAA,KAAAtP,UAAA,EARsC,GAShC0yE,CACT,CDlBWqF,CAAkBjE,EAAkBjoE,KAAKgrE,uBAAuBpxE,KAAKoG,MAC9E,KAACgsE,CAAA,CAHiC,CAAQ5E,IEC/B+E,GAAmB,SAAClE,GAC/B,IAAMpB,EAAsC,CAC1Cf,gBAAiB,WAAF,IAAEkD,GAAA5D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAC,IAAA,IAAAhyB,EAAA,OAAA+xB,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,cAAAwiD,EAAAxiD,KAAA,EACQklD,EAAiBlW,QAAkB,CACxDE,OAAQ,yBACR5T,OAAQ,CAAC,IACT,OAHY,OAAR/K,EAAQiyB,EAAAE,KAAAF,EAAAC,OAAA,SAIPlyB,GAAQ,wBAAAiyB,EAAAG,OAAA,GAAAJ,OAChB,yBAAA0D,EAAAvlE,MAAA,KAAAtP,UAAA,EANgB,GAQjB+wE,YAAa,WAAF,IAAE+D,GAAA7D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAU,IAAA,IAAAzyB,EAAA,OAAA+xB,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,cAAAijD,EAAAjjD,KAAA,EACYklD,EAAiBlW,QAAkB,CACxDE,OAAQ,yBACR5T,OAAQ,CAAC,IACT,OAHY,OAAR/K,EAAQ0yB,EAAAP,KAAAO,EAAAR,OAAA,SAIPlyB,GAAQ,wBAAA0yB,EAAAN,OAAA,GAAAK,OAChB,yBAAAkD,EAAAxlE,MAAA,KAAAtP,UAAA,EANY,GAQb+yE,cAAe,WAAF,IAAEgC,GAAA9D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAkB,IAAA,OAAAlB,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAA1jD,KAAA0jD,EAAAzjD,MAAA,aACPomD,EAAAA,GAAAA,IAAAA,qBAAkC,wBAAA3C,EAAAd,OAAA,GAAAa,OACzC,yBAAA2C,EAAAzlE,MAAA,KAAAtP,UAAA,EAFc,GAGfgzE,aAAc,WAAF,IAAEiC,GAAAhE,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAgE,IAAA,OAAAhE,IAAAA,MAAA,SAAAiE,GAAA,cAAAA,EAAAxmD,KAAAwmD,EAAAvmD,MAAA,aACNomD,EAAAA,GAAAA,IAAAA,qBAAkC,wBAAAG,EAAA5D,OAAA,GAAA2D,OACzC,yBAAAD,EAAA3lE,MAAA,KAAAtP,UAAA,EAFa,GAGd8yE,YAAa,WAAF,IAAAyC,GAAAtE,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAmE,EAAOhF,GAAyC,IAAAyF,EAAAv/D,EAAA,OAAA26D,IAAAA,MAAA,SAAAoE,GAAA,cAAAA,EAAA3mD,KAAA2mD,EAAA1mD,MAAA,UAC5C,QAD4CknD,EACtDzF,EAAInmB,cAAM,IAAA4rB,GAAVA,EAAYv/D,QAAS,CAAF++D,EAAA1mD,KAAA,cAChBomD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,cAAAM,EAAA1mD,KAAA,EAExBklD,EAAiBhB,YAAYzC,EAAInmB,OAAO3zC,SAAQ,OAAzD,OAAPA,EAAO++D,EAAAhE,KAAAgE,EAAAjE,OAAA,SACN96D,GAAO,wBAAA++D,EAAA/D,OAAA,GAAA8D,OACf,gBAAA91C,GAAA,OAAAg2C,EAAAjmE,MAAA,KAAAtP,UAAA,EANY,GAQb2yE,gBAAiB,WAAF,IAAAyC,GAAAnE,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAsE,EAAOnF,GAA0C,IAAA0F,EAAAiB,EAAAnmB,EAAA,OAAAqgB,IAAAA,MAAA,SAAAwE,GAAA,cAAAA,EAAA/mD,KAAA+mD,EAAA9mD,MAAA,UACjD,QADiDmnD,EAC3D1F,EAAInmB,cAAM,IAAA6rB,GAAVA,EAAYx/D,QAAS,CAAFm/D,EAAA9mD,KAAA,cAChBomD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,OAEV,OAA9BgC,EAAY3G,EAAInmB,OAAO3zC,QAAOm/D,EAAA9mD,KAAA,EACbklD,EAAiBnB,gBAAgBqE,GAAU,OAApD,OAARnmB,EAAQ6kB,EAAApE,KAAAoE,EAAArE,OAAA,SACPxgB,GAAQ,wBAAA6kB,EAAAnE,OAAA,GAAAiE,OAChB,gBAAAhE,GAAA,OAAA4D,EAAA9lE,MAAA,KAAAtP,UAAA,EAPgB,GASjB4yE,uBAAwB,WAAF,IAAAqD,GAAAhF,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAA2E,EAAOxF,GAA0C,IAAA4H,EAAAjB,EAAAnmB,EAAA,OAAAqgB,IAAAA,MAAA,SAAA8E,GAAA,cAAAA,EAAArnD,KAAAqnD,EAAApnD,MAAA,UACxD,QADwDqpD,EAClE5H,EAAInmB,cAAM,IAAA+tB,GAAVA,EAAY1hE,QAAS,CAAFy/D,EAAApnD,KAAA,cAChBomD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,OAEV,OAA9BgC,EAAY3G,EAAInmB,OAAO3zC,QAAOy/D,EAAApnD,KAAA,EACbklD,EAAiBtsB,gBAAgBwvB,GAAU,OAApD,OAARnmB,EAAQmlB,EAAA1E,KACP0E,EAAA3E,OAAA,UAAEpgC,UAAW4f,IAAU,wBAAAmlB,EAAAzE,OAAA,GAAAsE,OAC/B,gBAAApE,GAAA,OAAAwE,EAAA3mE,MAAA,KAAAtP,UAAA,EAPuB,GASxB6yE,oBAAqB,WAAF,IAAA+C,GAAA3E,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAgF,EAAO7F,GAA4C,IAAA6H,EAAAC,EAAAtsB,EAAAgF,EAAA,OAAAqgB,IAAAA,MAAA,SAAAkF,GAAA,cAAAA,EAAAznD,KAAAynD,EAAAxnD,MAAA,UACvD,QAAXspD,EAAC7H,EAAInmB,cAAM,IAAAguB,GAAVA,EAAY3hE,SAAsB,QAAV4hE,EAAA9H,EAAInmB,cAAM,IAAAiuB,GAAVA,EAAY5hE,QAAQlY,OAAM,CAAA+3E,EAAAxnD,KAAA,cAC/ComD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,OAEP,OAAjCnpB,EAAewkB,EAAInmB,OAAO3zC,QAAO6/D,EAAAxnD,KAAA,EAChBklD,EAAiBjB,oBAAoBhnB,GAAa,OAA3D,OAARgF,EAAQulB,EAAA9E,KAAA8E,EAAA/E,OAAA,SACPxgB,GAAQ,wBAAAulB,EAAA7E,OAAA,GAAA2E,OAChB,gBAAApE,GAAA,OAAA8D,EAAAtmE,MAAA,KAAAtP,UAAA,EAPoB,IASvB,OAAO0yE,CACT,sgCCxDA,IAAa0F,GAAsB,SAAAlF,IAAAC,EAAAA,EAAAA,GAAAiF,EAAAlF,GAAA,IAAAE,EAAAiF,GAAAD,GACjC,SAAwFA,EAAAx7B,GAAA,IAA1EwJ,EAAMxJ,EAANwJ,OAAQh0B,EAAKwqB,EAALxqB,MAAK,OAAAkhD,EAAAA,EAAAA,GAAA,KAAA8E,GACnBhF,EAAAptE,KAAA,MAAEogD,OAAQ,CAAEmtB,YAAW+E,GAAAA,GAAA,GAAOlyB,EAAOmtB,aAAW,IAAEE,eAAgBC,EAAAA,iBAAAA,UAA6BthD,MAAAA,GACvG,CAqDC,OArDAuhD,EAAAA,EAAAA,GAAAyE,EAAA,EAAA70C,IAAA,cAAAz8B,MAAA,eAAA8sE,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAC,EAAkB5qD,GAAsB,OAAA2qD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,cACtCwiD,EAAAC,OAAA,SAAArpB,QAAQC,WAAS,wBAAAmpB,EAAAG,OAAA,GAAAJ,OACzB,gBAAA5xC,GAAA,OAAAq0C,EAAAtkE,MAAA,KAAAtP,UAAA,EAJA,IAIA,CAAAujC,IAAA,gBAAAz8B,MAAA,eAAA+sE,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAU,EAAoBkC,GAAsC,OAAA5C,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,OACX,OAApD/iB,KAAK0sE,6BAA6BzE,GAAkBjC,EAAAjjD,KAAA,EAC9C/iB,KAAK2sE,YAAY1E,GAAiB,wBAAAjC,EAAAN,OAAA,GAAAK,EAAA,UACzC,gBAAAJ,GAAA,OAAAqC,EAAAvkE,MAAA,KAAAtP,UAAA,EALA,IAKA,CAAAujC,IAAA,gBAAAz8B,MAAA,eAES4tE,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAkB,IAAA,IAAAhC,EAAAqI,EAAAC,EAAA,OAAAxH,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAA1jD,KAAA0jD,EAAAzjD,MAAA,UACH/iB,KAAKsoE,SAAU,CAAF9B,EAAAzjD,KAAA,cAAQomD,EAAAA,GAAAA,SAAAA,OAA0B,CAAEz+D,QAAS,2CAA4CV,KAAM,OAAO,OACzG,OAAPu6D,EAAYvkE,KAAKu6C,OAAOmtB,YAAxBnD,QAAOiC,EAAAzjD,KAAA,EAEgB/iB,KAAKsoE,SAASvW,QAAyB,CACpEE,OAAQ,mBACR,OAE0I,GAJtI2a,EAAgBpG,EAAAf,KAIhBoH,GAAsBC,EAAAA,EAAAA,aAAYF,EAAiBrwE,YAAcqwE,EAAmB,KAAH/nE,OAAQhD,SAAS+qE,EAAkB,IAAIrwE,SAAS,KACnIgoE,IAAYsI,EAAmB,CAAArG,EAAAzjD,KAAA,cAC3BgqD,EAAAA,0BAAAA,mBAA6C,oCAADloE,OAAqCgoE,EAAmB,gBAAAhoE,OAAe0/D,IAAU,OAI9E,OAFvDvkE,KAAKqlB,OAAO,CAAEk/C,QAASsI,IACvB7sE,KAAKsoE,SAAS0E,KAAK,UAAW,CAAEzI,QAASvkE,KAAKumB,MAAMg+C,UACpDvkE,KAAKsoE,SAAS0E,KAAK,eAAgBhtE,KAAKumB,MAAMg+C,SAASiC,EAAAhB,OAAA,SAChDxlE,KAAKumB,MAAMg+C,SAAO,yBAAAiC,EAAAd,OAAA,GAAAa,EAAA,UAC1B,yBAAAsC,EAAAplE,MAAA,KAAAtP,UAAA,EAlBA,IAkBA,CAAAujC,IAAA,cAAAz8B,MAAA,eAAAgyE,GAAA7H,EAAAA,EAAAA,GAAAC,IAAAA,MAEO,SAAAgE,EAAkBpB,GAAsC,IAAApB,EAAAsB,EAAAE,EAAAH,EAAAI,EAAA,OAAAjD,IAAAA,MAAA,SAAAiE,GAAA,cAAAA,EAAAxmD,KAAAwmD,EAAAvmD,MAAA,OAQrB,OAPnC8jD,EAAmBsF,GAAiBlE,GACpCE,EAAmBvB,GAAuBC,GAC1CwB,EAAwBmC,GAAsCvC,IAC9DC,EAAS,IAAIK,EAAAA,IACZ1wE,KAAKswE,GACZD,EAAOrwE,KAAKwwE,GACNC,GAAWI,EAAAA,EAAAA,IAAmBR,GACpCloE,KAAK2oE,0BAA0BL,GAAUgB,EAAAvmD,KAAA,GACnC/iB,KAAK4oE,gBAAe,yBAAAU,EAAA5D,OAAA,GAAA2D,EAAA,UAC3B,gBAAAzD,GAAA,OAAAqH,EAAAxpE,MAAA,KAAAtP,UAAA,EAZA,IAYA,CAAAujC,IAAA,+BAAAz8B,MAAA,eAAAiyE,GAAA9H,EAAAA,EAAAA,GAAAC,IAAAA,MAEO,SAAA2E,EAAmC/B,GAAsC,IAAAkF,EAAA,YAAA9H,IAAAA,MAAA,SAAA8E,GAAA,cAAAA,EAAArnD,KAAAqnD,EAAApnD,MAAA,OAC/EklD,EAAiB/U,GAAG,kBAAiB,eAAAjiB,GAAAm0B,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAmE,EAAOl2B,GAAkB,OAAA+xB,IAAAA,MAAA,SAAAoE,GAAA,cAAAA,EAAA3mD,KAAA2mD,EAAA1mD,MAAA,OAC9DoqD,EAAK7E,SAAS0E,KAAK,kBAAmB15B,GAAU,wBAAAm2B,EAAA/D,OAAA,GAAA8D,OACjD,gBAAAtD,GAAA,OAAAj1B,EAAAxtC,MAAA,KAAAtP,UAAA,EAFoC,IAGrC8zE,EAAiB/U,GAAG,eAAc,eAAA/hB,GAAAi0B,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAsE,EAAOpF,GAAe,IAAAsI,EAAA,OAAAxH,IAAAA,MAAA,SAAAwE,GAAA,cAAAA,EAAA/mD,KAAA+mD,EAAA9mD,MAAA,OAKrD,OAJG8pD,GAAsBC,EAAAA,EAAAA,aAAYvI,GAAWA,EAAU,KAAH1/D,OAAQhD,SAAS0iE,EAAS,IAAIhoE,SAAS,KAEjG4wE,EAAKC,UAAU,CACb1F,YAAkB+E,GAAAA,GAAA,GAAAU,EAAK5yB,OAAOmtB,aAAW,IAAEnD,QAASsI,MACnDhD,EAAA9mD,KAAA,EACGoqD,EAAKE,cAAcpF,GAAiB,wBAAA4B,EAAAnE,OAAA,GAAAiE,OAC3C,gBAAAxD,GAAA,OAAAh1B,EAAA1tC,MAAA,KAAAtP,UAAA,EAPiC,IAO/B,wBAAAg2E,EAAAzE,OAAA,GAAAsE,OACJ,gBAAA/D,GAAA,OAAAiH,EAAAzpE,MAAA,KAAAtP,UAAA,EAdA,MAcAo4E,CAAA,CAxDgC,CAAQzD,EAAAA,+hCCF3C,SAAsBN,GAAmB90C,GAAA,OAAA45C,GAAA7pE,MAAC,KAADtP,UAAA,CAsExC,SAAAm5E,KAAA,OAAAA,IAtEMlI,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAkI,EAAAx8B,GAAA,IAAAqvB,EAAA4K,EAAAwC,EAAAC,EAAA5G,EAAA,OAAAxB,IAAAA,MAAA,SAAAqI,GAAA,cAAAA,EAAA5qD,KAAA4qD,EAAA3qD,MAAA,OASJ,GARDq9C,EAAArvB,EAAAqvB,QACA4K,EAAsBj6B,EAAtBi6B,uBAKMwC,EAAmB,WACvB,OAAO7P,GAAQoC,cAAc3tE,GAAOC,KAAK+tE,EAAS,SAE7B,kBAAZA,EAAoB,CAAAsN,EAAA3qD,KAAA,cAAQgqD,EAAAA,0BAAAA,cAAwC,4BAA2B,OAyDzG,OAxDKU,EAAUD,IACV3G,EAAsC,CAC1Cf,gBAAiB,WAAF,IAAEkD,GAAA5D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,cAAAwiD,EAAAC,OAAA,SACR,CAACiI,EAAQl1C,UAAUoU,aAAW,wBAAA44B,EAAAG,OAAA,GAAAJ,OACtC,yBAAA0D,EAAAvlE,MAAA,KAAAtP,UAAA,EAFgB,GAGjB+wE,YAAa,WAAF,IAAE+D,GAAA7D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAU,IAAA,OAAAV,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,cAAAijD,EAAAR,OAAA,SAAY,CAACiI,EAAQl1C,UAAUoU,aAAW,wBAAAq5B,EAAAN,OAAA,GAAAK,EAAA,8BAAAkD,EAAAxlE,MAAA,KAAAtP,UAAA,EAA1C,GAEb+yE,cAAe,WAAF,IAAEgC,GAAA9D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAkB,IAAA,OAAAlB,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAA1jD,KAAA0jD,EAAAzjD,MAAA,cAAAyjD,EAAAhB,OAAA,SAAYpF,GAAO,wBAAAoG,EAAAd,OAAA,GAAAa,EAAA,8BAAA2C,EAAAzlE,MAAA,KAAAtP,UAAA,EAAnB,GACfgzE,aAAc,WAAF,IAAEiC,GAAAhE,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAgE,IAAA,OAAAhE,IAAAA,MAAA,SAAAiE,GAAA,cAAAA,EAAAxmD,KAAAwmD,EAAAvmD,MAAA,cAAAumD,EAAA9D,OAAA,SAAY94B,IAAAA,OAAY+gC,EAAQ9hC,YAAU,wBAAA29B,EAAA5D,OAAA,GAAA2D,EAAA,8BAAAD,EAAA3lE,MAAA,KAAAtP,UAAA,EAA1C,GAEd2yE,gBAAiB,WAAF,IAAAyC,GAAAnE,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAmE,EAAOhF,GAA0C,IAAAyF,EAAAp1B,EAAA,OAAAwwB,IAAAA,MAAA,SAAAoE,GAAA,cAAAA,EAAA3mD,KAAA2mD,EAAA1mD,MAAA,UACjD,QADiDknD,EAC3DzF,EAAInmB,cAAM,IAAA4rB,GAAVA,EAAYv/D,QAAS,CAAF++D,EAAA1mD,KAAA,cAChBomD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,OAGb,OAD3Bt0B,EAAc2vB,EAAInmB,OAAO3zC,SACnBsvC,YAAYyzB,GAAShE,EAAAjE,OAAA,SAC1B3wB,GAAW,wBAAA40B,EAAA/D,OAAA,GAAA8D,OACnB,gBAAA7D,GAAA,OAAA4D,EAAA9lE,MAAA,KAAAtP,UAAA,EAPgB,GASjB8yE,YAAa,WAAF,IAAAyC,GAAAtE,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAsE,EAAOnF,GAAyC,IAAA0F,EAAAyD,EAAA,OAAAtI,IAAAA,MAAA,SAAAwE,GAAA,cAAAA,EAAA/mD,KAAA+mD,EAAA9mD,MAAA,UAC5C,QAD4CmnD,EACtD1F,EAAInmB,cAAM,IAAA6rB,GAAVA,EAAYx/D,QAAS,CAAFm/D,EAAA9mD,KAAA,cAChBomD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,OAE6B,OAArEwE,EAAYC,KAAAA,KAAAA,SAAmBpJ,EAAInmB,OAAO3zC,QAAS+iE,EAAQ9hC,WAAUk+B,EAAArE,OAAA,SACpEmI,GAAS,wBAAA9D,EAAAnE,OAAA,GAAAiE,OACjB,gBAAA/D,GAAA,OAAA8D,EAAAjmE,MAAA,KAAAtP,UAAA,EANY,GAQb4yE,uBAAwB,WAAF,IAAAqD,GAAAhF,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAA2E,EAAOxF,GAA0C,IAAA4H,EAAAyB,EAAAh5B,EAAAvc,EAAA,OAAA+sC,IAAAA,MAAA,SAAA8E,GAAA,cAAAA,EAAArnD,KAAAqnD,EAAApnD,MAAA,UACxD,QADwDqpD,EAClE5H,EAAInmB,cAAM,IAAA+tB,GAAVA,EAAY1hE,QAAS,CAAFy/D,EAAApnD,KAAA,cAChBomD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,OAEO,GAA/C0E,EAAuB7C,IACF,CAAFb,EAAApnD,KAAA,cAAQomD,EAAAA,GAAAA,SAAAA,OAA0B,CAAEz+D,QAAS,8BAA+BV,KAAM,OAAO,OAGxF,OADpB6qC,EAAc2vB,EAAInmB,OAAO3zC,SACnBouB,KAAK20C,GAAStD,EAAApnD,KAAA,EAER8qD,EAAqB9b,QAAgB,CACrDE,OAAQ,kBACR5T,OAAQ,CAAC3R,IAAAA,OAAYmI,EAAY/I,gBACjC,OAHO,OAAHxT,EAAG6xC,EAAA1E,KAIF0E,EAAA3E,OAAA,UAAEpgC,UAAW9M,IAAK,yBAAA6xC,EAAAzE,OAAA,GAAAsE,OAC1B,gBAAA/D,GAAA,OAAAmE,EAAA3mE,MAAA,KAAAtP,UAAA,EAfuB,GAiBxB6yE,oBAAqB,WAAF,IAAA+C,GAAA3E,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAgF,EAAO7F,GAA4C,IAAA6H,EAAAC,EAAAwB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7I,IAAAA,MAAA,SAAAkF,GAAA,cAAAA,EAAAznD,KAAAynD,EAAAxnD,MAAA,UACvD,QAAXspD,EAAC7H,EAAInmB,cAAM,IAAAguB,GAAVA,EAAY3hE,SAAsB,QAAV4hE,EAAA9H,EAAInmB,cAAM,IAAAiuB,GAAVA,EAAY5hE,QAAQlY,OAAM,CAAA+3E,EAAAxnD,KAAA,cAC/ComD,EAAAA,GAAAA,IAAAA,cAA4B,WAAU,OAGxC4E,EAAiB,QAAbD,EAAGtJ,EAAInmB,cAAM,IAAAyvB,OAAA,EAAVA,EAAYpjE,QAAOsjE,EACfG,GAAAJ,GAAQ,IAAE,IAA3B,IAA6BC,EAAA90D,MAAA+0D,EAAAD,EAAAxtE,KAAAu8B,MAAlBmxC,EAAED,EAAAhzE,MACSizE,EACRl0B,YAAYyzB,EACzB,OAAApgC,GAAA2gC,EAAAx1E,EAAA60C,EAAA,SAAA2gC,EAAA1+C,GAAA,QAAAi7C,EAAA/E,OAAA,SACMuI,GAAI,wBAAAxD,EAAA7E,OAAA,GAAA2E,OACZ,gBAAAnE,GAAA,OAAA6D,EAAAtmE,MAAA,KAAAtP,UAAA,EAXoB,IAYtBu5E,EAAAlI,OAAA,SAEMqB,GAAgB,wBAAA6G,EAAAhI,OAAA,GAAA6H,OACxBD,GAAA7pE,MAAA,KAAAtP,UAAA,qgCCxDD,IAAai6E,GAAyB,SAAA/G,IAAAC,EAAAA,EAAAA,GAAA8G,EAAA/G,GAAA,IAAAE,EAAA8G,GAAAD,GACpC,SAAiGA,EAAAr9B,GAAA,IAAnFwJ,EAAMxJ,EAANwJ,OAAQh0B,EAAKwqB,EAALxqB,MAAK,OAAAkhD,EAAAA,EAAAA,GAAA,KAAA2G,GACnB7G,EAAAptE,KAAA,MAAEogD,OAAQ,CAAEmtB,YAAW4G,GAAAA,GAAA,GAAO/zB,EAAOmtB,aAAW,IAAEE,eAAgBC,EAAAA,iBAAAA,UAA6BthD,MAAAA,GACvG,CAmHC,OAnHAuhD,EAAAA,EAAAA,GAAAsG,EAAA,EAAA12C,IAAA,SAAAz8B,MAAA,eAWMszE,GAAAnJ,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,UACA/iB,KAAKumB,MAAMgO,WAAU,CAAAgxC,EAAAxiD,KAAA,cAClBomD,EAAAA,GAAAA,SAAAA,OAA0B,CAAEz+D,QAAS,4EAA6EV,KAAM,OAAO,cAAAu7D,EAAAxiD,KAAA,EACjI/iB,KAAKqtE,cAAcrtE,KAAKumB,MAAMgO,YAAW,cAAAgxC,EAAAC,OAAA,SACxCxlE,KAAK6tE,qBAAqB9b,QAA2B,CAAEE,OAAQ,kBAAiB,wBAAAsT,EAAAG,OAAA,GAAAJ,EAAA,UACxF,yBAAAiJ,EAAA9qE,MAAA,KAAAtP,UAAA,EAhBA,IAgBA,CAAAujC,IAAA,gBAAAz8B,MAAA,eAAA+sE,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAU,EAAoB3F,GAAe,IAAAyG,EAAAsB,EAAAD,EAAAsG,EAAAxJ,EAAAsD,EAAA,OAAAjD,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,cAAAijD,EAAAjjD,KAAA,EACTylD,GAAoB,CAAEpI,QAAAA,EAAS4K,uBAAwBhrE,KAAKgrE,uBAAuBpxE,KAAKoG,QAAQ,OAatF,OAbnC6mE,EAAgBb,EAAAP,KAEhB0C,EAAmBvB,GAAuBC,GAE1CqB,EAAS,IAAIK,EAAAA,GAAYiG,EACD3J,GAAoB7kE,KAAKu6C,OAAOmtB,aAAtD1C,EAAiBwJ,EAAjBxJ,kBACRkD,EAAOrwE,KAAKmI,KAAKyuE,4BACjBvG,EAAOrwE,KAAKmI,KAAK0uE,wBACjBxG,EAAOrwE,KAAKswE,GACZD,EAAOrwE,KAAKmtE,GAENsD,GAAWI,EAAAA,EAAAA,IAAmBR,GAEpCloE,KAAK2oE,0BAA0BL,GAAUtC,EAAAjjD,KAAA,GAEnC/iB,KAAK4oE,gBAAe,yBAAA5C,EAAAN,OAAA,GAAAK,EAAA,UAC3B,gBAAAryC,GAAA,OAAAs0C,EAAAvkE,MAAA,KAAAtP,UAAA,EAnBA,IAmBA,CAAAujC,IAAA,gBAAAz8B,MAAA,eAAA0zE,GAAAvJ,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAkB,EAAoBloB,GAA8B,OAAAgnB,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAA1jD,KAAA0jD,EAAAzjD,MAAA,UAClD/iB,KAAK6tE,qBAAsB,CAAFrH,EAAAzjD,KAAA,cAAQomD,EAAAA,GAAAA,SAAAA,OAA0B,CAAEz+D,QAAS,8BAA+BV,KAAM,OAAO,cAAAw8D,EAAAzjD,KAAA,EAC7F/iB,KAAK6tE,qBAAqB9b,QAAyB,CAAEE,OAAQ,qBAAqB,OAA3F,GAAAuU,EAAAf,OACGpnB,EAAO9pB,WAAU,CAAAiyC,EAAAzjD,KAAA,gBAAAyjD,EAAAzjD,KAAA,EAC7B/iB,KAAKqtE,cAAchvB,EAAO9pB,YAAW,OAClB,OADkBiyC,EAC3CoI,GAAA5uE,KAAK6tE,qBAAoBrH,EAAAzjD,KAAA,GACP/iB,KAAK6tE,qBAAqB9b,QAA2B,CAAEE,OAAQ,oBAAoB,QAAAuU,EAAA9hC,GAAA8hC,EAAAf,KAAAe,EAAA7hC,GAAA,CAAnG2O,SAAQkzB,EAAA9hC,IAAA8hC,EADgBoI,GAAA5B,KAAI7yE,KAAAqsE,EAAAoI,GAAC,kBAAiBpI,EAAA7hC,IAAA,yBAAA6hC,EAAAd,OAAA,GAAAa,EAAE,UAIrD,gBAAAZ,GAAA,OAAAgJ,EAAAlrE,MAAA,KAAAtP,UAAA,EAXA,IAWA,CAAAujC,IAAA,cAAAz8B,MAAA,eAAA8sE,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAgE,EAAkBhrB,GAA2B,IAAAqpB,EAAAtH,EAAA,OAAAiF,IAAAA,MAAA,SAAAiE,GAAA,cAAAA,EAAAxmD,KAAAwmD,EAAAvmD,MAAA,UAC7C/iB,KAAK6tE,qBAAsB,CAAFvE,EAAAvmD,KAAA,cAAQomD,EAAAA,GAAAA,SAAAA,OAA0B,CAAEz+D,QAAS,8BAA+BV,KAAM,OAAO,OAKvF,OAJ1B09D,EAAc1nE,KAAK6uE,eAAexwB,EAAOkmB,SAC/CvkE,KAAKqlB,OAAO,CACVk/C,QAAS,YAEXvkE,KAAKotE,UAAU,CAAE1F,YAAAA,IAAe4B,EAAAvmD,KAAA,EACV/iB,KAAK6tE,qBAAqB9b,QAAyB,CAAEE,OAAQ,qBAAqB,OAA3F,OAAPmO,EAAOkJ,EAAA7D,KAAA6D,EAAAvmD,KAAG,GACV/iB,KAAKqtE,cAAcjN,GAAQ,yBAAAkJ,EAAA5D,OAAA,GAAA2D,EAAA,UAClC,gBAAAzD,GAAA,OAAAmC,EAAAtkE,MAAA,KAAAtP,UAAA,EAXA,IAWA,CAAAujC,IAAA,gBAAAz8B,MAAA,eAES4tE,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAmE,IAAA,IAAAsF,EAAApH,EAAA,OAAArC,IAAAA,MAAA,SAAAoE,GAAA,cAAAA,EAAA3mD,KAAA2mD,EAAA1mD,MAAA,UACH/iB,KAAK6tE,qBAAsB,CAAFpE,EAAA1mD,KAAA,cAAQomD,EAAAA,GAAAA,SAAAA,OAA0B,CAAEz+D,QAAS,8BAA+BV,KAAM,OAAO,cAAAy/D,EAAA1mD,KAAA,EAClG/iB,KAAK6tE,qBAAqB9b,QAAyB,CACtEE,OAAQ,YACR5T,OAAQ,KACR,OACiB,GAJbywB,EAAMrF,EAAAhE,KAIJiC,EAAgB1nE,KAAKu6C,OAArBmtB,YACO,OAAXoH,EAAe,CAAArF,EAAA1mD,KAAA,cACXgqD,EAAAA,0BAAAA,mBAA6C,sDAADloE,OAAuD6iE,EAAY5C,YAAY,OAKlI,OAJD9kE,KAAKqlB,OAAO,CAAEk/C,QAASmD,EAAYnD,UAC/BvkE,KAAKumB,MAAMg+C,UAAYmD,EAAYnD,UACrCvkE,KAAKsoE,SAAS0E,KAAK,eAAgBhtE,KAAKumB,MAAMg+C,SAC9CvkE,KAAKsoE,SAAS0E,KAAK,UAAW,CAAEzI,QAASvkE,KAAKumB,MAAMg+C,WACrDkF,EAAAjE,OAAA,SACMxlE,KAAKumB,MAAMg+C,SAAO,yBAAAkF,EAAA/D,OAAA,GAAA8D,EAAA,UAC1B,yBAAAX,EAAAplE,MAAA,KAAAtP,UAAA,EAjBA,IAiBA,CAAAujC,IAAA,2BAAAz8B,MAEO,WAAwB,IAAAkyE,EAAA,KACxB4B,EAA4C,CAChDC,kBAAmB,WAAF,IAAAC,GAAA7J,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAsE,EAAOnF,GAAyC,IAAAyF,EAAA1F,EAAA2K,EAAAC,EAAAC,EAAAC,EAAA,OAAAhK,IAAAA,MAAA,SAAAwE,GAAA,cAAAA,EAAA/mD,KAAA+mD,EAAA9mD,MAAA,UAC5DyhD,EAAInmB,OAAQ,CAAFwrB,EAAA9mD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,cAA4B,0BAAyB,OACN,GADMc,EACDzF,EAAInmB,OAAvEkmB,EAAA0F,EAAA1F,QAAS2K,EAAAjF,EAAAiF,UAAWC,EAAOlF,EAAPkF,QAASC,EAAiBnF,EAAjBmF,kBAAmBC,EAAcpF,EAAdoF,eAEnD9K,EAAS,CAAFsF,EAAA9mD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,cAA4B,kCAAiC,UAC5EgG,GAA8B,IAAnBA,EAAQ38E,OAAY,CAAAq3E,EAAA9mD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,cAA4B,kCAAiC,UACpGkG,EAAgB,CAAFxF,EAAA9mD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,cAA4B,yCAAwC,OAC/FgE,EAAKmC,SAAS,CACZ1H,eAAgBC,EAAAA,iBAAAA,OAChBtD,QAAAA,EACAgL,QAAQ,OAAAF,QAAc,IAAdA,OAAc,EAAdA,EAAgBG,SAAU,MAClCC,YAAY,OAAAJ,QAAc,IAAdA,OAAc,EAAdA,EAAgBz7E,OAAQ,SACpC87E,YAAaR,EACbpK,UAAWqK,EAAQ,GACnBQ,eAAe,OAAAP,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAoB,KAAM,KACxC,yBAAAvF,EAAAnE,OAAA,GAAAiE,OACJ,gBAAA1D,GAAA,OAAAgJ,EAAAxrE,MAAA,KAAAtP,UAAA,EAhBkB,GAiBnBy7E,kBAAmB,WAAF,IAAAC,GAAAzK,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAA2E,EAAOxF,GAAqC,OAAAa,IAAAA,MAAA,SAAA8E,GAAA,cAAAA,EAAArnD,KAAAqnD,EAAApnD,MAAA,UACxDyhD,EAAInmB,OAAQ,CAAF8rB,EAAApnD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,cAA4B,0BAAyB,UACvE3E,EAAInmB,OAAOkmB,QAAS,CAAF4F,EAAApnD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,cAA4B,mBAAkB,cAAAgB,EAAApnD,KAAA,EACvEoqD,EAAK2C,YAAYtL,EAAInmB,QAAO,wBAAA8rB,EAAAzE,OAAA,GAAAsE,OACnC,gBAAA9D,GAAA,OAAA2J,EAAApsE,MAAA,KAAAtP,UAAA,EAJkB,IAOrB,gBdpCsGw9C,GAAA,IAA5Dq9B,EAAiBr9B,EAAjBq9B,kBAAmBY,EAAiBj+B,EAAjBi+B,kBAC/D,OAAOhL,EAAAA,EAAAA,IAAgB,CACrBwB,GAA2D,iBAAkB4I,GAC7E5I,GAAuD,oBAAqBwJ,IAEhF,Cc8BkCG,CAA4BhB,EAE5D,GAAC,CAAAr3C,IAAA,uBAAAz8B,MAEO,WAAoB,IAAA+0E,EAAA,KACpBC,EAAoC,CACxCC,iBAAkB,WAAF,IAAAC,GAAA/K,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAgF,EAAO7F,GAAwC,IAAAjwC,EAAA,OAAA8wC,IAAAA,MAAA,SAAAkF,GAAA,cAAAA,EAAAznD,KAAAynD,EAAAxnD,MAAA,UAC1DyhD,EAAInmB,OAAQ,CAAFksB,EAAAxnD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,cAA4B,0BAAyB,UACvE3E,EAAInmB,OAAO9pB,WAAY,CAAFg2C,EAAAxnD,KAAA,cAAQomD,EAAAA,GAAAA,IAAAA,cAA4B,sBAAqB,OACjE,OAAV50C,EAAeiwC,EAAInmB,OAAnB9pB,WAAUg2C,EAAAxnD,KAAA,EACZitD,EAAKI,cAAc,CAAE77C,WAAAA,IAAa,wBAAAg2C,EAAA7E,OAAA,GAAA2E,OACzC,gBAAAlE,GAAA,OAAAgK,EAAA1sE,MAAA,KAAAtP,UAAA,EALiB,IAOpB,OdtCY,SAA8Dy9C,GAAA,IAApCs+B,EAAgBt+B,EAAhBs+B,iBACxC,OAAOtL,EAAAA,EAAAA,IAAgB,CAACwB,GAA0D,gBAAiB8J,IACrG,CcoCWG,CAAwBJ,EACjC,KAAC7B,CAAA,CAtHmC,CAAQtF,EAAAA,YAAjCsF,GAAyB,qCAAAn9B,GAAAm0B,EAAAA,EAAAA,GAAAC,IAAAA,MAKA,SAAAkI,EAAOlvB,GAG1C,IAAAiyB,EAAA,OAAAjL,IAAAA,MAAA,SAAAqI,GAAA,cAAAA,EAAA5qD,KAAA4qD,EAAA3qD,MAAA,OACsG,OAA/FutD,EAAkB,IAAIlC,GAAyB,CAAE7zB,OAAQ,CAAEmtB,YAAarpB,EAAOqpB,eAAgBgG,EAAA3qD,KAAA,EAC/FutD,EAAgBjD,cAAchvB,EAAO+hB,SAAQ,cAAAsN,EAAAlI,OAAA,SAC5C8K,GAAe,wBAAA5C,EAAAhI,OAAA,GAAA6H,OACvB,gBAAA9G,GAAA,OAAAx1B,EAAAxtC,MAAA,KAAAtP,UAAA,EAZmC,IClBtC,IAAao8E,GAAY,WAGvB,SAAAA,EAAYjI,IAAkCb,EAAAA,EAAAA,GAAA,KAAA8I,IAAAC,EAAAA,EAAAA,GAAA,wBAC5CxwE,KAAKsoE,SAAWA,CAClB,CAqDC,OArDAR,EAAAA,EAAAA,GAAAyI,EAAA,EAAA74C,IAAA,kBAAAz8B,MAAA,eAEM+tE,GAAA5D,EAAAA,EAAAA,GAAAC,IAAAA,MAAA,SAAAC,IAAA,IAAAhyB,EAAA,OAAA+xB,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAziD,KAAAyiD,EAAAxiD,MAAA,cAAAwiD,EAAAxiD,KAAA,EACkB/iB,KAAKsoE,SAASvW,QAAkB,CACrDE,OAAQ,kBACR5T,OAAQ,CAAC,IACT,OAHY,OAAR/K,EAAQiyB,EAAAE,KAAAF,EAAAC,OAAA,SAIPlyB,GAAQ,wBAAAiyB,EAAAG,OAAA,GAAAJ,EAAA,UAChB,yBAAA0D,EAAAvlE,MAAA,KAAAtP,UAAA,EARA,IAQA,CAAAujC,IAAA,yBAAAz8B,MAAA,eAAAmvE,GAAAhF,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAU,EAA6BlxB,GAAwB,IAAA47B,EAAArrC,EAAA,OAAAigC,IAAAA,MAAA,SAAAW,GAAA,cAAAA,EAAAljD,KAAAkjD,EAAAjjD,MAAA,cAAAijD,EAAAjjD,KAAA,EAC9B/iB,KAAKsoE,SAASvW,QAA+B,CACvEE,OAAQ,yBACR5T,OAAQ,CACN3zC,QAASmqC,KAEX,OALe,OAKf47B,EAAAzK,EAAAP,KALMrgC,EAASqrC,EAATrrC,UAMD4gC,EAAAR,OAAA,UAAEpgC,UAAAA,IAAW,wBAAA4gC,EAAAN,OAAA,GAAAK,EAAA,UACrB,gBAAAryC,GAAA,OAAA02C,EAAA3mE,MAAA,KAAAtP,UAAA,EAVA,IAUA,CAAAujC,IAAA,kBAAAz8B,MAAA,eAAAsuE,GAAAnE,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAkB,EAAsB1xB,GAAwB,IAAA67B,EAAA,OAAArL,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAA1jD,KAAA0jD,EAAAzjD,MAAA,cAAAyjD,EAAAzjD,KAAA,EAClB/iB,KAAKsoE,SAASvW,QAAQ,CACrDE,OAAQ,kBACR5T,OAAQ,CACN3zC,QAASmqC,KAEX,OALqB,OAAjB67B,EAAiBlK,EAAAf,KAAAe,EAAAhB,OAAA,SAMhBkL,GAAiB,wBAAAlK,EAAAd,OAAA,GAAAa,EAAA,UACzB,gBAAAZ,GAAA,OAAA4D,EAAA9lE,MAAA,KAAAtP,UAAA,EAVA,IAUA,CAAAujC,IAAA,sBAAAz8B,MAAA,eAAA8uE,GAAA3E,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAgE,EAA0BrpB,GAA2B,IAAA2wB,EAAA,OAAAtL,IAAAA,MAAA,SAAAiE,GAAA,cAAAA,EAAAxmD,KAAAwmD,EAAAvmD,MAAA,cAAAumD,EAAAvmD,KAAA,EACxB/iB,KAAKsoE,SAASvW,QAAQ,CACtDE,OAAQ,sBACR5T,OAAQ,CACN3zC,QAASs1C,KAEX,OALsB,OAAlB2wB,EAAkBrH,EAAA7D,KAAA6D,EAAA9D,OAAA,SAMjBmL,GAAkB,wBAAArH,EAAA5D,OAAA,GAAA2D,EAAA,UAC1B,gBAAAzD,GAAA,OAAAmE,EAAAtmE,MAAA,KAAAtP,UAAA,EAVA,IAUA,CAAAujC,IAAA,cAAAz8B,MAAA,eAAAyuE,GAAAtE,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAmE,EAAkBrqE,GAAgB,IAAA6lD,EAAA,OAAAqgB,IAAAA,MAAA,SAAAoE,GAAA,cAAAA,EAAA3mD,KAAA2mD,EAAA1mD,MAAA,cAAA0mD,EAAA1mD,KAAA,EAChB/iB,KAAKsoE,SAASvW,QAAoB,CACvDE,OAAQ,cACR5T,OAAQ,CACN3zC,QAASvL,KAEX,OALY,OAAR6lD,EAAQykB,EAAAhE,KAAAgE,EAAAjE,OAAA,SAMPxgB,GAAsB,wBAAAykB,EAAA/D,OAAA,GAAA8D,EAAA,UAC9B,gBAAAvD,GAAA,OAAAyD,EAAAjmE,MAAA,KAAAtP,UAAA,EAVA,IAUA,CAAAujC,IAAA,UAAAz8B,MAAA,eAAA21E,GAAAxL,EAAAA,EAAAA,GAAAC,IAAAA,MAEM,SAAAsE,EAAiB52B,GAAsB,IAAA7d,EAAA,OAAAmwC,IAAAA,MAAA,SAAAwE,GAAA,cAAAA,EAAA/mD,KAAA+mD,EAAA9mD,MAAA,cAAA8mD,EAAA9mD,KAAA,EACvB/iB,KAAKsoE,SAASvW,QAAWhf,GAAK,OAAvC,OAAN7d,EAAM20C,EAAApE,KAAAoE,EAAArE,OAAA,SACLtwC,GAAW,wBAAA20C,EAAAnE,OAAA,GAAAiE,EAAA,UACnB,gBAAAzD,GAAA,OAAA0K,EAAAntE,MAAA,KAAAtP,UAAA,EALA,MAKAo8E,CAAA,CA1DsB,oICLzB,MAAAM,EAAA/+E,EAAA,OAcA,MAAag/E,UAA4B98E,MAMvCtB,YAAYsX,EAAcU,EAAiBvL,GAEzC,IAAKtM,OAAOC,UAAUkX,GACpB,MAAM,IAAIhW,MACR,8BAGJ,IAAK0W,GAA8B,kBAAZA,EACrB,MAAM,IAAI1W,MACR,wCAIJ,MAAM0W,GACN,KAAKV,KAAOA,OACC5V,IAAT+K,IACF,KAAKA,KAAOA,EAEhB,CAKA2sC,YACE,MAAMilC,EAAyC,CAC7C/mE,KAAM,KAAKA,KACXU,QAAS,KAAKA,SAQhB,YANkBtW,IAAd,KAAK+K,OACP4xE,EAAW5xE,KAAO,KAAKA,MAErB,KAAKsL,QACPsmE,EAAWtmE,MAAQ,KAAKA,OAEnBsmE,CACT,CAMAx0E,WACE,OAAOs0E,EAAArjC,QACL,KAAK1B,YACLklC,EACA,EAEJ,EArDFj0E,EAAAA,iBAAA+zE,EAoFA,SAASE,EAAkBt2D,EAAYzf,GACrC,GAAc,eAAVA,EAGJ,OAAOA,CACT,CA7BA8B,EAAAA,sBAAA,cAA8C+zE,EAM5Cp+E,YAAYsX,EAAcU,EAAiBvL,GAEzC,IAYJ,SAAgC6K,GAC9B,OAAOnX,OAAOC,UAAUkX,IAASA,GAAQ,KAAQA,GAAQ,IAC3D,CAdSinE,CAAuBjnE,GAC1B,MAAM,IAAIhW,MACR,6DAIJ,MAAMgW,EAAMU,EAASvL,EACvB,kHClEWpC,EAAAA,WAAyB,CACpCwlD,IAAK,CACH2uB,cAAe,KACfC,kBAAmB,MACnBC,qBAAsB,MACtBC,qBAAsB,MACtBC,oBAAqB,MACrBC,eAAgB,MAChBC,OAAQ,MACRC,gBAAiB,MACjBC,gBAAiB,MACjBC,eAAgB,MAChBC,UAAW,OAEbtJ,SAAU,CACRuJ,oBAAqB,KACrBC,aAAc,KACdC,kBAAmB,KACnBC,aAAc,KACdC,kBAAmB,OAIVl1E,EAAAA,YAAc,CACzB,SAAU,CACRm1E,SAAU,eACVxnE,QAAS,yGAEX,SAAU,CACRwnE,SAAU,eACVxnE,QAAS,gDAEX,SAAU,CACRwnE,SAAU,eACVxnE,QAAS,iDAEX,SAAU,CACRwnE,SAAU,eACVxnE,QAAS,gCAEX,SAAU,CACRwnE,SAAU,eACVxnE,QAAS,4BAEX,SAAU,CACRwnE,SAAU,WACVxnE,QAAS,kBAEX,SAAU,CACRwnE,SAAU,WACVxnE,QAAS,uBAEX,SAAU,CACRwnE,SAAU,WACVxnE,QAAS,yBAEX,SAAU,CACRwnE,SAAU,WACVxnE,QAAS,yBAEX,SAAU,CACRwnE,SAAU,WACVxnE,QAAS,yBAEX,SAAU,CACRwnE,SAAU,WACVxnE,QAAS,2BAEX,KAAQ,CACNwnE,SAAU,WACVxnE,QAAS,8BAEX,KAAQ,CACNwnE,SAAU,WACVxnE,QAAS,4EAEX,KAAQ,CACNwnE,SAAU,WACVxnE,QAAS,oEAEX,KAAQ,CACNwnE,SAAU,WACVxnE,QAAS,iDAEX,KAAQ,CACNwnE,SAAU,WACVxnE,QAAS,6JC7Gb,MAAAynE,EAAArgF,EAAA,OACAsgF,EAAAtgF,EAAA,OACAugF,EAAAvgF,EAAA,OAuLA,SAASwgF,EAAsBtoE,EAAcrM,GAC3C,MAAO+M,EAASvL,GAAQozE,EAAU50E,GAClC,OAAO,IAAIw0E,EAAArB,iBACT9mE,EACAU,GAAW0nE,EAAAI,mBAAmBxoE,GAC9B7K,EAEJ,CAEA,SAASszE,EAAuBzoE,EAAcrM,GAC5C,MAAO+M,EAASvL,GAAQozE,EAAU50E,GAClC,OAAO,IAAIw0E,EAAAO,sBACT1oE,EACAU,GAAW0nE,EAAAI,mBAAmBxoE,GAC9B7K,EAEJ,CAEA,SAASozE,EAAa50E,GACpB,GAAIA,EAAK,CACP,GAAmB,kBAARA,EACT,MAAO,CAACA,GACH,GAAmB,kBAARA,IAAqBvF,MAAMC,QAAQsF,GAAM,CACzD,MAAM,QAAE+M,EAAO,KAAEvL,GAASxB,EAE1B,GAAI+M,GAA8B,kBAAZA,EACpB,MAAM,IAAI1W,MAAM,gCAElB,MAAO,CAAC0W,QAAWtW,EAAW+K,IAGlC,MAAO,EACT,CAxMapC,EAAAA,UAAY,CACvBwlD,IAAK,CAKHivB,MAAW7zE,GAA0B20E,EACnCD,EAAAM,WAAWpwB,IAAIivB,MAAO7zE,GAMxB8zE,eAAoB9zE,GAA0B20E,EAC5CD,EAAAM,WAAWpwB,IAAIkvB,eAAgB9zE,GAMjCg0E,cAAmBh0E,GAA0B20E,EAC3CD,EAAAM,WAAWpwB,IAAIovB,cAAeh0E,GAMhC+zE,eAAoB/zE,GAA0B20E,EAC5CD,EAAAM,WAAWpwB,IAAImvB,eAAgB/zE,GAMjCi0E,SAAcj0E,GAA0B20E,EACtCD,EAAAM,WAAWpwB,IAAIqvB,SAAUj0E,GAQ3Bi1E,OAAYryC,IACV,IAAKA,GAAwB,kBAATA,GAAqBnoC,MAAMC,QAAQkoC,GACrD,MAAM,IAAIvsC,MAAM,mEAElB,MAAM,KAAEgW,GAASu2B,EACjB,IAAK1tC,OAAOC,UAAUkX,IAASA,GAAQ,OAASA,GAAQ,MACtD,MAAM,IAAIhW,MACR,iEAGJ,OAAOs+E,EAAmBtoE,EAAMu2B,EAAK,EAMvC2wC,aAAkBvzE,GAA0B20E,EAC1CD,EAAAM,WAAWpwB,IAAI2uB,aAAcvzE,GAM/BwzE,iBAAsBxzE,GAA0B20E,EAC9CD,EAAAM,WAAWpwB,IAAI4uB,iBAAkBxzE,GAMnCyzE,oBAAyBzzE,GAA0B20E,EACjDD,EAAAM,WAAWpwB,IAAI6uB,oBAAqBzzE,GAMtC0zE,oBAAyB1zE,GAA0B20E,EACjDD,EAAAM,WAAWpwB,IAAI8uB,oBAAqB1zE,GAMtC2zE,mBAAwB3zE,GAA0B20E,EAChDD,EAAAM,WAAWpwB,IAAI+uB,mBAAoB3zE,GAMrC4zE,cAAmB5zE,GAA0B20E,EAC3CD,EAAAM,WAAWpwB,IAAIgvB,cAAe5zE,IAIlC2qE,SAAU,CAKRuJ,oBAAyBl0E,GAChB80E,EACLJ,EAAAM,WAAWrK,SAASuJ,oBAAqBl0E,GAO7Cm0E,aAAkBn0E,GACT80E,EACLJ,EAAAM,WAAWrK,SAASwJ,aAAcn0E,GAOtCo0E,kBAAuBp0E,GACd80E,EACLJ,EAAAM,WAAWrK,SAASyJ,kBAAmBp0E,GAO3Cq0E,aAAkBr0E,GACT80E,EACLJ,EAAAM,WAAWrK,SAAS0J,aAAcr0E,GAOtCs0E,kBAAuBt0E,GACd80E,EACLJ,EAAAM,WAAWrK,SAAS2J,kBAAmBt0E,GAO3Ck1E,OAAYtyC,IACV,IAAKA,GAAwB,kBAATA,GAAqBnoC,MAAMC,QAAQkoC,GACrD,MAAM,IAAIvsC,MAAM,wEAGlB,MAAM,KAAEgW,EAAI,QAAEU,EAAO,KAAEvL,GAASohC,EAEhC,IAAK71B,GAA8B,kBAAZA,EACrB,MAAM,IAAI1W,MACR,uCAGJ,OAAO,IAAIm+E,EAAAO,sBAAsB1oE,EAAMU,EAASvL,EAAK,8CClL3D,MAAAgzE,EAAArgF,EAAA,OACA,MAAAsgF,EAAAtgF,EAAA,OAGA,MAAAghF,EAAAhhF,EAAA,OAKEuB,OAAAA,eAAAA,EAAAA,KAAAA,CAAA8Q,YAAA,EAAAC,IAAA,kBALO0uE,EAAA3J,SAAS,IAClB,MAAAkJ,EAAAvgF,EAAA,iLCLA,MAAAugF,EAAAvgF,EAAA,OACAqgF,EAAArgF,EAAA,OAEMihF,EAAsBV,EAAAM,WAAWpwB,IAAIqvB,SACrCoB,EAAmB,8DACnBC,EAA6C,CACjDjpE,KAAM+oE,EACNroE,QAAS8nE,EAAmBO,IAW9B,SAAgBP,EACdxoE,GAC0C,IAA1CkpE,EAAA/+E,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAA0B6+E,EAE1B,GAAIngF,OAAOC,UAAUkX,GAAO,CAC1B,MAAMmpE,EAAanpE,EAAKzN,WAExB,GAAI62E,EAAOf,EAAAgB,YAAaF,GACtB,OAAOd,EAAAgB,YAAYF,GAA6BzoE,QAElD,GAAI4oE,EAAqBtpE,GACvB,OAAOjN,EAAAw2E,8BAGX,OAAOL,CACT,CAMA,SAAgBM,EAAYxpE,GAC1B,IAAKnX,OAAOC,UAAUkX,GACpB,OAAO,EAGT,MAAMmpE,EAAanpE,EAAKzN,WACxB,QAAI81E,EAAAgB,YAAYF,MAIZG,EAAqBtpE,EAI3B,CA8EA,SAASspE,EAAqBtpE,GAC5B,OAAOA,IAAS,OAASA,IAAS,IACpC,CAEA,SAASypE,EAAoBxvE,GAC3B,OAAIA,GAA0B,kBAAVA,IAAuB7L,MAAMC,QAAQ4L,GAChD5Q,OAAOG,OAAO,GAAIyQ,GAEpBA,CACT,CAEA,SAASmvE,EAAOv0E,EAA8B64B,GAC5C,OAAOrkC,OAAOE,UAAU2G,eAAeC,KAAK0E,EAAK64B,EACnD,CAtIa36B,EAAAA,8BAAgC,4BAQ7CA,EAAAA,mBAAAy1E,EAqBAz1E,EAAAA,YAAAy2E,EAsBAz2E,EAAAA,eAAA,SACEkH,GAIM,IAHN,cACEyvE,EAAgBT,EAAc,mBAC9BU,GAAqB,GACtBx/E,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG,WAGJ,IACGu/E,IACA7gF,OAAOC,UAAU4gF,EAAc1pE,OACC,kBAA1B0pE,EAAchpE,QAErB,MAAM,IAAI1W,MACR,4EAIJ,GAAIiQ,aAAiBkuE,EAAArB,iBACnB,OAAO7sE,EAAM6nC,YAGf,MAAMilC,EAAkD,GAExD,GACE9sE,GACiB,kBAAVA,IACN7L,MAAMC,QAAQ4L,IACfmvE,EAAOnvE,EAAkC,SACzCuvE,EAAavvE,EAAqC+F,MAClD,CACA,MAAM4pE,EAAS3vE,EACf8sE,EAAW/mE,KAAO4pE,EAAO5pE,KAErB4pE,EAAOlpE,SAAqC,kBAAnBkpE,EAAOlpE,SAClCqmE,EAAWrmE,QAAUkpE,EAAOlpE,QAExB0oE,EAAOQ,EAAQ,UACjB7C,EAAW5xE,KAAOy0E,EAAOz0E,QAG3B4xE,EAAWrmE,QAAU8nE,EAClBzB,EAA0C/mE,MAG7C+mE,EAAW5xE,KAAO,CAAE00E,cAAeJ,EAAoBxvE,SAEpD,CACL8sE,EAAW/mE,KAAO0pE,EAAc1pE,KAEhC,MAAMU,EAAwB,QAAjBopE,EAAI7vE,SAAa,IAAA6vE,OAAA,EAAAA,EAAEppE,QAEhCqmE,EAAWrmE,QACTA,GAA8B,kBAAZA,EACdA,EACAgpE,EAAchpE,QAEpBqmE,EAAW5xE,KAAO,CAAE00E,cAAeJ,EAAoBxvE,IAGzD,MAAMwG,EAAsB,QAAjBspE,EAAI9vE,SAAa,IAAA8vE,OAAA,EAAAA,EAAEtpE,MAK9B,OAHIkpE,GAAsB1vE,GAASwG,GAA0B,kBAAVA,IACjDsmE,EAAWtmE,MAAQA,GAEdsmE,CACT,gCCxHA,IAAIiD,EAAUliF,EAAAA,OAAAA,OA+Gdka,EAAOjP,QA9GP,SAAek3E,GACb,GAAIA,EAASzhF,QAAU,IAAO,MAAM,IAAIN,UAAU,qBAElD,IADA,IAAIgiF,EAAW,IAAIjiF,WAAW,KACrBuP,EAAI,EAAGA,EAAI0yE,EAAS1hF,OAAQgP,IACnC0yE,EAAS1yE,GAAK,IAEhB,IAAK,IAAI5J,EAAI,EAAGA,EAAIq8E,EAASzhF,OAAQoF,IAAK,CACxC,IAAI+M,EAAIsvE,EAASE,OAAOv8E,GACpBw8E,EAAKzvE,EAAEvC,WAAW,GACtB,GAAqB,MAAjB8xE,EAASE,GAAe,MAAM,IAAIliF,UAAUyS,EAAI,iBACpDuvE,EAASE,GAAMx8E,CACjB,CACA,IAAIq3B,EAAOglD,EAASzhF,OAChB6hF,EAASJ,EAASE,OAAO,GACzBG,EAAS//E,KAAKg+D,IAAItjC,GAAQ16B,KAAKg+D,IAAI,KACnCgiB,EAAUhgF,KAAKg+D,IAAI,KAAOh+D,KAAKg+D,IAAItjC,GAyCvC,SAASulD,EAAchpB,GACrB,GAAsB,kBAAXA,EAAuB,MAAM,IAAIt5D,UAAU,mBACtD,GAAsB,IAAlBs5D,EAAOh5D,OAAgB,OAAOwhF,EAAQ32E,MAAM,GAKhD,IAJA,IAAIo3E,EAAM,EAENC,EAAS,EACTliF,EAAS,EACNg5D,EAAOipB,KAASJ,GACrBK,IACAD,IAMF,IAHA,IAAIl1E,GAAUisD,EAAOh5D,OAASiiF,GAAOH,EAAU,IAAO,EAClDK,EAAO,IAAI1iF,WAAWsN,GAEnBisD,EAAOipB,IAAM,CAElB,IAAIplE,EAAQ6kE,EAAS1oB,EAAOppD,WAAWqyE,IAEvC,GAAc,MAAVplE,EAAiB,OAErB,IADA,IAAIzX,EAAI,EACCg9E,EAAMr1E,EAAO,GAAc,IAAV8P,GAAezX,EAAIpF,KAAqB,IAAToiF,EAAaA,IAAOh9E,IAC3EyX,GAAU4f,EAAO0lD,EAAKC,KAAU,EAChCD,EAAKC,GAAQvlE,EAAQ,MAAS,EAC9BA,EAASA,EAAQ,MAAS,EAE5B,GAAc,IAAVA,EAAe,MAAM,IAAIrb,MAAM,kBACnCxB,EAASoF,EACT68E,GACF,CAGA,IADA,IAAII,EAAMt1E,EAAO/M,EACVqiF,IAAQt1E,GAAsB,IAAdo1E,EAAKE,IAC1BA,IAEF,IAAIC,EAAMd,EAAQn2E,YAAY62E,GAAUn1E,EAAOs1E,IAC/CC,EAAIxwE,KAAK,EAAM,EAAGowE,GAElB,IADA,IAAIlzE,EAAIkzE,EACDG,IAAQt1E,GACbu1E,EAAItzE,KAAOmzE,EAAKE,KAElB,OAAOC,CACT,CAMA,MAAO,CACLrgF,OAzFF,SAAiB+2D,GAEf,IADIpzD,MAAMC,QAAQmzD,IAAWA,aAAkBv5D,cAAcu5D,EAASwoB,EAAQ3hF,KAAKm5D,KAC9EwoB,EAAQl1E,SAAS0sD,GAAW,MAAM,IAAIt5D,UAAU,mBACrD,GAAsB,IAAlBs5D,EAAOh5D,OAAgB,MAAO,GAMlC,IAJA,IAAIkiF,EAAS,EACTliF,EAAS,EACTuiF,EAAS,EACTC,EAAOxpB,EAAOh5D,OACXuiF,IAAWC,GAA2B,IAAnBxpB,EAAOupB,IAC/BA,IACAL,IAMF,IAHA,IAAIn1E,GAASy1E,EAAOD,GAAUR,EAAU,IAAO,EAC3CU,EAAM,IAAIhjF,WAAWsN,GAElBw1E,IAAWC,GAAM,CAItB,IAHA,IAAI3lE,EAAQm8C,EAAOupB,GAEfn9E,EAAI,EACCs9E,EAAM31E,EAAO,GAAc,IAAV8P,GAAezX,EAAIpF,KAAqB,IAAT0iF,EAAaA,IAAOt9E,IAC3EyX,GAAU,IAAM4lE,EAAIC,KAAU,EAC9BD,EAAIC,GAAQ7lE,EAAQ4f,IAAU,EAC9B5f,EAASA,EAAQ4f,IAAU,EAE7B,GAAc,IAAV5f,EAAe,MAAM,IAAIrb,MAAM,kBACnCxB,EAASoF,EACTm9E,GACF,CAGA,IADA,IAAII,EAAM51E,EAAO/M,EACV2iF,IAAQ51E,GAAqB,IAAb01E,EAAIE,IACzBA,IAIF,IADA,IAAIjzE,EAAMmyE,EAAOe,OAAOV,GACjBS,EAAM51E,IAAQ41E,EAAOjzE,GAAO+xE,EAASE,OAAOc,EAAIE,IACvD,OAAOjzE,CACT,EAmDEsyE,aAAcA,EACdngF,OARF,SAAiByJ,GACf,IAAIxL,EAASkiF,EAAa12E,GAC1B,GAAIxL,EAAU,OAAOA,EACrB,MAAM,IAAI0B,MAAM,WAAai7B,EAAO,aACtC,EAMF,sDChGAlyB,EAAQ,GAZR,SAAoBU,GAChB,CACI,MAAM43E,EAAWjjF,EAAOC,KAAKoL,GAC7B43E,EAAS1/C,UACT,MAAMzD,EAAMmjD,EAAS94E,SAAS,OAC9B,OAAmB,IAAf21B,EAAI1/B,OACGoU,OAAO,GAEXA,OAAQ,KAAIsrB,IACvB,CAEJ,EAkCAn1B,EAAQ,GAVR,SAAoB0Q,EAAKwD,GACrB,CACI,MAAMihB,EAAMzkB,EAAIlR,SAAS,IACnBjK,EAASF,EAAOC,KAAK6/B,EAAIrN,SAAiB,EAAR5T,EAAW,KAAK7U,MAAM,EAAW,EAAR6U,GAAY,OAE7E,OADA3e,EAAOqjC,UACArjC,CACX,CAGJ,4DCpDIgjF,EAAmBt1E,MAAQA,KAAKs1E,kBAAqBjiF,OAAOC,OAAU,SAAS0f,EAAGvS,EAAGuP,EAAGwxB,QAC7EptC,IAAPotC,IAAkBA,EAAKxxB,GAC3B3c,OAAO6Q,eAAe8O,EAAGwuB,EAAI,CAAEr9B,YAAY,EAAMC,IAAK,WAAa,OAAO3D,EAAEuP,EAAI,GACpF,EAAM,SAASgD,EAAGvS,EAAGuP,EAAGwxB,QACTptC,IAAPotC,IAAkBA,EAAKxxB,GAC3BgD,EAAEwuB,GAAM/gC,EAAEuP,EACd,GACIulE,EAAsBv1E,MAAQA,KAAKu1E,qBAAwBliF,OAAOC,OAAU,SAAS0f,EAAGhb,GACxF3E,OAAO6Q,eAAe8O,EAAG,UAAW,CAAE7O,YAAY,EAAMlJ,MAAOjD,GACnE,EAAK,SAASgb,EAAGhb,GACbgb,EAAW,QAAIhb,CACnB,GACIw9E,EAAcx1E,MAAQA,KAAKw1E,YAAe,SAAUC,EAAY/vE,EAAQgyB,EAAKg+C,GAC7E,IAA2H/pD,EAAvHlpB,EAAItO,UAAU3B,OAAQ8a,EAAI7K,EAAI,EAAIiD,EAAkB,OAATgwE,EAAgBA,EAAOriF,OAAOsiF,yBAAyBjwE,EAAQgyB,GAAOg+C,EACrH,GAAuB,kBAAZE,SAAoD,oBAArBA,QAAQC,SAAyBvoE,EAAIsoE,QAAQC,SAASJ,EAAY/vE,EAAQgyB,EAAKg+C,QACpH,IAAK,IAAI99E,EAAI69E,EAAWjjF,OAAS,EAAGoF,GAAK,EAAGA,KAAS+zB,EAAI8pD,EAAW79E,MAAI0V,GAAK7K,EAAI,EAAIkpB,EAAEre,GAAK7K,EAAI,EAAIkpB,EAAEjmB,EAAQgyB,EAAKpqB,GAAKqe,EAAEjmB,EAAQgyB,KAASpqB,GAChJ,OAAO7K,EAAI,GAAK6K,GAAKja,OAAO6Q,eAAewB,EAAQgyB,EAAKpqB,GAAIA,CAChE,EACIwoE,EAAgB91E,MAAQA,KAAK81E,cAAiB,SAAUrnE,GACxD,GAAIA,GAAOA,EAAIsnE,WAAY,OAAOtnE,EAClC,IAAIymB,EAAS,CAAC,EACd,GAAW,MAAPzmB,EAAa,IAAK,IAAIuB,KAAKvB,EAAe,YAANuB,GAAmB3c,OAAO6G,eAAeC,KAAKsU,EAAKuB,IAAIslE,EAAgBpgD,EAAQzmB,EAAKuB,GAE5H,OADAulE,EAAmBrgD,EAAQzmB,GACpBymB,CACX,EACI8gD,EAAmBh2E,MAAQA,KAAKg2E,iBAAoB,SAAUvnE,GAC9D,OAAQA,GAAOA,EAAIsnE,WAActnE,EAAM,CAAE,QAAWA,EACxD,EACApb,OAAO6Q,eAAenH,EAAS,aAAc,CAAE9B,OAAO,IACtD8B,EAAQkvC,qBAAuBlvC,EAAQivC,YAAcjvC,EAAQ+uC,UAAY/uC,EAAQk5E,aAAel5E,EAAQm5E,aAAen5E,EAAQo5E,WAAap5E,EAAQq5E,WAAar5E,EAAQs5E,gBAAa,EACtL,MAAMC,EAAUN,EAAgBlkF,EAAQ,QAClCykF,EAASP,EAAgBlkF,EAAQ,QAEjCiM,EAAW+3E,EAAahkF,EAAQ,OAEhC0kF,EAAc,IAD+B,oBAAhBC,YAA6B14E,EAAS04E,YAAcA,aAC3C,QAAS,CAAEC,OAAO,IAO9D35E,EAAQs5E,WANR,SAAoBp7E,GAIhB,MAHqB,kBAAVA,IACPA,EAAQ7I,EAAOC,KAAK4I,EAAO,SAExBs7E,EAAO/oC,QAAQ/4C,OAAOrC,EAAOC,KAAK4I,GAC7C,EAKA8B,EAAQq5E,WAHR,SAAoBn7E,GAChB,OAAO7I,EAAOC,KAAKkkF,EAAO/oC,QAAQn5C,OAAO4G,GAC7C,EAEA,MAAM07E,EAAiB,KACvB,MAAMR,UAAmBniF,MACrBtB,YAAYgY,GACRJ,MAAMI,GACN1K,KAAK42E,UAAY,GACjB52E,KAAK62E,gBAAkBnsE,CAC3B,CACAosE,eAAeC,GACX/2E,KAAK42E,UAAU3/B,OAAO,EAAG,EAAG8/B,GAE5B/2E,KAAK0K,QAAU1K,KAAK62E,gBAAkB,KAAO72E,KAAK42E,UAAU57C,KAAK,IACrE,EAEJj+B,EAAQo5E,WAAaA,EAErB,MAAMD,EACFxjF,cACIsN,KAAKvC,IAAMrL,EAAOiL,MAAMs5E,GACxB32E,KAAKxN,OAAS,CAClB,CACAwkF,cACQh3E,KAAKvC,IAAIjL,OAAS,GAAKwN,KAAKxN,SAC5BwN,KAAKvC,IAAMrL,EAAOyS,OAAO,CAAC7E,KAAKvC,IAAKrL,EAAOiL,MAAMs5E,KAEzD,CACAM,QAAQh8E,GACJ+E,KAAKg3E,cACLh3E,KAAKvC,IAAIqL,WAAW7N,EAAO+E,KAAKxN,QAChCwN,KAAKxN,QAAU,CACnB,CACA0kF,SAASj8E,GACL+E,KAAKg3E,cACLh3E,KAAKvC,IAAIuL,cAAc/N,EAAO+E,KAAKxN,QACnCwN,KAAKxN,QAAU,CACnB,CACA2kF,SAASl8E,GACL+E,KAAKg3E,cACLh3E,KAAKvC,IAAIvH,cAAc+E,EAAO+E,KAAKxN,QACnCwN,KAAKxN,QAAU,CACnB,CACA4kF,SAASn8E,GACL+E,KAAKg3E,cACLh3E,KAAKq3E,YAAYjlF,EAAOC,KAAK,IAAIikF,EAAQ9oC,QAAQvyC,GAAOgT,QAAQ,KAAM,IAC1E,CACAqpE,UAAUr8E,GACN+E,KAAKg3E,cACLh3E,KAAKq3E,YAAYjlF,EAAOC,KAAK,IAAIikF,EAAQ9oC,QAAQvyC,GAAOgT,QAAQ,KAAM,KAC1E,CACAspE,UAAUt8E,GACN+E,KAAKg3E,cACLh3E,KAAKq3E,YAAYjlF,EAAOC,KAAK,IAAIikF,EAAQ9oC,QAAQvyC,GAAOgT,QAAQ,KAAM,KAC1E,CACAupE,UAAUv8E,GACN+E,KAAKg3E,cACLh3E,KAAKq3E,YAAYjlF,EAAOC,KAAK,IAAIikF,EAAQ9oC,QAAQvyC,GAAOgT,QAAQ,KAAM,KAC1E,CACAopE,YAAY/kF,GAER0N,KAAKvC,IAAMrL,EAAOyS,OAAO,CACrBzS,EAAOC,KAAK2N,KAAKvC,IAAI2J,SAAS,EAAGpH,KAAKxN,SACtCF,EACAF,EAAOiL,MAAMs5E,KAEjB32E,KAAKxN,QAAUF,EAAOE,MAC1B,CACAilF,YAAYv1E,GACRlC,KAAKg3E,cACL,MAAMhlF,EAAII,EAAOC,KAAK6P,EAAK,QAC3BlC,KAAKm3E,SAASnlF,EAAEQ,QAChBwN,KAAKq3E,YAAYrlF,EACrB,CACA0lF,gBAAgBl4E,GACZQ,KAAKq3E,YAAYjlF,EAAOC,KAAKmN,GACjC,CACAm4E,WAAWn4E,EAAOsM,GACd9L,KAAKg3E,cACLh3E,KAAKm3E,SAAS33E,EAAMhN,QACpB,IAAK,MAAMq9C,KAAQrwC,EACfQ,KAAKg3E,cACLlrE,EAAG+jC,EAEX,CACA5hC,UACI,OAAOjO,KAAKvC,IAAI2J,SAAS,EAAGpH,KAAKxN,OACrC,EAGJ,SAASolF,EAAmBlyE,EAAQmyE,EAAaC,GAC7C,MAAMC,EAAiBD,EAAmB78E,MAC1C68E,EAAmB78E,MAAQ,WACvB,IAAI,QAAA2oB,EAAAzvB,UAAA3B,OADgCugD,EAAI,IAAA36C,MAAAwrB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJivB,EAAIjvB,GAAA3vB,UAAA2vB,GAEpC,OAAOi0D,EAAet0E,MAAMzD,KAAM+yC,EACtC,CACA,MAAOv6C,GACH,GAAIA,aAAatF,WAAY,CACzB,MAAM8W,EAAOxR,EAAEwR,KACf,GAAI,CAAC,2BAA4B,oBAAoBlJ,QAAQkJ,IAAS,EAClE,MAAM,IAAImsE,EAAW,+CAE7B,CACA,MAAM39E,CACV,CACJ,CACJ,CAjBAuE,EAAQm5E,aAAeA,EAkBvB,MAAMD,EACFvjF,YAAY+K,GACRuC,KAAKvC,IAAMA,EACXuC,KAAK/M,OAAS,CAClB,CACA+kF,SACI,MAAM/8E,EAAQ+E,KAAKvC,IAAIgK,UAAUzH,KAAK/M,QAEtC,OADA+M,KAAK/M,QAAU,EACRgI,CACX,CACAg9E,UACI,MAAMh9E,EAAQ+E,KAAKvC,IAAIkK,aAAa3H,KAAK/M,QAEzC,OADA+M,KAAK/M,QAAU,EACRgI,CACX,CACAi9E,UACI,MAAMj9E,EAAQ+E,KAAKvC,IAAIzH,aAAagK,KAAK/M,QAEzC,OADA+M,KAAK/M,QAAU,EACRgI,CACX,CACAk9E,UACI,MAAM16E,EAAMuC,KAAKo4E,WAAW,GAC5B,OAAO,IAAI9B,EAAQ9oC,QAAQ/vC,EAAK,KACpC,CACA46E,WACI,MAAM56E,EAAMuC,KAAKo4E,WAAW,IAC5B,OAAO,IAAI9B,EAAQ9oC,QAAQ/vC,EAAK,KACpC,CACA66E,WACI,MAAM76E,EAAMuC,KAAKo4E,WAAW,IAC5B,OAAO,IAAI9B,EAAQ9oC,QAAQ/vC,EAAK,KACpC,CACA86E,WACI,MAAM96E,EAAMuC,KAAKo4E,WAAW,IAC5B,OAAO,IAAI9B,EAAQ9oC,QAAQ/vC,EAAK,KACpC,CACA26E,WAAWr5E,GACP,GAAIiB,KAAK/M,OAAS8L,EAAMiB,KAAKvC,IAAIjL,OAC7B,MAAM,IAAI2jF,EAAY,0BAAyBp3E,yBAEnD,MAAMm2B,EAASl1B,KAAKvC,IAAIrB,MAAM4D,KAAK/M,OAAQ+M,KAAK/M,OAAS8L,GAEzD,OADAiB,KAAK/M,QAAU8L,EACRm2B,CACX,CACAsjD,aACI,MAAMz5E,EAAMiB,KAAKk4E,UACXz6E,EAAMuC,KAAKo4E,WAAWr5E,GAC5B,IAEI,OAAOy3E,EAAYniF,OAAOoJ,EAC9B,CACA,MAAOjF,GACH,MAAM,IAAI29E,EAAY,gCAA+B39E,IACzD,CACJ,CACAigF,eAAe15E,GACX,OAAO,IAAI9M,WAAW+N,KAAKo4E,WAAWr5E,GAC1C,CACA25E,UAAU5sE,GACN,MAAM/M,EAAMiB,KAAKk4E,UACXhjD,EAAS98B,QACf,IAAK,IAAIR,EAAI,EAAGA,EAAImH,IAAOnH,EACvBs9B,EAAOr9B,KAAKiU,KAEhB,OAAOopB,CACX,EAiCJ,SAASyjD,EAAsB76E,GAC3B,OAAOA,EAAOq2E,OAAO,GAAGyE,cAAgB96E,EAAO1B,MAAM,EACzD,CACA,SAASy8E,EAAe58C,EAAQ86C,EAAW97E,EAAO69E,EAAWC,GACzD,IAEI,GAAyB,kBAAdD,EACPC,EAAQ,QAAOJ,EAAsBG,MAAc79E,QAElD,GAAI69E,aAAqB1gF,MAC1B,GAA4B,kBAAjB0gF,EAAU,GAAiB,CAClC,GAAI79E,EAAMzI,SAAWsmF,EAAU,GAC3B,MAAM,IAAI3C,EAAY,kCAAiC2C,EAAU,eAAe79E,EAAMzI,gBAE1FumF,EAAOrB,gBAAgBz8E,EAC3B,MACK,GAAyB,IAArB69E,EAAUtmF,QAAwC,kBAAjBsmF,EAAU,GAAiB,CACjE,GAAI79E,EAAMzI,SAAWsmF,EAAU,GAC3B,MAAM,IAAI3C,EAAY,kCAAiC2C,EAAU,eAAe79E,EAAMzI,gBAE1F,IAAK,IAAIoF,EAAI,EAAGA,EAAIkhF,EAAU,GAAIlhF,IAC9BihF,EAAe58C,EAAQ,KAAMhhC,EAAMrD,GAAIkhF,EAAU,GAAIC,EAE7D,MAEIA,EAAOpB,WAAW18E,GAAQg2B,IACtB4nD,EAAe58C,EAAQ86C,EAAW9lD,EAAM6nD,EAAU,GAAIC,EAAO,SAIpE,QAAuB3kF,IAAnB0kF,EAAUrrC,KACf,OAAQqrC,EAAUrrC,MACd,IAAK,SACa,OAAVxyC,QAA4B7G,IAAV6G,EAClB89E,EAAO9B,QAAQ,IAGf8B,EAAO9B,QAAQ,GACf4B,EAAe58C,EAAQ86C,EAAW97E,EAAO69E,EAAU55E,KAAM65E,IAE7D,MAEJ,IAAK,MACDA,EAAO5B,SAASl8E,EAAMsE,MACtBtE,EAAMsvC,SAAQ,CAAC5pC,EAAK+2B,KAChBmhD,EAAe58C,EAAQ86C,EAAWr/C,EAAKohD,EAAUphD,IAAKqhD,GACtDF,EAAe58C,EAAQ86C,EAAWp2E,EAAKm4E,EAAU79E,MAAO89E,EAAO,IAEnE,MAEJ,QACI,MAAM,IAAI5C,EAAY,aAAY2C,uBAI1CE,EAAgB/8C,EAAQhhC,EAAO89E,EAEvC,CACA,MAAO90E,GAIH,MAHIA,aAAiBkyE,GACjBlyE,EAAM6yE,eAAeC,GAEnB9yE,CACV,CACJ,CACA,SAAS+0E,EAAgB/8C,EAAQp9B,EAAKk6E,GAClC,GAAkC,oBAAvBl6E,EAAIo6E,eAEX,YADAp6E,EAAIo6E,eAAeF,GAGvB,MAAMG,EAAej9C,EAAO73B,IAAIvF,EAAInM,aACpC,IAAKwmF,EACD,MAAM,IAAI/C,EAAY,SAAQt3E,EAAInM,YAAYkB,6BAElD,GAA0B,WAAtBslF,EAAazrC,KACbyrC,EAAahhF,OAAO6wB,KAAIgoB,IAA4B,IAA1BgmC,EAAW+B,GAAU/nC,EAC3C8nC,EAAe58C,EAAQ86C,EAAWl4E,EAAIk4E,GAAY+B,EAAWC,EAAO,QAGvE,IAA0B,SAAtBG,EAAazrC,KAYlB,MAAM,IAAI0oC,EAAY,2BAA0B+C,EAAazrC,YAAY5uC,EAAInM,YAAYkB,QAZtD,CACnC,MAAMA,EAAOiL,EAAIq6E,EAAavpC,OAC9B,IAAK,IAAIh4C,EAAM,EAAGA,EAAMuhF,EAAaxlF,OAAOlB,SAAUmF,EAAK,CACvD,MAAOo/E,EAAW+B,GAAaI,EAAaxlF,OAAOiE,GACnD,GAAIo/E,IAAcnjF,EAAM,CACpBmlF,EAAO9B,QAAQt/E,GACfkhF,EAAe58C,EAAQ86C,EAAWl4E,EAAIk4E,GAAY+B,EAAWC,GAC7D,KACJ,CACJ,CACJ,CAGA,CACJ,CASA,SAASI,EAAiBl9C,EAAQ86C,EAAW+B,EAAWM,GACpD,IACI,GAAyB,kBAAdN,EACP,OAAOM,EAAQ,OAAMT,EAAsBG,QAE/C,GAAIA,aAAqB1gF,MAAO,CAC5B,GAA4B,kBAAjB0gF,EAAU,GACjB,OAAOM,EAAOX,eAAeK,EAAU,IAEtC,GAA4B,kBAAjBA,EAAU,GAAiB,CACvC,MAAM93E,EAAM,GACZ,IAAK,IAAIpJ,EAAI,EAAGA,EAAIkhF,EAAU,GAAIlhF,IAC9BoJ,EAAInJ,KAAKshF,EAAiBl9C,EAAQ,KAAM68C,EAAU,GAAIM,IAE1D,OAAOp4E,CACX,CAEI,OAAOo4E,EAAOV,WAAU,IAAMS,EAAiBl9C,EAAQ86C,EAAW+B,EAAU,GAAIM,IAExF,CACA,GAAuB,WAAnBN,EAAUrrC,KAAmB,CAE7B,OADe2rC,EAAOpB,SAEXmB,EAAiBl9C,EAAQ86C,EAAW+B,EAAU55E,KAAMk6E,QAE/D,CACJ,CACA,GAAuB,QAAnBN,EAAUrrC,KAAgB,CAC1B,IAAI1kB,EAAM,IAAIuT,IACd,MAAM9pC,EAAS4mF,EAAOlB,UACtB,IAAK,IAAItgF,EAAI,EAAGA,EAAIpF,EAAQoF,IAAK,CAC7B,MAAM8/B,EAAMyhD,EAAiBl9C,EAAQ86C,EAAW+B,EAAUphD,IAAK0hD,GACzDz4E,EAAMw4E,EAAiBl9C,EAAQ86C,EAAW+B,EAAU79E,MAAOm+E,GACjErwD,EAAI/jB,IAAI0yB,EAAK/2B,EACjB,CACA,OAAOooB,CACX,CACA,OAAOswD,EAAkBp9C,EAAQ68C,EAAWM,EAChD,CACA,MAAOn1E,GAIH,MAHIA,aAAiBkyE,GACjBlyE,EAAM6yE,eAAeC,GAEnB9yE,CACV,CACJ,CACA,SAASo1E,EAAkBp9C,EAAQq9C,EAAWF,GAC1C,GAA0C,oBAA/BE,EAAUC,iBACjB,OAAOD,EAAUC,iBAAiBH,GAEtC,MAAMF,EAAej9C,EAAO73B,IAAIk1E,GAChC,IAAKJ,EACD,MAAM,IAAI/C,EAAY,SAAQmD,EAAU1lF,6BAE5C,GAA0B,WAAtBslF,EAAazrC,KAAmB,CAChC,MAAMvY,EAAS,CAAC,EAChB,IAAK,MAAO6hD,EAAW+B,KAAc78C,EAAO73B,IAAIk1E,GAAWphF,OACvDg9B,EAAO6hD,GAAaoC,EAAiBl9C,EAAQ86C,EAAW+B,EAAWM,GAEvE,OAAO,IAAIE,EAAUpkD,EACzB,CACA,GAA0B,SAAtBgkD,EAAazrC,KAAiB,CAC9B,MAAM91C,EAAMyhF,EAAOpB,SACnB,GAAIrgF,GAAOuhF,EAAaxlF,OAAOlB,OAC3B,MAAM,IAAI2jF,EAAY,eAAcx+E,qBAExC,MAAOo/E,EAAW+B,GAAaI,EAAaxlF,OAAOiE,GAEnD,OAAO,IAAI2hF,EAAU,CAAE,CAACvC,GADLoC,EAAiBl9C,EAAQ86C,EAAW+B,EAAWM,IAEtE,CACA,MAAM,IAAIjD,EAAY,2BAA0B+C,EAAazrC,YAAY6rC,EAAU5mF,YAAYkB,OACnG,CA5MA4hF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,SAAU,MACrCiiF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,UAAW,MACtCiiF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,UAAW,MACtCiiF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,UAAW,MACtCiiF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,WAAY,MACvCiiF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,WAAY,MACvCiiF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,WAAY,MACvCiiF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,aAAc,MACzCiiF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,iBAAkB,MAC7CiiF,EAAW,CACPoC,GACD3B,EAAa1iF,UAAW,YAAa,MACxCwJ,EAAQk5E,aAAeA,EAsGvBl5E,EAAQ+uC,UALR,SAAmB7P,EAAQp9B,GACvB,MAAMk6E,EAAS,IADmB5kF,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG+hF,GAGrC,OADA8C,EAAgB/8C,EAAQp9B,EAAKk6E,GACtBA,EAAO9qE,SAClB,EAmFAlR,EAAQivC,YARR,SAAqB/P,EAAQq9C,EAAWhnF,GACpC,MAAM8mF,EAAS,IADmCjlF,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG8hF,GAC3B3jF,GACpB4iC,EAASmkD,EAAkBp9C,EAAQq9C,EAAWF,GACpD,GAAIA,EAAOnmF,OAASX,EAAOE,OACvB,MAAM,IAAI2jF,EAAY,cAAa7jF,EAAOE,OAAS4mF,EAAOnmF,wCAE9D,OAAOiiC,CACX,EAOAn4B,EAAQkvC,qBAJR,SAA8BhQ,EAAQq9C,EAAWhnF,GAE7C,OAAO+mF,EAAkBp9C,EAAQq9C,EADlB,IAD4CnlF,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAG8hF,GACpC3jF,GAE9B,0BCtbA,SAAW0Z,EAAQjP,GACjB,aAGA,SAASkP,EAAQtL,EAAKuK,GACpB,IAAKvK,EAAK,MAAM,IAAI3M,MAAMkX,GAAO,mBACnC,CAIA,SAASgB,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAa,EAC5BA,EAAS/Y,UAAY6Y,EAAU7Y,UAC/B4Y,EAAK5Y,UAAY,IAAI+Y,EACrBH,EAAK5Y,UAAUb,YAAcyZ,CAC/B,CAIA,SAASI,EAAIC,EAAQC,EAAMC,GACzB,GAAIH,EAAGI,KAAKH,GACV,OAAOA,EAGTxM,KAAK4M,SAAW,EAChB5M,KAAK6M,MAAQ,KACb7M,KAAKxN,OAAS,EAGdwN,KAAK8M,IAAM,KAEI,OAAXN,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTzM,KAAK+M,MAAMP,GAAU,EAAGC,GAAQ,GAAIC,GAAU,MAElD,CAUA,IAAIta,EATkB,kBAAX4Z,EACTA,EAAOjP,QAAUwP,EAEjBxP,EAAQwP,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGS,SAAW,GAGd,IAEI5a,EADoB,qBAAX6a,QAAmD,qBAAlBA,OAAO7a,OACxC6a,OAAO7a,OAEPN,EAAAA,OAAAA,MAEb,CAAE,MAAO0G,GACT,CA+HA,SAAS0U,EAAepP,EAAQqP,GAC9B,IAAI1K,EAAI3E,EAAOsE,WAAW+K,GAE1B,OAAI1K,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEXwJ,GAAO,EAAO,wBAA0BnO,EAE5C,CAEA,SAASsP,EAActP,EAAQuP,EAAYF,GACzC,IAAIG,EAAIJ,EAAcpP,EAAQqP,GAI9B,OAHIA,EAAQ,GAAKE,IACfC,GAAKJ,EAAcpP,EAAQqP,EAAQ,IAAM,GAEpCG,CACT,CA6CA,SAASC,EAAWrL,EAAKlG,EAAO+D,EAAKuH,GAInC,IAHA,IAAIgG,EAAI,EACJtb,EAAI,EACJ+M,EAAMxK,KAAKsO,IAAIX,EAAI1P,OAAQuN,GACtBnI,EAAIoE,EAAOpE,EAAImH,EAAKnH,IAAK,CAChC,IAAI6K,EAAIP,EAAIE,WAAWxK,GAAK,GAE5B0V,GAAKhG,EAIHtV,EADEyQ,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAENwJ,EAAOxJ,GAAK,GAAKzQ,EAAIsV,EAAK,qBAC1BgG,GAAKtb,CACP,CACA,OAAOsb,CACT,CA2DA,SAASE,EAAM9U,EAAMhE,GACnBgE,EAAKmU,MAAQnY,EAAImY,MACjBnU,EAAKlG,OAASkC,EAAIlC,OAClBkG,EAAKkU,SAAWlY,EAAIkY,SACpBlU,EAAKoU,IAAMpY,EAAIoY,GACjB,CAqCA,GA9TAP,EAAGI,KAAO,SAAec,GACvB,OAAIA,aAAelB,GAIJ,OAARkB,GAA+B,kBAARA,GAC5BA,EAAI/a,YAAYsa,WAAaT,EAAGS,UAAY5U,MAAMC,QAAQoV,EAAIZ,MAClE,EAEAN,EAAGhH,IAAM,SAAcmI,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACT,EAEApB,EAAG1J,IAAM,SAAc6K,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,CACT,EAEApB,EAAGhZ,UAAUwZ,MAAQ,SAAeP,EAAQC,EAAMC,GAChD,GAAsB,kBAAXF,EACT,OAAOxM,KAAK6N,YAAYrB,EAAQC,EAAMC,GAGxC,GAAsB,kBAAXF,EACT,OAAOxM,KAAK8N,WAAWtB,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETR,EAAOQ,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIzQ,EAAQ,EACM,OAFlBwQ,EAASA,EAAOjQ,WAAWiJ,QAAQ,OAAQ,KAEhC,KACTxJ,IACAgE,KAAK4M,SAAW,GAGd5Q,EAAQwQ,EAAOha,SACJ,KAATia,EACFzM,KAAK+N,UAAUvB,EAAQxQ,EAAO0Q,IAE9B1M,KAAKgO,WAAWxB,EAAQC,EAAMzQ,GACf,OAAX0Q,GACF1M,KAAK8N,WAAW9N,KAAKiO,UAAWxB,EAAMC,IAI9C,EAEAH,EAAGhZ,UAAUsa,YAAc,SAAsBrB,EAAQC,EAAMC,GACzDF,EAAS,IACXxM,KAAK4M,SAAW,EAChBJ,GAAUA,GAERA,EAAS,UACXxM,KAAK6M,MAAQ,CAAU,SAATL,GACdxM,KAAKxN,OAAS,GACLga,EAAS,kBAClBxM,KAAK6M,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,UAEzBxM,KAAKxN,OAAS,IAEdyZ,EAAOO,EAAS,kBAChBxM,KAAK6M,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,SACvB,GAEFxM,KAAKxN,OAAS,GAGD,OAAXka,GAGJ1M,KAAK8N,WAAW9N,KAAKiO,UAAWxB,EAAMC,EACxC,EAEAH,EAAGhZ,UAAUua,WAAa,SAAqBtB,EAAQC,EAAMC,GAG3D,GADAT,EAAgC,kBAAlBO,EAAOha,QACjBga,EAAOha,QAAU,EAGnB,OAFAwN,KAAK6M,MAAQ,CAAC,GACd7M,KAAKxN,OAAS,EACPwN,KAGTA,KAAKxN,OAAS+B,KAAK2Z,KAAK1B,EAAOha,OAAS,GACxCwN,KAAK6M,MAAQ,IAAIzU,MAAM4H,KAAKxN,QAC5B,IAAK,IAAIoF,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAC/BoI,KAAK6M,MAAMjV,GAAK,EAGlB,IAAI4J,EAAG2M,EACHC,EAAM,EACV,GAAe,OAAX1B,EACF,IAAK9U,EAAI4U,EAAOha,OAAS,EAAGgP,EAAI,EAAG5J,GAAK,EAAGA,GAAK,EAC9CuW,EAAI3B,EAAO5U,GAAM4U,EAAO5U,EAAI,IAAM,EAAM4U,EAAO5U,EAAI,IAAM,GACzDoI,KAAK6M,MAAMrL,IAAO2M,GAAKC,EAAO,SAC9BpO,KAAK6M,MAAMrL,EAAI,GAAM2M,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP5M,UAGC,GAAe,OAAXkL,EACT,IAAK9U,EAAI,EAAG4J,EAAI,EAAG5J,EAAI4U,EAAOha,OAAQoF,GAAK,EACzCuW,EAAI3B,EAAO5U,GAAM4U,EAAO5U,EAAI,IAAM,EAAM4U,EAAO5U,EAAI,IAAM,GACzDoI,KAAK6M,MAAMrL,IAAO2M,GAAKC,EAAO,SAC9BpO,KAAK6M,MAAMrL,EAAI,GAAM2M,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACP5M,KAIN,OAAOxB,KAAKqO,QACd,EA0BA9B,EAAGhZ,UAAUwa,UAAY,SAAoBvB,EAAQxQ,EAAO0Q,GAE1D1M,KAAKxN,OAAS+B,KAAK2Z,MAAM1B,EAAOha,OAASwJ,GAAS,GAClDgE,KAAK6M,MAAQ,IAAIzU,MAAM4H,KAAKxN,QAC5B,IAAK,IAAIoF,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAC/BoI,KAAK6M,MAAMjV,GAAK,EAIlB,IAGIuW,EAHAC,EAAM,EACN5M,EAAI,EAGR,GAAe,OAAXkL,EACF,IAAK9U,EAAI4U,EAAOha,OAAS,EAAGoF,GAAKoE,EAAOpE,GAAK,EAC3CuW,EAAIf,EAAaZ,EAAQxQ,EAAOpE,IAAMwW,EACtCpO,KAAK6M,MAAMrL,IAAU,SAAJ2M,EACbC,GAAO,IACTA,GAAO,GACP5M,GAAK,EACLxB,KAAK6M,MAAMrL,IAAM2M,IAAM,IAEvBC,GAAO,OAKX,IAAKxW,GADa4U,EAAOha,OAASwJ,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOpE,EAAI4U,EAAOha,OAAQoF,GAAK,EAC1EuW,EAAIf,EAAaZ,EAAQxQ,EAAOpE,IAAMwW,EACtCpO,KAAK6M,MAAMrL,IAAU,SAAJ2M,EACbC,GAAO,IACTA,GAAO,GACP5M,GAAK,EACLxB,KAAK6M,MAAMrL,IAAM2M,IAAM,IAEvBC,GAAO,EAKbpO,KAAKqO,QACP,EA6BA9B,EAAGhZ,UAAUya,WAAa,SAAqBxB,EAAQC,EAAMzQ,GAE3DgE,KAAK6M,MAAQ,CAAC,GACd7M,KAAKxN,OAAS,EAGd,IAAK,IAAI8b,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAW9B,EAClE6B,IAEFA,IACAC,EAAWA,EAAU9B,EAAQ,EAO7B,IALA,IAAI+B,EAAQhC,EAAOha,OAASwJ,EACxByS,EAAMD,EAAQF,EACdvO,EAAMxL,KAAKsO,IAAI2L,EAAOA,EAAQC,GAAOzS,EAErCjB,EAAO,EACFnD,EAAIoE,EAAOpE,EAAImI,EAAKnI,GAAK0W,EAChCvT,EAAOwS,EAAUf,EAAQ5U,EAAGA,EAAI0W,EAAS7B,GAEzCzM,KAAK0O,MAAMH,GACPvO,KAAK6M,MAAM,GAAK9R,EAAO,SACzBiF,KAAK6M,MAAM,IAAM9R,EAEjBiF,KAAK2O,OAAO5T,GAIhB,GAAY,IAAR0T,EAAW,CACb,IAAI/Y,EAAM,EAGV,IAFAqF,EAAOwS,EAAUf,EAAQ5U,EAAG4U,EAAOha,OAAQia,GAEtC7U,EAAI,EAAGA,EAAI6W,EAAK7W,IACnBlC,GAAO+W,EAGTzM,KAAK0O,MAAMhZ,GACPsK,KAAK6M,MAAM,GAAK9R,EAAO,SACzBiF,KAAK6M,MAAM,IAAM9R,EAEjBiF,KAAK2O,OAAO5T,EAEhB,CAEAiF,KAAKqO,QACP,EAEA9B,EAAGhZ,UAAUoJ,KAAO,SAAejE,GACjCA,EAAKmU,MAAQ,IAAIzU,MAAM4H,KAAKxN,QAC5B,IAAK,IAAIoF,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAC/Bc,EAAKmU,MAAMjV,GAAKoI,KAAK6M,MAAMjV,GAE7Bc,EAAKlG,OAASwN,KAAKxN,OACnBkG,EAAKkU,SAAW5M,KAAK4M,SACrBlU,EAAKoU,IAAM9M,KAAK8M,GAClB,EASAP,EAAGhZ,UAAUqb,MAAQ,SAAgBlW,GACnC8U,EAAK9U,EAAMsH,KACb,EAEAuM,EAAGhZ,UAAUsb,MAAQ,WACnB,IAAIvB,EAAI,IAAIf,EAAG,MAEf,OADAvM,KAAKrD,KAAK2Q,GACHA,CACT,EAEAf,EAAGhZ,UAAUub,QAAU,SAAkBvP,GACvC,KAAOS,KAAKxN,OAAS+M,GACnBS,KAAK6M,MAAM7M,KAAKxN,UAAY,EAE9B,OAAOwN,IACT,EAGAuM,EAAGhZ,UAAU8a,OAAS,WACpB,KAAOrO,KAAKxN,OAAS,GAAqC,IAAhCwN,KAAK6M,MAAM7M,KAAKxN,OAAS,IACjDwN,KAAKxN,SAEP,OAAOwN,KAAK+O,WACd,EAEAxC,EAAGhZ,UAAUwb,UAAY,WAKvB,OAHoB,IAAhB/O,KAAKxN,QAAkC,IAAlBwN,KAAK6M,MAAM,KAClC7M,KAAK4M,SAAW,GAEX5M,IACT,EAIsB,qBAAX7C,QAAgD,oBAAfA,OAAO6R,IACjD,IACEzC,EAAGhZ,UAAU4J,OAAO6R,IAAI,+BAAiC1J,CAC3D,CAAE,MAAO9M,GACP+T,EAAGhZ,UAAU+R,QAAUA,CACzB,MAEAiH,EAAGhZ,UAAU+R,QAAUA,EAGzB,SAASA,IACP,OAAQtF,KAAK8M,IAAM,UAAY,SAAW9M,KAAKzD,SAAS,IAAM,GAChE,CAgCA,IAAI0S,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9D5C,EAAGhZ,UAAUgJ,SAAW,SAAmBkQ,EAAM2C,GAI/C,IAAIhJ,EACJ,GAHAgJ,EAAoB,EAAVA,GAAe,EAGZ,MAJb3C,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCrG,EAAM,GAGN,IAFA,IAAIgI,EAAM,EACNiB,EAAQ,EACHzX,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAAK,CACpC,IAAIuW,EAAInO,KAAK6M,MAAMjV,GACfmD,GAA+B,UAArBoT,GAAKC,EAAOiB,IAAmB9S,SAAS,IACtD8S,EAASlB,IAAO,GAAKC,EAAQ,UAC7BA,GAAO,IACI,KACTA,GAAO,GACPxW,KAGAwO,EADY,IAAViJ,GAAezX,IAAMoI,KAAKxN,OAAS,EAC/Byc,EAAM,EAAIlU,EAAKvI,QAAUuI,EAAOqL,EAEhCrL,EAAOqL,CAEjB,CAIA,IAHc,IAAViJ,IACFjJ,EAAMiJ,EAAM9S,SAAS,IAAM6J,GAEtBA,EAAI5T,OAAS4c,IAAY,GAC9BhJ,EAAM,IAAMA,EAKd,OAHsB,IAAlBpG,KAAK4M,WACPxG,EAAM,IAAMA,GAEPA,CACT,CAEA,GAAIqG,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI6C,EAAYJ,EAAWzC,GAEvB8C,EAAYJ,EAAW1C,GAC3BrG,EAAM,GACN,IAAI3D,EAAIzC,KAAK6O,QAEb,IADApM,EAAEmK,SAAW,GACLnK,EAAE+M,UAAU,CAClB,IAAIlC,EAAI7K,EAAEgN,MAAMF,GAAWhT,SAASkQ,GAMlCrG,GALF3D,EAAIA,EAAEiN,MAAMH,IAELC,SAGClC,EAAIlH,EAFJ6I,EAAMK,EAAYhC,EAAE9a,QAAU8a,EAAIlH,CAI5C,CAIA,IAHIpG,KAAKwP,WACPpJ,EAAM,IAAMA,GAEPA,EAAI5T,OAAS4c,IAAY,GAC9BhJ,EAAM,IAAMA,EAKd,OAHsB,IAAlBpG,KAAK4M,WACPxG,EAAM,IAAMA,GAEPA,CACT,CAEA6F,GAAO,EAAO,kCAChB,EAEAM,EAAGhZ,UAAUoc,SAAW,WACtB,IAAIxJ,EAAMnG,KAAK6M,MAAM,GASrB,OARoB,IAAhB7M,KAAKxN,OACP2T,GAAuB,SAAhBnG,KAAK6M,MAAM,GACO,IAAhB7M,KAAKxN,QAAkC,IAAlBwN,KAAK6M,MAAM,GAEzC1G,GAAO,iBAAoC,SAAhBnG,KAAK6M,MAAM,GAC7B7M,KAAKxN,OAAS,GACvByZ,GAAO,EAAO,8CAEU,IAAlBjM,KAAK4M,UAAmBzG,EAAMA,CACxC,EAEAoG,EAAGhZ,UAAU0S,OAAS,WACpB,OAAOjG,KAAKzD,SAAS,GAAI,EAC3B,EAEInK,IACFma,EAAGhZ,UAAUqc,SAAW,SAAmBlD,EAAQla,GACjD,OAAOwN,KAAK6P,YAAYzd,EAAQsa,EAAQla,EAC1C,GAGF+Z,EAAGhZ,UAAU0a,QAAU,SAAkBvB,EAAQla,GAC/C,OAAOwN,KAAK6P,YAAYzX,MAAOsU,EAAQla,EACzC,EA2gBA,SAASsd,EAAYC,EAAMtC,EAAKrH,GAC9BA,EAAIwG,SAAWa,EAAIb,SAAWmD,EAAKnD,SACnC,IAAI7N,EAAOgR,EAAKvd,OAASib,EAAIjb,OAAU,EACvC4T,EAAI5T,OAASuM,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAI2F,EAAoB,EAAhBqL,EAAKlD,MAAM,GACf7a,EAAmB,EAAfyb,EAAIZ,MAAM,GACdS,EAAI5I,EAAI1S,EAER6B,EAAS,SAAJyZ,EACL+B,EAAS/B,EAAI,SAAa,EAC9BlH,EAAIyG,MAAM,GAAKhZ,EAEf,IAAK,IAAImc,EAAI,EAAGA,EAAIjR,EAAKiR,IAAK,CAM5B,IAHA,IAAIC,EAASZ,IAAU,GACnBa,EAAgB,SAARb,EACRc,EAAO5b,KAAKsO,IAAImN,EAAGvC,EAAIjb,OAAS,GAC3BgP,EAAIjN,KAAKgR,IAAI,EAAGyK,EAAID,EAAKvd,OAAS,GAAIgP,GAAK2O,EAAM3O,IAAK,CAC7D,IAAI5J,EAAKoY,EAAIxO,EAAK,EAIlByO,IADA3C,GAFA5I,EAAoB,EAAhBqL,EAAKlD,MAAMjV,KACf5F,EAAmB,EAAfyb,EAAIZ,MAAMrL,IACF0O,GACG,SAAa,EAC5BA,EAAY,SAAJ5C,CACV,CACAlH,EAAIyG,MAAMmD,GAAa,EAARE,EACfb,EAAiB,EAATY,CACV,CAOA,OANc,IAAVZ,EACFjJ,EAAIyG,MAAMmD,GAAa,EAARX,EAEfjJ,EAAI5T,SAGC4T,EAAIiI,QACb,CAziBA9B,EAAGhZ,UAAUsc,YAAc,SAAsBO,EAAW1D,EAAQla,GAClEwN,KAAKqO,SAEL,IAAIpQ,EAAa+B,KAAK/B,aAClBoS,EAAY7d,GAAU+B,KAAKgR,IAAI,EAAGtH,GACtCgO,EAAOhO,GAAcoS,EAAW,yCAChCpE,EAAOoE,EAAY,EAAG,+BAEtB,IAAIvN,EAfS,SAAmBsN,EAAW7Q,GAC3C,OAAI6Q,EAAUvS,YACLuS,EAAUvS,YAAY0B,GAExB,IAAI6Q,EAAU7Q,EACvB,CAUY+Q,CAASF,EAAWC,GAG9B,OADArQ,KAAK,gBADoB,OAAX0M,EAAkB,KAAO,OACR5J,EAAK7E,GAC7B6E,CACT,EAEAyJ,EAAGhZ,UAAUgd,eAAiB,SAAyBzN,EAAK7E,GAI1D,IAHA,IAAIuS,EAAW,EACXnB,EAAQ,EAEHzX,EAAI,EAAGmB,EAAQ,EAAGnB,EAAIoI,KAAKxN,OAAQoF,IAAK,CAC/C,IAAImD,EAAQiF,KAAK6M,MAAMjV,IAAMmB,EAASsW,EAEtCvM,EAAI0N,KAAqB,IAAPzV,EACdyV,EAAW1N,EAAItQ,SACjBsQ,EAAI0N,KAAezV,GAAQ,EAAK,KAE9ByV,EAAW1N,EAAItQ,SACjBsQ,EAAI0N,KAAezV,GAAQ,GAAM,KAGrB,IAAVhC,GACEyX,EAAW1N,EAAItQ,SACjBsQ,EAAI0N,KAAezV,GAAQ,GAAM,KAEnCsU,EAAQ,EACRtW,EAAQ,IAERsW,EAAQtU,IAAS,GACjBhC,GAAS,EAEb,CAEA,GAAIyX,EAAW1N,EAAItQ,OAGjB,IAFAsQ,EAAI0N,KAAcnB,EAEXmB,EAAW1N,EAAItQ,QACpBsQ,EAAI0N,KAAc,CAGxB,EAEAjE,EAAGhZ,UAAUkd,eAAiB,SAAyB3N,EAAK7E,GAI1D,IAHA,IAAIuS,EAAW1N,EAAItQ,OAAS,EACxB6c,EAAQ,EAEHzX,EAAI,EAAGmB,EAAQ,EAAGnB,EAAIoI,KAAKxN,OAAQoF,IAAK,CAC/C,IAAImD,EAAQiF,KAAK6M,MAAMjV,IAAMmB,EAASsW,EAEtCvM,EAAI0N,KAAqB,IAAPzV,EACdyV,GAAY,IACd1N,EAAI0N,KAAezV,GAAQ,EAAK,KAE9ByV,GAAY,IACd1N,EAAI0N,KAAezV,GAAQ,GAAM,KAGrB,IAAVhC,GACEyX,GAAY,IACd1N,EAAI0N,KAAezV,GAAQ,GAAM,KAEnCsU,EAAQ,EACRtW,EAAQ,IAERsW,EAAQtU,IAAS,GACjBhC,GAAS,EAEb,CAEA,GAAIyX,GAAY,EAGd,IAFA1N,EAAI0N,KAAcnB,EAEXmB,GAAY,GACjB1N,EAAI0N,KAAc,CAGxB,EAEIjc,KAAKmc,MACPnE,EAAGhZ,UAAUod,WAAa,SAAqBxC,GAC7C,OAAO,GAAK5Z,KAAKmc,MAAMvC,EACzB,EAEA5B,EAAGhZ,UAAUod,WAAa,SAAqBxC,GAC7C,IAAIyC,EAAIzC,EACJb,EAAI,EAiBR,OAhBIsD,GAAK,OACPtD,GAAK,GACLsD,KAAO,IAELA,GAAK,KACPtD,GAAK,EACLsD,KAAO,GAELA,GAAK,IACPtD,GAAK,EACLsD,KAAO,GAELA,GAAK,IACPtD,GAAK,EACLsD,KAAO,GAEFtD,EAAIsD,CACb,EAGFrE,EAAGhZ,UAAUsd,UAAY,SAAoB1C,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIyC,EAAIzC,EACJb,EAAI,EAoBR,OAnBqB,KAAZ,KAAJsD,KACHtD,GAAK,GACLsD,KAAO,IAEU,KAAV,IAAJA,KACHtD,GAAK,EACLsD,KAAO,GAES,KAAT,GAAJA,KACHtD,GAAK,EACLsD,KAAO,GAES,KAAT,EAAJA,KACHtD,GAAK,EACLsD,KAAO,GAES,KAAT,EAAJA,IACHtD,IAEKA,CACT,EAGAf,EAAGhZ,UAAUud,UAAY,WACvB,IAAI3C,EAAInO,KAAK6M,MAAM7M,KAAKxN,OAAS,GAC7BkQ,EAAK1C,KAAK2Q,WAAWxC,GACzB,OAA2B,IAAnBnO,KAAKxN,OAAS,GAAUkQ,CAClC,EAgBA6J,EAAGhZ,UAAUwd,SAAW,WACtB,GAAI/Q,KAAKwP,SAAU,OAAO,EAG1B,IADA,IAAIlC,EAAI,EACC1V,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAAK,CACpC,IAAI5F,EAAIgO,KAAK6Q,UAAU7Q,KAAK6M,MAAMjV,IAElC,GADA0V,GAAKtb,EACK,KAANA,EAAU,KAChB,CACA,OAAOsb,CACT,EAEAf,EAAGhZ,UAAU0K,WAAa,WACxB,OAAO1J,KAAK2Z,KAAKlO,KAAK8Q,YAAc,EACtC,EAEAvE,EAAGhZ,UAAUyd,OAAS,SAAiBC,GACrC,OAAsB,IAAlBjR,KAAK4M,SACA5M,KAAKoL,MAAM8F,MAAMD,GAAOE,MAAM,GAEhCnR,KAAK6O,OACd,EAEAtC,EAAGhZ,UAAU6d,SAAW,SAAmBH,GACzC,OAAIjR,KAAKqR,MAAMJ,EAAQ,GACdjR,KAAKsR,KAAKL,GAAOE,MAAM,GAAGI,OAE5BvR,KAAK6O,OACd,EAEAtC,EAAGhZ,UAAUie,MAAQ,WACnB,OAAyB,IAAlBxR,KAAK4M,QACd,EAGAL,EAAGhZ,UAAUke,IAAM,WACjB,OAAOzR,KAAK6O,QAAQ0C,MACtB,EAEAhF,EAAGhZ,UAAUge,KAAO,WAKlB,OAJKvR,KAAKwP,WACRxP,KAAK4M,UAAY,GAGZ5M,IACT,EAGAuM,EAAGhZ,UAAUme,KAAO,SAAejE,GACjC,KAAOzN,KAAKxN,OAASib,EAAIjb,QACvBwN,KAAK6M,MAAM7M,KAAKxN,UAAY,EAG9B,IAAK,IAAIoF,EAAI,EAAGA,EAAI6V,EAAIjb,OAAQoF,IAC9BoI,KAAK6M,MAAMjV,GAAKoI,KAAK6M,MAAMjV,GAAK6V,EAAIZ,MAAMjV,GAG5C,OAAOoI,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUoe,IAAM,SAAclE,GAE/B,OADAxB,EAA0C,KAAlCjM,KAAK4M,SAAWa,EAAIb,WACrB5M,KAAK0R,KAAKjE,EACnB,EAGAlB,EAAGhZ,UAAUqe,GAAK,SAAanE,GAC7B,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQ8C,IAAIlE,GAC/CA,EAAIoB,QAAQ8C,IAAI3R,KACzB,EAEAuM,EAAGhZ,UAAUse,IAAM,SAAcpE,GAC/B,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQ6C,KAAKjE,GAChDA,EAAIoB,QAAQ6C,KAAK1R,KAC1B,EAGAuM,EAAGhZ,UAAUue,MAAQ,SAAgBrE,GAEnC,IAAIzb,EAEFA,EADEgO,KAAKxN,OAASib,EAAIjb,OAChBib,EAEAzN,KAGN,IAAK,IAAIpI,EAAI,EAAGA,EAAI5F,EAAEQ,OAAQoF,IAC5BoI,KAAK6M,MAAMjV,GAAKoI,KAAK6M,MAAMjV,GAAK6V,EAAIZ,MAAMjV,GAK5C,OAFAoI,KAAKxN,OAASR,EAAEQ,OAETwN,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUwe,KAAO,SAAetE,GAEjC,OADAxB,EAA0C,KAAlCjM,KAAK4M,SAAWa,EAAIb,WACrB5M,KAAK8R,MAAMrE,EACpB,EAGAlB,EAAGhZ,UAAUye,IAAM,SAAcvE,GAC/B,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQkD,KAAKtE,GAChDA,EAAIoB,QAAQkD,KAAK/R,KAC1B,EAEAuM,EAAGhZ,UAAU0e,KAAO,SAAexE,GACjC,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQiD,MAAMrE,GACjDA,EAAIoB,QAAQiD,MAAM9R,KAC3B,EAGAuM,EAAGhZ,UAAU2e,MAAQ,SAAgBzE,GAEnC,IAAI/I,EACA1S,EACAgO,KAAKxN,OAASib,EAAIjb,QACpBkS,EAAI1E,KACJhO,EAAIyb,IAEJ/I,EAAI+I,EACJzb,EAAIgO,MAGN,IAAK,IAAIpI,EAAI,EAAGA,EAAI5F,EAAEQ,OAAQoF,IAC5BoI,KAAK6M,MAAMjV,GAAK8M,EAAEmI,MAAMjV,GAAK5F,EAAE6a,MAAMjV,GAGvC,GAAIoI,OAAS0E,EACX,KAAO9M,EAAI8M,EAAElS,OAAQoF,IACnBoI,KAAK6M,MAAMjV,GAAK8M,EAAEmI,MAAMjV,GAM5B,OAFAoI,KAAKxN,OAASkS,EAAElS,OAETwN,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAU4e,KAAO,SAAe1E,GAEjC,OADAxB,EAA0C,KAAlCjM,KAAK4M,SAAWa,EAAIb,WACrB5M,KAAKkS,MAAMzE,EACpB,EAGAlB,EAAGhZ,UAAU6e,IAAM,SAAc3E,GAC/B,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQsD,KAAK1E,GAChDA,EAAIoB,QAAQsD,KAAKnS,KAC1B,EAEAuM,EAAGhZ,UAAU8e,KAAO,SAAe5E,GACjC,OAAIzN,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQqD,MAAMzE,GACjDA,EAAIoB,QAAQqD,MAAMlS,KAC3B,EAGAuM,EAAGhZ,UAAU2d,MAAQ,SAAgBD,GACnChF,EAAwB,kBAAVgF,GAAsBA,GAAS,GAE7C,IAAIqB,EAAsC,EAAxB/d,KAAK2Z,KAAK+C,EAAQ,IAChCsB,EAAWtB,EAAQ,GAGvBjR,KAAK8O,QAAQwD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAI1a,EAAI,EAAGA,EAAI0a,EAAa1a,IAC/BoI,KAAK6M,MAAMjV,GAAsB,UAAhBoI,KAAK6M,MAAMjV,GAS9B,OALI2a,EAAW,IACbvS,KAAK6M,MAAMjV,IAAMoI,KAAK6M,MAAMjV,GAAM,UAAc,GAAK2a,GAIhDvS,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAU+d,KAAO,SAAeL,GACjC,OAAOjR,KAAK6O,QAAQqC,MAAMD,EAC5B,EAGA1E,EAAGhZ,UAAUif,KAAO,SAAeC,EAAK9R,GACtCsL,EAAsB,kBAARwG,GAAoBA,GAAO,GAEzC,IAAIrE,EAAOqE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARAzS,KAAK8O,QAAQV,EAAM,GAGjBpO,KAAK6M,MAAMuB,GADTzN,EACgBX,KAAK6M,MAAMuB,GAAQ,GAAKsE,EAExB1S,KAAK6M,MAAMuB,KAAS,GAAKsE,GAGtC1S,KAAKqO,QACd,EAGA9B,EAAGhZ,UAAUof,KAAO,SAAelF,GACjC,IAAIH,EAkBA5I,EAAG1S,EAfP,GAAsB,IAAlBgO,KAAK4M,UAAmC,IAAjBa,EAAIb,SAI7B,OAHA5M,KAAK4M,SAAW,EAChBU,EAAItN,KAAK4S,KAAKnF,GACdzN,KAAK4M,UAAY,EACV5M,KAAK+O,YAGP,GAAsB,IAAlB/O,KAAK4M,UAAmC,IAAjBa,EAAIb,SAIpC,OAHAa,EAAIb,SAAW,EACfU,EAAItN,KAAK4S,KAAKnF,GACdA,EAAIb,SAAW,EACRU,EAAEyB,YAKP/O,KAAKxN,OAASib,EAAIjb,QACpBkS,EAAI1E,KACJhO,EAAIyb,IAEJ/I,EAAI+I,EACJzb,EAAIgO,MAIN,IADA,IAAIqP,EAAQ,EACHzX,EAAI,EAAGA,EAAI5F,EAAEQ,OAAQoF,IAC5B0V,GAAkB,EAAb5I,EAAEmI,MAAMjV,KAAwB,EAAb5F,EAAE6a,MAAMjV,IAAUyX,EAC1CrP,KAAK6M,MAAMjV,GAAS,SAAJ0V,EAChB+B,EAAQ/B,IAAM,GAEhB,KAAiB,IAAV+B,GAAezX,EAAI8M,EAAElS,OAAQoF,IAClC0V,GAAkB,EAAb5I,EAAEmI,MAAMjV,IAAUyX,EACvBrP,KAAK6M,MAAMjV,GAAS,SAAJ0V,EAChB+B,EAAQ/B,IAAM,GAIhB,GADAtN,KAAKxN,OAASkS,EAAElS,OACF,IAAV6c,EACFrP,KAAK6M,MAAM7M,KAAKxN,QAAU6c,EAC1BrP,KAAKxN,cAEA,GAAIkS,IAAM1E,KACf,KAAOpI,EAAI8M,EAAElS,OAAQoF,IACnBoI,KAAK6M,MAAMjV,GAAK8M,EAAEmI,MAAMjV,GAI5B,OAAOoI,IACT,EAGAuM,EAAGhZ,UAAUsf,IAAM,SAAcpF,GAC/B,IAAI3K,EACJ,OAAqB,IAAjB2K,EAAIb,UAAoC,IAAlB5M,KAAK4M,UAC7Ba,EAAIb,SAAW,EACf9J,EAAM9C,KAAKwJ,IAAIiE,GACfA,EAAIb,UAAY,EACT9J,GACmB,IAAjB2K,EAAIb,UAAoC,IAAlB5M,KAAK4M,UACpC5M,KAAK4M,SAAW,EAChB9J,EAAM2K,EAAIjE,IAAIxJ,MACdA,KAAK4M,SAAW,EACT9J,GAGL9C,KAAKxN,OAASib,EAAIjb,OAAewN,KAAK6O,QAAQ8D,KAAKlF,GAEhDA,EAAIoB,QAAQ8D,KAAK3S,KAC1B,EAGAuM,EAAGhZ,UAAUqf,KAAO,SAAenF,GAEjC,GAAqB,IAAjBA,EAAIb,SAAgB,CACtBa,EAAIb,SAAW,EACf,IAAIU,EAAItN,KAAK2S,KAAKlF,GAElB,OADAA,EAAIb,SAAW,EACRU,EAAEyB,WAGX,CAAO,GAAsB,IAAlB/O,KAAK4M,SAId,OAHA5M,KAAK4M,SAAW,EAChB5M,KAAK2S,KAAKlF,GACVzN,KAAK4M,SAAW,EACT5M,KAAK+O,YAId,IAWIrK,EAAG1S,EAXH4b,EAAM5N,KAAK4N,IAAIH,GAGnB,GAAY,IAARG,EAIF,OAHA5N,KAAK4M,SAAW,EAChB5M,KAAKxN,OAAS,EACdwN,KAAK6M,MAAM,GAAK,EACT7M,KAKL4N,EAAM,GACRlJ,EAAI1E,KACJhO,EAAIyb,IAEJ/I,EAAI+I,EACJzb,EAAIgO,MAIN,IADA,IAAIqP,EAAQ,EACHzX,EAAI,EAAGA,EAAI5F,EAAEQ,OAAQoF,IAE5ByX,GADA/B,GAAkB,EAAb5I,EAAEmI,MAAMjV,KAAwB,EAAb5F,EAAE6a,MAAMjV,IAAUyX,IAC7B,GACbrP,KAAK6M,MAAMjV,GAAS,SAAJ0V,EAElB,KAAiB,IAAV+B,GAAezX,EAAI8M,EAAElS,OAAQoF,IAElCyX,GADA/B,GAAkB,EAAb5I,EAAEmI,MAAMjV,IAAUyX,IACV,GACbrP,KAAK6M,MAAMjV,GAAS,SAAJ0V,EAIlB,GAAc,IAAV+B,GAAezX,EAAI8M,EAAElS,QAAUkS,IAAM1E,KACvC,KAAOpI,EAAI8M,EAAElS,OAAQoF,IACnBoI,KAAK6M,MAAMjV,GAAK8M,EAAEmI,MAAMjV,GAU5B,OANAoI,KAAKxN,OAAS+B,KAAKgR,IAAIvF,KAAKxN,OAAQoF,GAEhC8M,IAAM1E,OACRA,KAAK4M,SAAW,GAGX5M,KAAKqO,QACd,EAGA9B,EAAGhZ,UAAUiW,IAAM,SAAciE,GAC/B,OAAOzN,KAAK6O,QAAQ+D,KAAKnF,EAC3B,EA8CA,IAAIqF,EAAc,SAAsB/C,EAAMtC,EAAKrH,GACjD,IAIIvS,EACAkf,EACArQ,EANAgC,EAAIqL,EAAKlD,MACT7a,EAAIyb,EAAIZ,MACRmG,EAAI5M,EAAIyG,MACRpK,EAAI,EAIJwQ,EAAY,EAAPvO,EAAE,GACPwO,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1O,EAAE,GACP2O,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7O,EAAE,GACP8O,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhP,EAAE,GACPiP,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnP,EAAE,GACPoP,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtP,EAAE,GACPuP,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzP,EAAE,GACP0P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5P,EAAE,GACP6P,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/P,EAAE,GACPgQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlQ,EAAE,GACPmQ,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/iB,EAAE,GACPgjB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPljB,EAAE,GACPmjB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrjB,EAAE,GACPsjB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPxjB,EAAE,GACPyjB,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP3jB,EAAE,GACP4jB,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAP9jB,EAAE,GACP+jB,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPjkB,EAAE,GACPkkB,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPpkB,EAAE,GACPqkB,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPvkB,EAAE,GACPwkB,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP1kB,EAAE,GACP2kB,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBtQ,EAAIwG,SAAWmD,EAAKnD,SAAWa,EAAIb,SACnCxG,EAAI5T,OAAS,GAMb,IAAIqkB,IAAQpU,GAJZ5O,EAAKU,KAAKuiB,KAAK5D,EAAK8B,IAIE,KAAa,MAFnCjC,GADAA,EAAMxe,KAAKuiB,KAAK5D,EAAK+B,IACR1gB,KAAKuiB,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDvS,IAFAC,EAAKnO,KAAKuiB,KAAK3D,EAAK8B,KAEPlC,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAENhjB,EAAKU,KAAKuiB,KAAKzD,EAAK2B,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKzD,EAAK4B,IACR1gB,KAAKuiB,KAAKxD,EAAK0B,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQtU,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKkC,GAAQ,GACvB7gB,KAAKuiB,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrD1S,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKiC,GAAQ,IAErBrC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAENljB,EAAKU,KAAKuiB,KAAKtD,EAAKwB,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKtD,EAAKyB,IACR1gB,KAAKuiB,KAAKrD,EAAKuB,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKrD,EAAKwB,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAK8B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAK+B,GAAQ,GACvB7gB,KAAKuiB,KAAKxD,EAAK6B,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQvU,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKqC,GAAQ,GACvBhhB,KAAKuiB,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrD7S,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKoC,GAAQ,IAErBxC,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAENnjB,EAAKU,KAAKuiB,KAAKnD,EAAKqB,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKnD,EAAKsB,IACR1gB,KAAKuiB,KAAKlD,EAAKoB,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKlD,EAAKqB,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAK2B,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAK4B,GAAQ,GACvB7gB,KAAKuiB,KAAKrD,EAAK0B,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAK2B,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKiC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKkC,GAAQ,GACvBhhB,KAAKuiB,KAAKxD,EAAKgC,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQxU,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKwC,GAAQ,GACvBnhB,KAAKuiB,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrDhT,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKuC,GAAQ,IAErB3C,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAENpjB,EAAKU,KAAKuiB,KAAKhD,EAAKkB,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKhD,EAAKmB,IACR1gB,KAAKuiB,KAAK/C,EAAKiB,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAK/C,EAAKkB,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKwB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKyB,GAAQ,GACvB7gB,KAAKuiB,KAAKlD,EAAKuB,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKwB,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAK8B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAK+B,GAAQ,GACvBhhB,KAAKuiB,KAAKrD,EAAK6B,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAK8B,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKoC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKqC,GAAQ,GACvBnhB,KAAKuiB,KAAKxD,EAAKmC,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQzU,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAK2C,IAAQ,GACvBthB,KAAKuiB,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrDnT,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAK0C,IAAQ,IAErB9C,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAENrjB,EAAKU,KAAKuiB,KAAK7C,EAAKe,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAK7C,EAAKgB,IACR1gB,KAAKuiB,KAAK5C,EAAKc,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAK5C,EAAKe,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKqB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKsB,GAAQ,GACvB7gB,KAAKuiB,KAAK/C,EAAKoB,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKqB,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAK2B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAK4B,GAAQ,GACvBhhB,KAAKuiB,KAAKlD,EAAK0B,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAK2B,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKiC,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKkC,GAAQ,GACvBnhB,KAAKuiB,KAAKrD,EAAKgC,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKiC,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKuC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKwC,IAAQ,GACvBthB,KAAKuiB,KAAKxD,EAAKsC,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQ1U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAK8C,IAAQ,GACvBzhB,KAAKuiB,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDtT,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAK6C,IAAQ,IAErBjD,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAENtjB,EAAKU,KAAKuiB,KAAK1C,EAAKY,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAK1C,EAAKa,IACR1gB,KAAKuiB,KAAKzC,EAAKW,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKzC,EAAKY,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKkB,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKmB,GAAQ,GACvB7gB,KAAKuiB,KAAK5C,EAAKiB,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKkB,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKwB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKyB,GAAQ,GACvBhhB,KAAKuiB,KAAK/C,EAAKuB,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKwB,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAK8B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAK+B,GAAQ,GACvBnhB,KAAKuiB,KAAKlD,EAAK6B,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAK8B,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKoC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKqC,IAAQ,GACvBthB,KAAKuiB,KAAKrD,EAAKmC,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKoC,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAK0C,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAK2C,IAAQ,GACvBzhB,KAAKuiB,KAAKxD,EAAKyC,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQ3U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKiD,IAAQ,GACvB5hB,KAAKuiB,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrDzT,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAENvjB,EAAKU,KAAKuiB,KAAKvC,EAAKS,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKvC,EAAKU,IACR1gB,KAAKuiB,KAAKtC,EAAKQ,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKtC,EAAKS,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKe,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKgB,GAAQ,GACvB7gB,KAAKuiB,KAAKzC,EAAKc,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKe,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKqB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKsB,GAAQ,GACvBhhB,KAAKuiB,KAAK5C,EAAKoB,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKqB,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAK2B,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAK4B,GAAQ,GACvBnhB,KAAKuiB,KAAK/C,EAAK0B,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAK2B,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKiC,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKkC,IAAQ,GACvBthB,KAAKuiB,KAAKlD,EAAKgC,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKiC,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKuC,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKwC,IAAQ,GACvBzhB,KAAKuiB,KAAKrD,EAAKsC,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKuC,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAK6C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAK8C,IAAQ,GACvB5hB,KAAKuiB,KAAKxD,EAAK4C,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQ5U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKoD,IAAQ,GACvB/hB,KAAKuiB,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrD5T,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKmD,IAAQ,IAErBvD,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAENxjB,EAAKU,KAAKuiB,KAAKpC,EAAKM,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKpC,EAAKO,IACR1gB,KAAKuiB,KAAKnC,EAAKK,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKnC,EAAKM,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKY,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKa,GAAQ,GACvB7gB,KAAKuiB,KAAKtC,EAAKW,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKY,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKkB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKmB,GAAQ,GACvBhhB,KAAKuiB,KAAKzC,EAAKiB,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKkB,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKwB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKyB,GAAQ,GACvBnhB,KAAKuiB,KAAK5C,EAAKuB,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKwB,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAK8B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAK+B,IAAQ,GACvBthB,KAAKuiB,KAAK/C,EAAK6B,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAK8B,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKoC,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKqC,IAAQ,GACvBzhB,KAAKuiB,KAAKlD,EAAKmC,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKoC,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAK0C,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAK2C,IAAQ,GACvB5hB,KAAKuiB,KAAKrD,EAAKyC,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAK0C,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKgD,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKiD,IAAQ,GACvB/hB,KAAKuiB,KAAKxD,EAAK+C,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQ7U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAKuD,IAAQ,GACvBliB,KAAKuiB,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrD/T,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKsD,IAAQ,IAErB1D,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAENzjB,EAAKU,KAAKuiB,KAAKjC,EAAKG,GAEpBjC,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKI,IACR1gB,KAAKuiB,KAAKhC,EAAKE,GAAQ,EACpCtS,EAAKnO,KAAKuiB,KAAKhC,EAAKG,GACpBphB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKS,GAAQ,EAElCpC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKU,GAAQ,GACvB7gB,KAAKuiB,KAAKnC,EAAKQ,GAAQ,EACpCzS,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKS,GAAQ,EAClCvhB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKe,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKgB,GAAQ,GACvBhhB,KAAKuiB,KAAKtC,EAAKc,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKe,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKqB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKsB,GAAQ,GACvBnhB,KAAKuiB,KAAKzC,EAAKoB,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKqB,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAK2B,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAK4B,IAAQ,GACvBthB,KAAKuiB,KAAK5C,EAAK0B,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAK2B,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKiC,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKkC,IAAQ,GACvBzhB,KAAKuiB,KAAK/C,EAAKgC,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKiC,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKuC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKwC,IAAQ,GACvB5hB,KAAKuiB,KAAKlD,EAAKsC,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKuC,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAK6C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAK8C,IAAQ,GACvB/hB,KAAKuiB,KAAKrD,EAAK4C,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAK6C,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKmD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKoD,IAAQ,GACvBliB,KAAKuiB,KAAKxD,EAAKkD,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQ9U,GAJZ5O,EAAMA,EAAKU,KAAKuiB,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK5D,EAAK0D,IAAQ,GACvBriB,KAAKuiB,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK3D,EAAKyD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMwE,KAAO,IAAO,EAChDA,IAAM,SAEN1jB,EAAKU,KAAKuiB,KAAKjC,EAAKM,GAEpBpC,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKO,IACR7gB,KAAKuiB,KAAKhC,EAAKK,GAAQ,EACpCzS,EAAKnO,KAAKuiB,KAAKhC,EAAKM,GACpBvhB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKY,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKa,GAAQ,GACvBhhB,KAAKuiB,KAAKnC,EAAKW,GAAQ,EACpC5S,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKY,GAAQ,EAClC1hB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKkB,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKmB,GAAQ,GACvBnhB,KAAKuiB,KAAKtC,EAAKiB,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKkB,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKwB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKyB,IAAQ,GACvBthB,KAAKuiB,KAAKzC,EAAKuB,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKwB,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAK8B,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAK+B,IAAQ,GACvBzhB,KAAKuiB,KAAK5C,EAAK6B,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAK8B,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKoC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKqC,IAAQ,GACvB5hB,KAAKuiB,KAAK/C,EAAKmC,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKoC,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAK0C,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAK2C,IAAQ,GACvB/hB,KAAKuiB,KAAKlD,EAAKyC,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAK0C,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKgD,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKiD,IAAQ,GACvBliB,KAAKuiB,KAAKrD,EAAK+C,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAAS/U,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKzD,EAAKuD,IAAQ,GACvBriB,KAAKuiB,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKxD,EAAKsD,IAAQ,IAErB7D,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEP3jB,EAAKU,KAAKuiB,KAAKjC,EAAKS,GAEpBvC,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKU,IACRhhB,KAAKuiB,KAAKhC,EAAKQ,GAAQ,EACpC5S,EAAKnO,KAAKuiB,KAAKhC,EAAKS,GACpB1hB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKe,GAAQ,EAElC1C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKgB,GAAQ,GACvBnhB,KAAKuiB,KAAKnC,EAAKc,GAAQ,EACpC/S,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKe,GAAQ,EAClC7hB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKqB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKsB,IAAQ,GACvBthB,KAAKuiB,KAAKtC,EAAKoB,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKqB,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAK2B,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAK4B,IAAQ,GACvBzhB,KAAKuiB,KAAKzC,EAAK0B,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAK2B,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKiC,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKkC,IAAQ,GACvB5hB,KAAKuiB,KAAK5C,EAAKgC,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKiC,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAKuC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAKwC,IAAQ,GACvB/hB,KAAKuiB,KAAK/C,EAAKsC,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAKuC,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAK6C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAK8C,IAAQ,GACvBliB,KAAKuiB,KAAKlD,EAAK4C,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAAShV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKtD,EAAKoD,IAAQ,GACvBriB,KAAKuiB,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKrD,EAAKmD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEP5jB,EAAKU,KAAKuiB,KAAKjC,EAAKY,GAEpB1C,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKa,IACRnhB,KAAKuiB,KAAKhC,EAAKW,GAAQ,EACpC/S,EAAKnO,KAAKuiB,KAAKhC,EAAKY,GACpB7hB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKkB,GAAQ,EAElC7C,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKmB,IAAQ,GACvBthB,KAAKuiB,KAAKnC,EAAKiB,GAAQ,EACpClT,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKkB,IAAQ,EAClChiB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKwB,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKyB,IAAQ,GACvBzhB,KAAKuiB,KAAKtC,EAAKuB,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKwB,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAK8B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAK+B,IAAQ,GACvB5hB,KAAKuiB,KAAKzC,EAAK6B,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAK8B,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKoC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKqC,IAAQ,GACvB/hB,KAAKuiB,KAAK5C,EAAKmC,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKoC,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAK0C,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAK2C,IAAQ,GACvBliB,KAAKuiB,KAAK/C,EAAKyC,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAASjV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKnD,EAAKiD,IAAQ,GACvBriB,KAAKuiB,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKlD,EAAKgD,IAAQ,IAErB7D,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEP7jB,EAAKU,KAAKuiB,KAAKjC,EAAKe,GAEpB7C,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKgB,KACRthB,KAAKuiB,KAAKhC,EAAKc,GAAQ,EACpClT,EAAKnO,KAAKuiB,KAAKhC,EAAKe,IACpBhiB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKqB,IAAQ,EAElChD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKsB,IAAQ,GACvBzhB,KAAKuiB,KAAKnC,EAAKoB,IAAQ,EACpCrT,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKqB,IAAQ,EAClCniB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAK2B,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAK4B,IAAQ,GACvB5hB,KAAKuiB,KAAKtC,EAAK0B,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAK2B,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKiC,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKkC,IAAQ,GACvB/hB,KAAKuiB,KAAKzC,EAAKgC,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKiC,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAKuC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAKwC,IAAQ,GACvBliB,KAAKuiB,KAAK5C,EAAKsC,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAASlV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKhD,EAAK8C,IAAQ,GACvBriB,KAAKuiB,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK/C,EAAK6C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEP9jB,EAAKU,KAAKuiB,KAAKjC,EAAKkB,IAEpBhD,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKmB,KACRzhB,KAAKuiB,KAAKhC,EAAKiB,IAAQ,EACpCrT,EAAKnO,KAAKuiB,KAAKhC,EAAKkB,IACpBniB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKwB,IAAQ,EAElCnD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKyB,IAAQ,GACvB5hB,KAAKuiB,KAAKnC,EAAKuB,IAAQ,EACpCxT,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKwB,IAAQ,EAClCtiB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAK8B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAK+B,IAAQ,GACvB/hB,KAAKuiB,KAAKtC,EAAK6B,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAK8B,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKoC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKqC,IAAQ,GACvBliB,KAAKuiB,KAAKzC,EAAKmC,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAASnV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK7C,EAAK2C,IAAQ,GACvBriB,KAAKuiB,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAK5C,EAAK0C,IAAQ,IAErB7D,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEP/jB,EAAKU,KAAKuiB,KAAKjC,EAAKqB,IAEpBnD,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKsB,KACR5hB,KAAKuiB,KAAKhC,EAAKoB,IAAQ,EACpCxT,EAAKnO,KAAKuiB,KAAKhC,EAAKqB,IACpBtiB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAK2B,IAAQ,EAElCtD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAK4B,IAAQ,GACvB/hB,KAAKuiB,KAAKnC,EAAK0B,IAAQ,EACpC3T,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAK2B,IAAQ,EAClCziB,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKiC,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKkC,IAAQ,GACvBliB,KAAKuiB,KAAKtC,EAAKgC,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAASpV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAK1C,EAAKwC,IAAQ,GACvBriB,KAAKuiB,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKzC,EAAKuC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPhkB,EAAKU,KAAKuiB,KAAKjC,EAAKwB,IAEpBtD,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAKyB,KACR/hB,KAAKuiB,KAAKhC,EAAKuB,IAAQ,EACpC3T,EAAKnO,KAAKuiB,KAAKhC,EAAKwB,IACpBziB,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAK8B,IAAQ,EAElCzD,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAK+B,IAAQ,GACvBliB,KAAKuiB,KAAKnC,EAAK6B,IAAQ,EACpC9T,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAASrV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKvC,EAAKqC,IAAQ,GACvBriB,KAAKuiB,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKtC,EAAKoC,IAAQ,IAErB7D,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAEPjkB,EAAKU,KAAKuiB,KAAKjC,EAAK2B,IAEpBzD,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAK4B,KACRliB,KAAKuiB,KAAKhC,EAAK0B,IAAQ,EACpC9T,EAAKnO,KAAKuiB,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAAStV,GAJb5O,EAAMA,EAAKU,KAAKuiB,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpC5D,GADAA,EAAOA,EAAMxe,KAAKuiB,KAAKpC,EAAKkC,IAAQ,GACvBriB,KAAKuiB,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtDlU,IAFAC,EAAMA,EAAKnO,KAAKuiB,KAAKnC,EAAKiC,IAAQ,IAErB7D,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASvV,GAJb5O,EAAKU,KAAKuiB,KAAKjC,EAAK8B,KAIG,KAAa,MAFpC5D,GADAA,EAAMxe,KAAKuiB,KAAKjC,EAAK+B,KACRriB,KAAKuiB,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBAlU,IAFAC,EAAKnO,KAAKuiB,KAAKhC,EAAK8B,MAEP7D,IAAQ,IAAO,IAAMiF,KAAQ,IAAO,EACjDA,IAAO,SACPhF,EAAE,GAAK6D,GACP7D,EAAE,GAAK+D,GACP/D,EAAE,GAAKgE,GACPhE,EAAE,GAAKiE,GACPjE,EAAE,GAAKkE,GACPlE,EAAE,GAAKmE,GACPnE,EAAE,GAAKoE,GACPpE,EAAE,GAAKqE,GACPrE,EAAE,GAAKsE,GACPtE,EAAE,GAAKuE,GACPvE,EAAE,IAAMwE,GACRxE,EAAE,IAAMyE,GACRzE,EAAE,IAAM0E,GACR1E,EAAE,IAAM2E,GACR3E,EAAE,IAAM4E,GACR5E,EAAE,IAAM6E,GACR7E,EAAE,IAAM8E,GACR9E,EAAE,IAAM+E,GACR/E,EAAE,IAAMgF,GACE,IAANvV,IACFuQ,EAAE,IAAMvQ,EACR2D,EAAI5T,UAEC4T,CACT,EAOA,SAAS6R,EAAUlI,EAAMtC,EAAKrH,GAC5BA,EAAIwG,SAAWa,EAAIb,SAAWmD,EAAKnD,SACnCxG,EAAI5T,OAASud,EAAKvd,OAASib,EAAIjb,OAI/B,IAFA,IAAI6c,EAAQ,EACR6I,EAAU,EACLlI,EAAI,EAAGA,EAAI5J,EAAI5T,OAAS,EAAGwd,IAAK,CAGvC,IAAIC,EAASiI,EACbA,EAAU,EAGV,IAFA,IAAIhI,EAAgB,SAARb,EACRc,EAAO5b,KAAKsO,IAAImN,EAAGvC,EAAIjb,OAAS,GAC3BgP,EAAIjN,KAAKgR,IAAI,EAAGyK,EAAID,EAAKvd,OAAS,GAAIgP,GAAK2O,EAAM3O,IAAK,CAC7D,IAAI5J,EAAIoY,EAAIxO,EAGR8L,GAFoB,EAAhByC,EAAKlD,MAAMjV,KACI,EAAf6V,EAAIZ,MAAMrL,IAGd3N,EAAS,SAAJyZ,EAGT4C,EAAa,UADbrc,EAAMA,EAAKqc,EAAS,GAIpBgI,IAFAjI,GAHAA,EAAUA,GAAW3C,EAAI,SAAa,GAAM,IAGxBzZ,IAAO,IAAO,KAEZ,GACtBoc,GAAU,QACZ,CACA7J,EAAIyG,MAAMmD,GAAKE,EACfb,EAAQY,EACRA,EAASiI,CACX,CAOA,OANc,IAAV7I,EACFjJ,EAAIyG,MAAMmD,GAAKX,EAEfjJ,EAAI5T,SAGC4T,EAAIiI,QACb,CAEA,SAAS8J,EAAYpI,EAAMtC,EAAKrH,GAI9B,OAAO6R,EAASlI,EAAMtC,EAAKrH,EAC7B,CAqBA,SAASgS,EAAMzT,EAAGC,GAChB5E,KAAK2E,EAAIA,EACT3E,KAAK4E,EAAIA,CACX,CA1EKrQ,KAAKuiB,OACRhE,EAAchD,GAmDhBvD,EAAGhZ,UAAU8kB,MAAQ,SAAgB5K,EAAKrH,GACxC,IACIrH,EAAMiB,KAAKxN,OAASib,EAAIjb,OAW5B,OAVoB,KAAhBwN,KAAKxN,QAAgC,KAAfib,EAAIjb,OACtBsgB,EAAY9S,KAAMyN,EAAKrH,GACpBrH,EAAM,GACT+Q,EAAW9P,KAAMyN,EAAKrH,GACnBrH,EAAM,KACTkZ,EAASjY,KAAMyN,EAAKrH,GAEpB+R,EAAWnY,KAAMyN,EAAKrH,EAIhC,EAUAgS,EAAK7kB,UAAU+kB,QAAU,SAAkBC,GAGzC,IAFA,IAAI3H,EAAI,IAAIxY,MAAMmgB,GACdC,EAAIjM,EAAGhZ,UAAUod,WAAW4H,GAAK,EAC5B3gB,EAAI,EAAGA,EAAI2gB,EAAG3gB,IACrBgZ,EAAEhZ,GAAKoI,KAAKyY,OAAO7gB,EAAG4gB,EAAGD,GAG3B,OAAO3H,CACT,EAGAwH,EAAK7kB,UAAUklB,OAAS,SAAiB9T,EAAG6T,EAAGD,GAC7C,GAAU,IAAN5T,GAAWA,IAAM4T,EAAI,EAAG,OAAO5T,EAGnC,IADA,IAAI+T,EAAK,EACA9gB,EAAI,EAAGA,EAAI4gB,EAAG5gB,IACrB8gB,IAAW,EAAJ/T,IAAW6T,EAAI5gB,EAAI,EAC1B+M,IAAM,EAGR,OAAO+T,CACT,EAIAN,EAAK7kB,UAAUolB,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GACpE,IAAK,IAAI3gB,EAAI,EAAGA,EAAI2gB,EAAG3gB,IACrBmhB,EAAKnhB,GAAKihB,EAAID,EAAIhhB,IAClBohB,EAAKphB,GAAKkhB,EAAIF,EAAIhhB,GAEtB,EAEAwgB,EAAK7kB,UAAU0lB,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMT,EAAGK,GACtE5Y,KAAK2Y,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMT,GAExC,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAGW,IAAM,EAM3B,IALA,IAAIV,EAAIU,GAAK,EAETC,EAAQ5kB,KAAK6kB,IAAI,EAAI7kB,KAAK8kB,GAAKb,GAC/Bc,EAAQ/kB,KAAKglB,IAAI,EAAIhlB,KAAK8kB,GAAKb,GAE1BgB,EAAI,EAAGA,EAAIjB,EAAGiB,GAAKhB,EAI1B,IAHA,IAAIiB,EAASN,EACTO,EAASJ,EAEJ9X,EAAI,EAAGA,EAAI0X,EAAG1X,IAAK,CAC1B,IAAImY,EAAKZ,EAAKS,EAAIhY,GACdoY,EAAKZ,EAAKQ,EAAIhY,GAEdqY,EAAKd,EAAKS,EAAIhY,EAAI0X,GAClBY,EAAKd,EAAKQ,EAAIhY,EAAI0X,GAElBa,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELhB,EAAKS,EAAIhY,GAAKmY,EAAKE,EACnBb,EAAKQ,EAAIhY,GAAKoY,EAAKE,EAEnBf,EAAKS,EAAIhY,EAAI0X,GAAKS,EAAKE,EACvBb,EAAKQ,EAAIhY,EAAI0X,GAAKU,EAAKE,EAGnBtY,IAAMgX,IACRuB,EAAKZ,EAAQM,EAASH,EAAQI,EAE9BA,EAASP,EAAQO,EAASJ,EAAQG,EAClCA,EAASM,EAEb,CAGN,EAEA3B,EAAK7kB,UAAUymB,YAAc,SAAsBxZ,EAAGC,GACpD,IAAI8X,EAAqB,EAAjBhkB,KAAKgR,IAAI9E,EAAGD,GAChByZ,EAAU,EAAJ1B,EACN3gB,EAAI,EACR,IAAK2gB,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B3gB,IAGF,OAAO,GAAKA,EAAI,EAAIqiB,CACtB,EAEA7B,EAAK7kB,UAAU2mB,UAAY,SAAoBrB,EAAKC,EAAKP,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI3gB,EAAI,EAAGA,EAAI2gB,EAAI,EAAG3gB,IAAK,CAC9B,IAAIgZ,EAAIiI,EAAIjhB,GAEZihB,EAAIjhB,GAAKihB,EAAIN,EAAI3gB,EAAI,GACrBihB,EAAIN,EAAI3gB,EAAI,GAAKgZ,EAEjBA,EAAIkI,EAAIlhB,GAERkhB,EAAIlhB,IAAMkhB,EAAIP,EAAI3gB,EAAI,GACtBkhB,EAAIP,EAAI3gB,EAAI,IAAMgZ,CACpB,CACF,EAEAwH,EAAK7kB,UAAU4mB,aAAe,SAAuBC,EAAI7B,GAEvD,IADA,IAAIlJ,EAAQ,EACHzX,EAAI,EAAGA,EAAI2gB,EAAI,EAAG3gB,IAAK,CAC9B,IAAIuW,EAAoC,KAAhC5Z,KAAK8lB,MAAMD,EAAG,EAAIxiB,EAAI,GAAK2gB,GACjChkB,KAAK8lB,MAAMD,EAAG,EAAIxiB,GAAK2gB,GACvBlJ,EAEF+K,EAAGxiB,GAAS,SAAJuW,EAGNkB,EADElB,EAAI,SACE,EAEAA,EAAI,SAAY,CAE5B,CAEA,OAAOiM,CACT,EAEAhC,EAAK7kB,UAAU+mB,WAAa,SAAqBF,EAAIrb,EAAK8Z,EAAKN,GAE7D,IADA,IAAIlJ,EAAQ,EACHzX,EAAI,EAAGA,EAAImH,EAAKnH,IACvByX,GAAyB,EAAR+K,EAAGxiB,GAEpBihB,EAAI,EAAIjhB,GAAa,KAARyX,EAAgBA,KAAkB,GAC/CwJ,EAAI,EAAIjhB,EAAI,GAAa,KAARyX,EAAgBA,KAAkB,GAIrD,IAAKzX,EAAI,EAAImH,EAAKnH,EAAI2gB,IAAK3gB,EACzBihB,EAAIjhB,GAAK,EAGXqU,EAAiB,IAAVoD,GACPpD,EAA6B,MAAb,KAARoD,GACV,EAEA+I,EAAK7kB,UAAUgnB,KAAO,SAAehC,GAEnC,IADA,IAAIiC,EAAK,IAAIpiB,MAAMmgB,GACV3gB,EAAI,EAAGA,EAAI2gB,EAAG3gB,IACrB4iB,EAAG5iB,GAAK,EAGV,OAAO4iB,CACT,EAEApC,EAAK7kB,UAAUknB,KAAO,SAAe9V,EAAGC,EAAGwB,GACzC,IAAImS,EAAI,EAAIvY,KAAKga,YAAYrV,EAAEnS,OAAQoS,EAAEpS,QAErComB,EAAM5Y,KAAKsY,QAAQC,GAEnBmC,EAAI1a,KAAKua,KAAKhC,GAEdM,EAAM,IAAIzgB,MAAMmgB,GAChBoC,EAAO,IAAIviB,MAAMmgB,GACjBqC,EAAO,IAAIxiB,MAAMmgB,GAEjBsC,EAAO,IAAIziB,MAAMmgB,GACjBuC,EAAQ,IAAI1iB,MAAMmgB,GAClBwC,EAAQ,IAAI3iB,MAAMmgB,GAElByC,EAAO5U,EAAIyG,MACfmO,EAAKxoB,OAAS+lB,EAEdvY,KAAKsa,WAAW3V,EAAEkI,MAAOlI,EAAEnS,OAAQqmB,EAAKN,GACxCvY,KAAKsa,WAAW1V,EAAEiI,MAAOjI,EAAEpS,OAAQqoB,EAAMtC,GAEzCvY,KAAKiZ,UAAUJ,EAAK6B,EAAGC,EAAMC,EAAMrC,EAAGK,GACtC5Y,KAAKiZ,UAAU4B,EAAMH,EAAGI,EAAOC,EAAOxC,EAAGK,GAEzC,IAAK,IAAIhhB,EAAI,EAAGA,EAAI2gB,EAAG3gB,IAAK,CAC1B,IAAImiB,EAAKY,EAAK/iB,GAAKkjB,EAAMljB,GAAKgjB,EAAKhjB,GAAKmjB,EAAMnjB,GAC9CgjB,EAAKhjB,GAAK+iB,EAAK/iB,GAAKmjB,EAAMnjB,GAAKgjB,EAAKhjB,GAAKkjB,EAAMljB,GAC/C+iB,EAAK/iB,GAAKmiB,CACZ,CASA,OAPA/Z,KAAKka,UAAUS,EAAMC,EAAMrC,GAC3BvY,KAAKiZ,UAAU0B,EAAMC,EAAMI,EAAMN,EAAGnC,EAAGK,GACvC5Y,KAAKka,UAAUc,EAAMN,EAAGnC,GACxBvY,KAAKma,aAAaa,EAAMzC,GAExBnS,EAAIwG,SAAWjI,EAAEiI,SAAWhI,EAAEgI,SAC9BxG,EAAI5T,OAASmS,EAAEnS,OAASoS,EAAEpS,OACnB4T,EAAIiI,QACb,EAGA9B,EAAGhZ,UAAU+T,IAAM,SAAcmG,GAC/B,IAAIrH,EAAM,IAAImG,EAAG,MAEjB,OADAnG,EAAIyG,MAAQ,IAAIzU,MAAM4H,KAAKxN,OAASib,EAAIjb,QACjCwN,KAAKqY,MAAM5K,EAAKrH,EACzB,EAGAmG,EAAGhZ,UAAU0nB,KAAO,SAAexN,GACjC,IAAIrH,EAAM,IAAImG,EAAG,MAEjB,OADAnG,EAAIyG,MAAQ,IAAIzU,MAAM4H,KAAKxN,OAASib,EAAIjb,QACjC2lB,EAAWnY,KAAMyN,EAAKrH,EAC/B,EAGAmG,EAAGhZ,UAAUujB,KAAO,SAAerJ,GACjC,OAAOzN,KAAK6O,QAAQwJ,MAAM5K,EAAKzN,KACjC,EAEAuM,EAAGhZ,UAAUmb,MAAQ,SAAgBjB,GACnC,IAAIyN,EAAWzN,EAAM,EACjByN,IAAUzN,GAAOA,GAErBxB,EAAsB,kBAARwB,GACdxB,EAAOwB,EAAM,UAIb,IADA,IAAI4B,EAAQ,EACHzX,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAAK,CACpC,IAAIuW,GAAqB,EAAhBnO,KAAK6M,MAAMjV,IAAU6V,EAC1B5Z,GAAU,SAAJsa,IAA0B,SAARkB,GAC5BA,IAAU,GACVA,GAAUlB,EAAI,SAAa,EAE3BkB,GAASxb,IAAO,GAChBmM,KAAK6M,MAAMjV,GAAU,SAAL/D,CAClB,CAOA,OALc,IAAVwb,IACFrP,KAAK6M,MAAMjV,GAAKyX,EAChBrP,KAAKxN,UAGA0oB,EAAWlb,KAAKuR,OAASvR,IAClC,EAEAuM,EAAGhZ,UAAU4nB,KAAO,SAAe1N,GACjC,OAAOzN,KAAK6O,QAAQH,MAAMjB,EAC5B,EAGAlB,EAAGhZ,UAAU6nB,IAAM,WACjB,OAAOpb,KAAKsH,IAAItH,KAClB,EAGAuM,EAAGhZ,UAAU8nB,KAAO,WAClB,OAAOrb,KAAK8W,KAAK9W,KAAK6O,QACxB,EAGAtC,EAAGhZ,UAAUmC,IAAM,SAAc+X,GAC/B,IAAIU,EA7xCN,SAAqBV,GAGnB,IAFA,IAAIU,EAAI,IAAI/V,MAAMqV,EAAIqD,aAEb2B,EAAM,EAAGA,EAAMtE,EAAE3b,OAAQigB,IAAO,CACvC,IAAIrE,EAAOqE,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjBtE,EAAEsE,GAAQhF,EAAIZ,MAAMuB,KAASsE,EAAQ,CACvC,CAEA,OAAOvE,CACT,CAkxCUmN,CAAW7N,GACnB,GAAiB,IAAbU,EAAE3b,OAAc,OAAO,IAAI+Z,EAAG,GAIlC,IADA,IAAIzJ,EAAM9C,KACDpI,EAAI,EAAGA,EAAIuW,EAAE3b,QACP,IAAT2b,EAAEvW,GADsBA,IAAKkL,EAAMA,EAAIsY,OAI7C,KAAMxjB,EAAIuW,EAAE3b,OACV,IAAK,IAAI+oB,EAAIzY,EAAIsY,MAAOxjB,EAAIuW,EAAE3b,OAAQoF,IAAK2jB,EAAIA,EAAEH,MAClC,IAATjN,EAAEvW,KAENkL,EAAMA,EAAIwE,IAAIiU,IAIlB,OAAOzY,CACT,EAGAyJ,EAAGhZ,UAAUioB,OAAS,SAAiBngB,GACrC4Q,EAAuB,kBAAT5Q,GAAqBA,GAAQ,GAC3C,IAGIzD,EAHA0V,EAAIjS,EAAO,GACX6d,GAAK7d,EAAOiS,GAAK,GACjBmO,EAAa,WAAe,GAAKnO,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAI+B,EAAQ,EAEZ,IAAKzX,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAAK,CAChC,IAAI8jB,EAAW1b,KAAK6M,MAAMjV,GAAK6jB,EAC3BhZ,GAAsB,EAAhBzC,KAAK6M,MAAMjV,IAAU8jB,GAAapO,EAC5CtN,KAAK6M,MAAMjV,GAAK6K,EAAI4M,EACpBA,EAAQqM,IAAc,GAAKpO,CAC7B,CAEI+B,IACFrP,KAAK6M,MAAMjV,GAAKyX,EAChBrP,KAAKxN,SAET,CAEA,GAAU,IAAN0mB,EAAS,CACX,IAAKthB,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,EAAGA,IAChCoI,KAAK6M,MAAMjV,EAAIshB,GAAKlZ,KAAK6M,MAAMjV,GAGjC,IAAKA,EAAI,EAAGA,EAAIshB,EAAGthB,IACjBoI,KAAK6M,MAAMjV,GAAK,EAGlBoI,KAAKxN,QAAU0mB,CACjB,CAEA,OAAOlZ,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUooB,MAAQ,SAAgBtgB,GAGnC,OADA4Q,EAAyB,IAAlBjM,KAAK4M,UACL5M,KAAKwb,OAAOngB,EACrB,EAKAkR,EAAGhZ,UAAUqoB,OAAS,SAAiBvgB,EAAMwgB,EAAMC,GAEjD,IAAIC,EADJ9P,EAAuB,kBAAT5Q,GAAqBA,GAAQ,GAGzC0gB,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIvO,EAAIjS,EAAO,GACX6d,EAAI3kB,KAAKsO,KAAKxH,EAAOiS,GAAK,GAAItN,KAAKxN,QACnCwpB,EAAO,SAAc,WAAc1O,GAAMA,EACzC2O,EAAcH,EAMlB,GAJAC,GAAK7C,EACL6C,EAAIxnB,KAAKgR,IAAI,EAAGwW,GAGZE,EAAa,CACf,IAAK,IAAIrkB,EAAI,EAAGA,EAAIshB,EAAGthB,IACrBqkB,EAAYpP,MAAMjV,GAAKoI,KAAK6M,MAAMjV,GAEpCqkB,EAAYzpB,OAAS0mB,CACvB,CAEA,GAAU,IAANA,QAEG,GAAIlZ,KAAKxN,OAAS0mB,EAEvB,IADAlZ,KAAKxN,QAAU0mB,EACVthB,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAC3BoI,KAAK6M,MAAMjV,GAAKoI,KAAK6M,MAAMjV,EAAIshB,QAGjClZ,KAAK6M,MAAM,GAAK,EAChB7M,KAAKxN,OAAS,EAGhB,IAAI6c,EAAQ,EACZ,IAAKzX,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,IAAgB,IAAVyX,GAAezX,GAAKmkB,GAAInkB,IAAK,CAChE,IAAImD,EAAuB,EAAhBiF,KAAK6M,MAAMjV,GACtBoI,KAAK6M,MAAMjV,GAAMyX,GAAU,GAAK/B,EAAOvS,IAASuS,EAChD+B,EAAQtU,EAAOihB,CACjB,CAYA,OATIC,GAAyB,IAAV5M,IACjB4M,EAAYpP,MAAMoP,EAAYzpB,UAAY6c,GAGxB,IAAhBrP,KAAKxN,SACPwN,KAAK6M,MAAM,GAAK,EAChB7M,KAAKxN,OAAS,GAGTwN,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAU2oB,MAAQ,SAAgB7gB,EAAMwgB,EAAMC,GAG/C,OADA7P,EAAyB,IAAlBjM,KAAK4M,UACL5M,KAAK4b,OAAOvgB,EAAMwgB,EAAMC,EACjC,EAGAvP,EAAGhZ,UAAU4oB,KAAO,SAAe9gB,GACjC,OAAO2E,KAAK6O,QAAQ8M,MAAMtgB,EAC5B,EAEAkR,EAAGhZ,UAAU6oB,MAAQ,SAAgB/gB,GACnC,OAAO2E,KAAK6O,QAAQ2M,OAAOngB,EAC7B,EAGAkR,EAAGhZ,UAAU8oB,KAAO,SAAehhB,GACjC,OAAO2E,KAAK6O,QAAQqN,MAAM7gB,EAC5B,EAEAkR,EAAGhZ,UAAU+oB,MAAQ,SAAgBjhB,GACnC,OAAO2E,KAAK6O,QAAQ+M,OAAOvgB,EAC7B,EAGAkR,EAAGhZ,UAAU8d,MAAQ,SAAgBoB,GACnCxG,EAAsB,kBAARwG,GAAoBA,GAAO,GACzC,IAAInF,EAAImF,EAAM,GACVyG,GAAKzG,EAAMnF,GAAK,GAChBiO,EAAI,GAAKjO,EAGb,QAAItN,KAAKxN,QAAU0mB,OAGXlZ,KAAK6M,MAAMqM,GAELqC,EAChB,EAGAhP,EAAGhZ,UAAUgpB,OAAS,SAAiBlhB,GACrC4Q,EAAuB,kBAAT5Q,GAAqBA,GAAQ,GAC3C,IAAIiS,EAAIjS,EAAO,GACX6d,GAAK7d,EAAOiS,GAAK,GAIrB,GAFArB,EAAyB,IAAlBjM,KAAK4M,SAAgB,2CAExB5M,KAAKxN,QAAU0mB,EACjB,OAAOlZ,KAQT,GALU,IAANsN,GACF4L,IAEFlZ,KAAKxN,OAAS+B,KAAKsO,IAAIqW,EAAGlZ,KAAKxN,QAErB,IAAN8a,EAAS,CACX,IAAI0O,EAAO,SAAc,WAAc1O,GAAMA,EAC7CtN,KAAK6M,MAAM7M,KAAKxN,OAAS,IAAMwpB,CACjC,CAEA,OAAOhc,KAAKqO,QACd,EAGA9B,EAAGhZ,UAAUipB,MAAQ,SAAgBnhB,GACnC,OAAO2E,KAAK6O,QAAQ0N,OAAOlhB,EAC7B,EAGAkR,EAAGhZ,UAAU4d,MAAQ,SAAgB1D,GAGnC,OAFAxB,EAAsB,kBAARwB,GACdxB,EAAOwB,EAAM,UACTA,EAAM,EAAUzN,KAAKyc,OAAOhP,GAGV,IAAlBzN,KAAK4M,SACa,IAAhB5M,KAAKxN,SAAiC,EAAhBwN,KAAK6M,MAAM,KAAWY,GAC9CzN,KAAK6M,MAAM,GAAKY,GAAuB,EAAhBzN,KAAK6M,MAAM,IAClC7M,KAAK4M,SAAW,EACT5M,OAGTA,KAAK4M,SAAW,EAChB5M,KAAKyc,MAAMhP,GACXzN,KAAK4M,SAAW,EACT5M,MAIFA,KAAK2O,OAAOlB,EACrB,EAEAlB,EAAGhZ,UAAUob,OAAS,SAAiBlB,GACrCzN,KAAK6M,MAAM,IAAMY,EAGjB,IAAK,IAAI7V,EAAI,EAAGA,EAAIoI,KAAKxN,QAAUwN,KAAK6M,MAAMjV,IAAM,SAAWA,IAC7DoI,KAAK6M,MAAMjV,IAAM,SACbA,IAAMoI,KAAKxN,OAAS,EACtBwN,KAAK6M,MAAMjV,EAAI,GAAK,EAEpBoI,KAAK6M,MAAMjV,EAAI,KAKnB,OAFAoI,KAAKxN,OAAS+B,KAAKgR,IAAIvF,KAAKxN,OAAQoF,EAAI,GAEjCoI,IACT,EAGAuM,EAAGhZ,UAAUkpB,MAAQ,SAAgBhP,GAGnC,GAFAxB,EAAsB,kBAARwB,GACdxB,EAAOwB,EAAM,UACTA,EAAM,EAAG,OAAOzN,KAAKmR,OAAO1D,GAEhC,GAAsB,IAAlBzN,KAAK4M,SAIP,OAHA5M,KAAK4M,SAAW,EAChB5M,KAAKmR,MAAM1D,GACXzN,KAAK4M,SAAW,EACT5M,KAKT,GAFAA,KAAK6M,MAAM,IAAMY,EAEG,IAAhBzN,KAAKxN,QAAgBwN,KAAK6M,MAAM,GAAK,EACvC7M,KAAK6M,MAAM,IAAM7M,KAAK6M,MAAM,GAC5B7M,KAAK4M,SAAW,OAGhB,IAAK,IAAIhV,EAAI,EAAGA,EAAIoI,KAAKxN,QAAUwN,KAAK6M,MAAMjV,GAAK,EAAGA,IACpDoI,KAAK6M,MAAMjV,IAAM,SACjBoI,KAAK6M,MAAMjV,EAAI,IAAM,EAIzB,OAAOoI,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUmpB,KAAO,SAAejP,GACjC,OAAOzN,KAAK6O,QAAQsC,MAAM1D,EAC5B,EAEAlB,EAAGhZ,UAAUopB,KAAO,SAAelP,GACjC,OAAOzN,KAAK6O,QAAQ4N,MAAMhP,EAC5B,EAEAlB,EAAGhZ,UAAUqpB,KAAO,WAGlB,OAFA5c,KAAK4M,SAAW,EAET5M,IACT,EAEAuM,EAAGhZ,UAAU6X,IAAM,WACjB,OAAOpL,KAAK6O,QAAQ+N,MACtB,EAEArQ,EAAGhZ,UAAUspB,aAAe,SAAuBpP,EAAKnG,EAAKvO,GAC3D,IACInB,EAIAuW,EALApP,EAAM0O,EAAIjb,OAASuG,EAGvBiH,KAAK8O,QAAQ/P,GAGb,IAAIsQ,EAAQ,EACZ,IAAKzX,EAAI,EAAGA,EAAI6V,EAAIjb,OAAQoF,IAAK,CAC/BuW,GAA6B,EAAxBnO,KAAK6M,MAAMjV,EAAImB,IAAcsW,EAClC,IAAI1B,GAAwB,EAAfF,EAAIZ,MAAMjV,IAAU0P,EAEjC+H,IADAlB,GAAa,SAARR,IACS,KAAQA,EAAQ,SAAa,GAC3C3N,KAAK6M,MAAMjV,EAAImB,GAAa,SAAJoV,CAC1B,CACA,KAAOvW,EAAIoI,KAAKxN,OAASuG,EAAOnB,IAE9ByX,GADAlB,GAA6B,EAAxBnO,KAAK6M,MAAMjV,EAAImB,IAAcsW,IACrB,GACbrP,KAAK6M,MAAMjV,EAAImB,GAAa,SAAJoV,EAG1B,GAAc,IAAVkB,EAAa,OAAOrP,KAAKqO,SAK7B,IAFApC,GAAkB,IAAXoD,GACPA,EAAQ,EACHzX,EAAI,EAAGA,EAAIoI,KAAKxN,OAAQoF,IAE3ByX,GADAlB,IAAsB,EAAhBnO,KAAK6M,MAAMjV,IAAUyX,IACd,GACbrP,KAAK6M,MAAMjV,GAAS,SAAJuW,EAIlB,OAFAnO,KAAK4M,SAAW,EAET5M,KAAKqO,QACd,EAEA9B,EAAGhZ,UAAUupB,SAAW,SAAmBrP,EAAKsP,GAC9C,IAAIhkB,GAAQiH,KAAKxN,OAASib,EAAIjb,QAE1BkS,EAAI1E,KAAK6O,QACT7c,EAAIyb,EAGJuP,EAA8B,EAAxBhrB,EAAE6a,MAAM7a,EAAEQ,OAAS,GAGf,KADduG,EAAQ,GADMiH,KAAK2Q,WAAWqM,MAG5BhrB,EAAIA,EAAEoqB,MAAMrjB,GACZ2L,EAAE8W,OAAOziB,GACTikB,EAA8B,EAAxBhrB,EAAE6a,MAAM7a,EAAEQ,OAAS,IAI3B,IACI+oB,EADA9a,EAAIiE,EAAElS,OAASR,EAAEQ,OAGrB,GAAa,QAATuqB,EAAgB,EAClBxB,EAAI,IAAIhP,EAAG,OACT/Z,OAASiO,EAAI,EACf8a,EAAE1O,MAAQ,IAAIzU,MAAMmjB,EAAE/oB,QACtB,IAAK,IAAIoF,EAAI,EAAGA,EAAI2jB,EAAE/oB,OAAQoF,IAC5B2jB,EAAE1O,MAAMjV,GAAK,CAEjB,CAEA,IAAIqlB,EAAOvY,EAAEmK,QAAQgO,aAAa7qB,EAAG,EAAGyO,GAClB,IAAlBwc,EAAKrQ,WACPlI,EAAIuY,EACA1B,IACFA,EAAE1O,MAAMpM,GAAK,IAIjB,IAAK,IAAIe,EAAIf,EAAI,EAAGe,GAAK,EAAGA,IAAK,CAC/B,IAAI0b,EAAmC,UAAL,EAAxBxY,EAAEmI,MAAM7a,EAAEQ,OAASgP,KACE,EAA5BkD,EAAEmI,MAAM7a,EAAEQ,OAASgP,EAAI,IAO1B,IAHA0b,EAAK3oB,KAAKsO,IAAKqa,EAAKF,EAAO,EAAG,UAE9BtY,EAAEmY,aAAa7qB,EAAGkrB,EAAI1b,GACA,IAAfkD,EAAEkI,UACPsQ,IACAxY,EAAEkI,SAAW,EACblI,EAAEmY,aAAa7qB,EAAG,EAAGwP,GAChBkD,EAAE8K,WACL9K,EAAEkI,UAAY,GAGd2O,IACFA,EAAE1O,MAAMrL,GAAK0b,EAEjB,CAWA,OAVI3B,GACFA,EAAElN,SAEJ3J,EAAE2J,SAGW,QAAT0O,GAA4B,IAAVhkB,GACpB2L,EAAEkX,OAAO7iB,GAGJ,CACLokB,IAAK5B,GAAK,KACV9M,IAAK/J,EAET,EAMA6H,EAAGhZ,UAAU6pB,OAAS,SAAiB3P,EAAKsP,EAAMM,GAGhD,OAFApR,GAAQwB,EAAI+B,UAERxP,KAAKwP,SACA,CACL2N,IAAK,IAAI5Q,EAAG,GACZkC,IAAK,IAAIlC,EAAG,IAKM,IAAlBvM,KAAK4M,UAAmC,IAAjBa,EAAIb,UAC7B9J,EAAM9C,KAAKyR,MAAM2L,OAAO3P,EAAKsP,GAEhB,QAATA,IACFI,EAAMra,EAAIqa,IAAI1L,OAGH,QAATsL,IACFtO,EAAM3L,EAAI2L,IAAIgD,MACV4L,GAA6B,IAAjB5O,EAAI7B,UAClB6B,EAAIkE,KAAKlF,IAIN,CACL0P,IAAKA,EACL1O,IAAKA,IAIa,IAAlBzO,KAAK4M,UAAmC,IAAjBa,EAAIb,UAC7B9J,EAAM9C,KAAKod,OAAO3P,EAAIgE,MAAOsL,GAEhB,QAATA,IACFI,EAAMra,EAAIqa,IAAI1L,OAGT,CACL0L,IAAKA,EACL1O,IAAK3L,EAAI2L,MAI0B,KAAlCzO,KAAK4M,SAAWa,EAAIb,WACvB9J,EAAM9C,KAAKyR,MAAM2L,OAAO3P,EAAIgE,MAAOsL,GAEtB,QAATA,IACFtO,EAAM3L,EAAI2L,IAAIgD,MACV4L,GAA6B,IAAjB5O,EAAI7B,UAClB6B,EAAImE,KAAKnF,IAIN,CACL0P,IAAKra,EAAIqa,IACT1O,IAAKA,IAOLhB,EAAIjb,OAASwN,KAAKxN,QAAUwN,KAAK4N,IAAIH,GAAO,EACvC,CACL0P,IAAK,IAAI5Q,EAAG,GACZkC,IAAKzO,MAKU,IAAfyN,EAAIjb,OACO,QAATuqB,EACK,CACLI,IAAKnd,KAAKsd,KAAK7P,EAAIZ,MAAM,IACzB4B,IAAK,MAII,QAATsO,EACK,CACLI,IAAK,KACL1O,IAAK,IAAIlC,EAAGvM,KAAKyP,MAAMhC,EAAIZ,MAAM,MAI9B,CACLsQ,IAAKnd,KAAKsd,KAAK7P,EAAIZ,MAAM,IACzB4B,IAAK,IAAIlC,EAAGvM,KAAKyP,MAAMhC,EAAIZ,MAAM,MAI9B7M,KAAK8c,SAASrP,EAAKsP,GAlF1B,IAAII,EAAK1O,EAAK3L,CAmFhB,EAGAyJ,EAAGhZ,UAAU4pB,IAAM,SAAc1P,GAC/B,OAAOzN,KAAKod,OAAO3P,EAAK,OAAO,GAAO0P,GACxC,EAGA5Q,EAAGhZ,UAAUkb,IAAM,SAAchB,GAC/B,OAAOzN,KAAKod,OAAO3P,EAAK,OAAO,GAAOgB,GACxC,EAEAlC,EAAGhZ,UAAUgqB,KAAO,SAAe9P,GACjC,OAAOzN,KAAKod,OAAO3P,EAAK,OAAO,GAAMgB,GACvC,EAGAlC,EAAGhZ,UAAUiqB,SAAW,SAAmB/P,GACzC,IAAIgQ,EAAKzd,KAAKod,OAAO3P,GAGrB,GAAIgQ,EAAGhP,IAAIe,SAAU,OAAOiO,EAAGN,IAE/B,IAAI1O,EAA0B,IAApBgP,EAAGN,IAAIvQ,SAAiB6Q,EAAGhP,IAAImE,KAAKnF,GAAOgQ,EAAGhP,IAEpDiP,EAAOjQ,EAAI6O,MAAM,GACjBqB,EAAKlQ,EAAImQ,MAAM,GACfhQ,EAAMa,EAAIb,IAAI8P,GAGlB,OAAI9P,EAAM,GAAa,IAAP+P,GAAoB,IAAR/P,EAAmB6P,EAAGN,IAGvB,IAApBM,EAAGN,IAAIvQ,SAAiB6Q,EAAGN,IAAIV,MAAM,GAAKgB,EAAGN,IAAIhM,MAAM,EAChE,EAEA5E,EAAGhZ,UAAUkc,MAAQ,SAAgBhC,GACnC,IAAIyN,EAAWzN,EAAM,EACjByN,IAAUzN,GAAOA,GAErBxB,EAAOwB,GAAO,UAId,IAHA,IAAI+L,GAAK,GAAK,IAAM/L,EAEhBnV,EAAM,EACDV,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,EAAGA,IACpCU,GAAOkhB,EAAIlhB,GAAuB,EAAhB0H,KAAK6M,MAAMjV,KAAW6V,EAG1C,OAAOyN,GAAY5iB,EAAMA,CAC3B,EAGAiU,EAAGhZ,UAAUsqB,KAAO,SAAepQ,GACjC,OAAOzN,KAAKyP,MAAMhC,EACpB,EAGAlB,EAAGhZ,UAAUmc,MAAQ,SAAgBjC,GACnC,IAAIyN,EAAWzN,EAAM,EACjByN,IAAUzN,GAAOA,GAErBxB,EAAOwB,GAAO,UAGd,IADA,IAAI4B,EAAQ,EACHzX,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,EAAGA,IAAK,CACzC,IAAIuW,GAAqB,EAAhBnO,KAAK6M,MAAMjV,IAAkB,SAARyX,EAC9BrP,KAAK6M,MAAMjV,GAAMuW,EAAIV,EAAO,EAC5B4B,EAAQlB,EAAIV,CACd,CAGA,OADAzN,KAAKqO,SACE6M,EAAWlb,KAAKuR,OAASvR,IAClC,EAEAuM,EAAGhZ,UAAU+pB,KAAO,SAAe7P,GACjC,OAAOzN,KAAK6O,QAAQa,MAAMjC,EAC5B,EAEAlB,EAAGhZ,UAAUuqB,KAAO,SAAetE,GACjCvN,EAAsB,IAAfuN,EAAE5M,UACTX,GAAQuN,EAAEhK,UAEV,IAAI7K,EAAI3E,KACJ4E,EAAI4U,EAAE3K,QAGRlK,EADiB,IAAfA,EAAEiI,SACAjI,EAAE4Y,KAAK/D,GAEP7U,EAAEkK,QAaR,IATA,IAAIkP,EAAI,IAAIxR,EAAG,GACXyR,EAAI,IAAIzR,EAAG,GAGX0R,EAAI,IAAI1R,EAAG,GACX2R,EAAI,IAAI3R,EAAG,GAEX4R,EAAI,EAEDxZ,EAAEyZ,UAAYxZ,EAAEwZ,UACrBzZ,EAAEiX,OAAO,GACThX,EAAEgX,OAAO,KACPuC,EAMJ,IAHA,IAAIE,EAAKzZ,EAAEiK,QACPyP,EAAK3Z,EAAEkK,SAEHlK,EAAE6K,UAAU,CAClB,IAAK,IAAI5X,EAAI,EAAG2mB,EAAK,EAAyB,KAArB5Z,EAAEkI,MAAM,GAAK0R,IAAa3mB,EAAI,KAAMA,EAAG2mB,IAAO,GACvE,GAAI3mB,EAAI,EAEN,IADA+M,EAAEiX,OAAOhkB,GACFA,KAAM,IACPmmB,EAAES,SAAWR,EAAEQ,WACjBT,EAAEpL,KAAK0L,GACPL,EAAEpL,KAAK0L,IAGTP,EAAEnC,OAAO,GACToC,EAAEpC,OAAO,GAIb,IAAK,IAAIpa,EAAI,EAAGid,EAAK,EAAyB,KAArB7Z,EAAEiI,MAAM,GAAK4R,IAAajd,EAAI,KAAMA,EAAGid,IAAO,GACvE,GAAIjd,EAAI,EAEN,IADAoD,EAAEgX,OAAOpa,GACFA,KAAM,IACPyc,EAAEO,SAAWN,EAAEM,WACjBP,EAAEtL,KAAK0L,GACPH,EAAEtL,KAAK0L,IAGTL,EAAErC,OAAO,GACTsC,EAAEtC,OAAO,GAITjX,EAAEiJ,IAAIhJ,IAAM,GACdD,EAAEiO,KAAKhO,GACPmZ,EAAEnL,KAAKqL,GACPD,EAAEpL,KAAKsL,KAEPtZ,EAAEgO,KAAKjO,GACPsZ,EAAErL,KAAKmL,GACPG,EAAEtL,KAAKoL,GAEX,CAEA,MAAO,CACLtZ,EAAGuZ,EACHjsB,EAAGksB,EACHQ,IAAK9Z,EAAE4W,OAAO2C,GAElB,EAKA5R,EAAGhZ,UAAUorB,OAAS,SAAiBnF,GACrCvN,EAAsB,IAAfuN,EAAE5M,UACTX,GAAQuN,EAAEhK,UAEV,IAAI9K,EAAI1E,KACJhO,EAAIwnB,EAAE3K,QAGRnK,EADiB,IAAfA,EAAEkI,SACAlI,EAAE6Y,KAAK/D,GAEP9U,EAAEmK,QAQR,IALA,IAuCI/L,EAvCA8b,EAAK,IAAIrS,EAAG,GACZsS,EAAK,IAAItS,EAAG,GAEZuS,EAAQ9sB,EAAE6c,QAEPnK,EAAEqa,KAAK,GAAK,GAAK/sB,EAAE+sB,KAAK,GAAK,GAAG,CACrC,IAAK,IAAInnB,EAAI,EAAG2mB,EAAK,EAAyB,KAArB7Z,EAAEmI,MAAM,GAAK0R,IAAa3mB,EAAI,KAAMA,EAAG2mB,IAAO,GACvE,GAAI3mB,EAAI,EAEN,IADA8M,EAAEkX,OAAOhkB,GACFA,KAAM,GACPgnB,EAAGJ,SACLI,EAAGjM,KAAKmM,GAGVF,EAAGhD,OAAO,GAId,IAAK,IAAIpa,EAAI,EAAGid,EAAK,EAAyB,KAArBzsB,EAAE6a,MAAM,GAAK4R,IAAajd,EAAI,KAAMA,EAAGid,IAAO,GACvE,GAAIjd,EAAI,EAEN,IADAxP,EAAE4pB,OAAOpa,GACFA,KAAM,GACPqd,EAAGL,SACLK,EAAGlM,KAAKmM,GAGVD,EAAGjD,OAAO,GAIVlX,EAAEkJ,IAAI5b,IAAM,GACd0S,EAAEkO,KAAK5gB,GACP4sB,EAAGhM,KAAKiM,KAER7sB,EAAE4gB,KAAKlO,GACPma,EAAGjM,KAAKgM,GAEZ,CAaA,OATE9b,EADgB,IAAd4B,EAAEqa,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBjc,EAAI6P,KAAK6G,GAGJ1W,CACT,EAEAyJ,EAAGhZ,UAAUmrB,IAAM,SAAcjR,GAC/B,GAAIzN,KAAKwP,SAAU,OAAO/B,EAAIrC,MAC9B,GAAIqC,EAAI+B,SAAU,OAAOxP,KAAKoL,MAE9B,IAAI1G,EAAI1E,KAAK6O,QACT7c,EAAIyb,EAAIoB,QACZnK,EAAEkI,SAAW,EACb5a,EAAE4a,SAAW,EAGb,IAAK,IAAI7T,EAAQ,EAAG2L,EAAE0Z,UAAYpsB,EAAEosB,SAAUrlB,IAC5C2L,EAAEkX,OAAO,GACT5pB,EAAE4pB,OAAO,GAGX,OAAG,CACD,KAAOlX,EAAE0Z,UACP1Z,EAAEkX,OAAO,GAEX,KAAO5pB,EAAEosB,UACPpsB,EAAE4pB,OAAO,GAGX,IAAItO,EAAI5I,EAAEkJ,IAAI5b,GACd,GAAIsb,EAAI,EAAG,CAET,IAAIsD,EAAIlM,EACRA,EAAI1S,EACJA,EAAI4e,CACN,MAAO,GAAU,IAANtD,GAAyB,IAAdtb,EAAE+sB,KAAK,GAC3B,MAGFra,EAAEkO,KAAK5gB,EACT,CAEA,OAAOA,EAAEwpB,OAAOziB,EAClB,EAGAwT,EAAGhZ,UAAUyrB,KAAO,SAAevR,GACjC,OAAOzN,KAAK8d,KAAKrQ,GAAK/I,EAAE6Y,KAAK9P,EAC/B,EAEAlB,EAAGhZ,UAAU6qB,OAAS,WACpB,OAA+B,KAAP,EAAhBpe,KAAK6M,MAAM,GACrB,EAEAN,EAAGhZ,UAAUirB,MAAQ,WACnB,OAA+B,KAAP,EAAhBxe,KAAK6M,MAAM,GACrB,EAGAN,EAAGhZ,UAAUqqB,MAAQ,SAAgBnQ,GACnC,OAAOzN,KAAK6M,MAAM,GAAKY,CACzB,EAGAlB,EAAGhZ,UAAU0rB,MAAQ,SAAgBxM,GACnCxG,EAAsB,kBAARwG,GACd,IAAInF,EAAImF,EAAM,GACVyG,GAAKzG,EAAMnF,GAAK,GAChBiO,EAAI,GAAKjO,EAGb,GAAItN,KAAKxN,QAAU0mB,EAGjB,OAFAlZ,KAAK8O,QAAQoK,EAAI,GACjBlZ,KAAK6M,MAAMqM,IAAMqC,EACVvb,KAKT,IADA,IAAIqP,EAAQkM,EACH3jB,EAAIshB,EAAa,IAAV7J,GAAezX,EAAIoI,KAAKxN,OAAQoF,IAAK,CACnD,IAAIuW,EAAoB,EAAhBnO,KAAK6M,MAAMjV,GAEnByX,GADAlB,GAAKkB,KACS,GACdlB,GAAK,SACLnO,KAAK6M,MAAMjV,GAAKuW,CAClB,CAKA,OAJc,IAAVkB,IACFrP,KAAK6M,MAAMjV,GAAKyX,EAChBrP,KAAKxN,UAEAwN,IACT,EAEAuM,EAAGhZ,UAAUic,OAAS,WACpB,OAAuB,IAAhBxP,KAAKxN,QAAkC,IAAlBwN,KAAK6M,MAAM,EACzC,EAEAN,EAAGhZ,UAAUwrB,KAAO,SAAetR,GACjC,IAOI3K,EAPA8J,EAAWa,EAAM,EAErB,GAAsB,IAAlBzN,KAAK4M,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlB5M,KAAK4M,UAAkBA,EAAU,OAAO,EAK5C,GAHA5M,KAAKqO,SAGDrO,KAAKxN,OAAS,EAChBsQ,EAAM,MACD,CACD8J,IACFa,GAAOA,GAGTxB,EAAOwB,GAAO,SAAW,qBAEzB,IAAIU,EAAoB,EAAhBnO,KAAK6M,MAAM,GACnB/J,EAAMqL,IAAMV,EAAM,EAAIU,EAAIV,GAAO,EAAI,CACvC,CACA,OAAsB,IAAlBzN,KAAK4M,SAA8B,GAAN9J,EAC1BA,CACT,EAMAyJ,EAAGhZ,UAAUqa,IAAM,SAAcH,GAC/B,GAAsB,IAAlBzN,KAAK4M,UAAmC,IAAjBa,EAAIb,SAAgB,OAAQ,EACvD,GAAsB,IAAlB5M,KAAK4M,UAAmC,IAAjBa,EAAIb,SAAgB,OAAO,EAEtD,IAAI9J,EAAM9C,KAAKkf,KAAKzR,GACpB,OAAsB,IAAlBzN,KAAK4M,SAA8B,GAAN9J,EAC1BA,CACT,EAGAyJ,EAAGhZ,UAAU2rB,KAAO,SAAezR,GAEjC,GAAIzN,KAAKxN,OAASib,EAAIjb,OAAQ,OAAO,EACrC,GAAIwN,KAAKxN,OAASib,EAAIjb,OAAQ,OAAQ,EAGtC,IADA,IAAIsQ,EAAM,EACDlL,EAAIoI,KAAKxN,OAAS,EAAGoF,GAAK,EAAGA,IAAK,CACzC,IAAI8M,EAAoB,EAAhB1E,KAAK6M,MAAMjV,GACf5F,EAAmB,EAAfyb,EAAIZ,MAAMjV,GAElB,GAAI8M,IAAM1S,EAAV,CACI0S,EAAI1S,EACN8Q,GAAO,EACE4B,EAAI1S,IACb8Q,EAAM,GAER,KANqB,CAOvB,CACA,OAAOA,CACT,EAEAyJ,EAAGhZ,UAAU4rB,IAAM,SAAc1R,GAC/B,OAA0B,IAAnBzN,KAAK+e,KAAKtR,EACnB,EAEAlB,EAAGhZ,UAAU6rB,GAAK,SAAa3R,GAC7B,OAAyB,IAAlBzN,KAAK4N,IAAIH,EAClB,EAEAlB,EAAGhZ,UAAU8rB,KAAO,SAAe5R,GACjC,OAAOzN,KAAK+e,KAAKtR,IAAQ,CAC3B,EAEAlB,EAAGhZ,UAAU+rB,IAAM,SAAc7R,GAC/B,OAAOzN,KAAK4N,IAAIH,IAAQ,CAC1B,EAEAlB,EAAGhZ,UAAUgsB,IAAM,SAAc9R,GAC/B,OAA2B,IAApBzN,KAAK+e,KAAKtR,EACnB,EAEAlB,EAAGhZ,UAAUisB,GAAK,SAAa/R,GAC7B,OAA0B,IAAnBzN,KAAK4N,IAAIH,EAClB,EAEAlB,EAAGhZ,UAAUksB,KAAO,SAAehS,GACjC,OAAOzN,KAAK+e,KAAKtR,IAAQ,CAC3B,EAEAlB,EAAGhZ,UAAUmsB,IAAM,SAAcjS,GAC/B,OAAOzN,KAAK4N,IAAIH,IAAQ,CAC1B,EAEAlB,EAAGhZ,UAAUosB,IAAM,SAAclS,GAC/B,OAA0B,IAAnBzN,KAAK+e,KAAKtR,EACnB,EAEAlB,EAAGhZ,UAAUqsB,GAAK,SAAanS,GAC7B,OAAyB,IAAlBzN,KAAK4N,IAAIH,EAClB,EAMAlB,EAAGO,IAAM,SAAcW,GACrB,OAAO,IAAIoS,EAAIpS,EACjB,EAEAlB,EAAGhZ,UAAUusB,MAAQ,SAAgBC,GAGnC,OAFA9T,GAAQjM,KAAK8M,IAAK,yCAClBb,EAAyB,IAAlBjM,KAAK4M,SAAgB,iCACrBmT,EAAIC,UAAUhgB,MAAMigB,UAAUF,EACvC,EAEAxT,EAAGhZ,UAAU2sB,QAAU,WAErB,OADAjU,EAAOjM,KAAK8M,IAAK,wDACV9M,KAAK8M,IAAIqT,YAAYngB,KAC9B,EAEAuM,EAAGhZ,UAAU0sB,UAAY,SAAoBF,GAE3C,OADA/f,KAAK8M,IAAMiT,EACJ/f,IACT,EAEAuM,EAAGhZ,UAAU6sB,SAAW,SAAmBL,GAEzC,OADA9T,GAAQjM,KAAK8M,IAAK,yCACX9M,KAAKigB,UAAUF,EACxB,EAEAxT,EAAGhZ,UAAU8sB,OAAS,SAAiB5S,GAErC,OADAxB,EAAOjM,KAAK8M,IAAK,sCACV9M,KAAK8M,IAAI+F,IAAI7S,KAAMyN,EAC5B,EAEAlB,EAAGhZ,UAAU+sB,QAAU,SAAkB7S,GAEvC,OADAxB,EAAOjM,KAAK8M,IAAK,uCACV9M,KAAK8M,IAAI6F,KAAK3S,KAAMyN,EAC7B,EAEAlB,EAAGhZ,UAAUgtB,OAAS,SAAiB9S,GAErC,OADAxB,EAAOjM,KAAK8M,IAAK,sCACV9M,KAAK8M,IAAItD,IAAIxJ,KAAMyN,EAC5B,EAEAlB,EAAGhZ,UAAUitB,QAAU,SAAkB/S,GAEvC,OADAxB,EAAOjM,KAAK8M,IAAK,uCACV9M,KAAK8M,IAAI8F,KAAK5S,KAAMyN,EAC7B,EAEAlB,EAAGhZ,UAAUktB,OAAS,SAAiBhT,GAErC,OADAxB,EAAOjM,KAAK8M,IAAK,sCACV9M,KAAK8M,IAAI4T,IAAI1gB,KAAMyN,EAC5B,EAEAlB,EAAGhZ,UAAUotB,OAAS,SAAiBlT,GAGrC,OAFAxB,EAAOjM,KAAK8M,IAAK,sCACjB9M,KAAK8M,IAAI8T,SAAS5gB,KAAMyN,GACjBzN,KAAK8M,IAAIxF,IAAItH,KAAMyN,EAC5B,EAEAlB,EAAGhZ,UAAUstB,QAAU,SAAkBpT,GAGvC,OAFAxB,EAAOjM,KAAK8M,IAAK,sCACjB9M,KAAK8M,IAAI8T,SAAS5gB,KAAMyN,GACjBzN,KAAK8M,IAAIgK,KAAK9W,KAAMyN,EAC7B,EAEAlB,EAAGhZ,UAAUutB,OAAS,WAGpB,OAFA7U,EAAOjM,KAAK8M,IAAK,sCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIsO,IAAIpb,KACtB,EAEAuM,EAAGhZ,UAAUytB,QAAU,WAGrB,OAFA/U,EAAOjM,KAAK8M,IAAK,uCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIuO,KAAKrb,KACvB,EAGAuM,EAAGhZ,UAAU0tB,QAAU,WAGrB,OAFAhV,EAAOjM,KAAK8M,IAAK,uCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIoU,KAAKlhB,KACvB,EAEAuM,EAAGhZ,UAAU4tB,QAAU,WAGrB,OAFAlV,EAAOjM,KAAK8M,IAAK,uCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIkS,KAAKhf,KACvB,EAGAuM,EAAGhZ,UAAU6tB,OAAS,WAGpB,OAFAnV,EAAOjM,KAAK8M,IAAK,sCACjB9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAI2E,IAAIzR,KACtB,EAEAuM,EAAGhZ,UAAU8tB,OAAS,SAAiB5T,GAGrC,OAFAxB,EAAOjM,KAAK8M,MAAQW,EAAIX,IAAK,qBAC7B9M,KAAK8M,IAAIiU,SAAS/gB,MACXA,KAAK8M,IAAIpX,IAAIsK,KAAMyN,EAC5B,EAGA,IAAI6T,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ/tB,EAAM4lB,GAErBxZ,KAAKpM,KAAOA,EACZoM,KAAKwZ,EAAI,IAAIjN,EAAGiN,EAAG,IACnBxZ,KAAKQ,EAAIR,KAAKwZ,EAAE1I,YAChB9Q,KAAKgQ,EAAI,IAAIzD,EAAG,GAAGiP,OAAOxb,KAAKQ,GAAGoS,KAAK5S,KAAKwZ,GAE5CxZ,KAAK4hB,IAAM5hB,KAAK6hB,MAClB,CAgDA,SAASC,IACPH,EAAOxnB,KACL6F,KACA,OACA,0EACJ,CA8DA,SAAS+hB,IACPJ,EAAOxnB,KACL6F,KACA,OACA,iEACJ,CAGA,SAASgiB,IACPL,EAAOxnB,KACL6F,KACA,OACA,wDACJ,CAGA,SAASiiB,IAEPN,EAAOxnB,KACL6F,KACA,QACA,sEACJ,CA6CA,SAAS6f,EAAKpf,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAIyhB,EAAQ3V,EAAG4V,OAAO1hB,GACtBT,KAAKS,EAAIyhB,EAAM1I,EACfxZ,KAAKkiB,MAAQA,CACf,MACEjW,EAAOxL,EAAE0e,IAAI,GAAI,kCACjBnf,KAAKS,EAAIA,EACTT,KAAKkiB,MAAQ,IAEjB,CAkOA,SAASE,EAAM3hB,GACbof,EAAI1lB,KAAK6F,KAAMS,GAEfT,KAAKjH,MAAQiH,KAAKS,EAAEqQ,YAChB9Q,KAAKjH,MAAQ,KAAO,IACtBiH,KAAKjH,OAAS,GAAMiH,KAAKjH,MAAQ,IAGnCiH,KAAKsN,EAAI,IAAIf,EAAG,GAAGiP,OAAOxb,KAAKjH,OAC/BiH,KAAK2d,GAAK3d,KAAKqiB,KAAKriB,KAAKsN,EAAE8N,OAC3Bpb,KAAKsiB,KAAOtiB,KAAKsN,EAAEqR,OAAO3e,KAAKS,GAE/BT,KAAKuiB,KAAOviB,KAAKsiB,KAAKhb,IAAItH,KAAKsN,GAAGmP,MAAM,GAAGU,IAAInd,KAAKS,GACpDT,KAAKuiB,KAAOviB,KAAKuiB,KAAKhF,KAAKvd,KAAKsN,GAChCtN,KAAKuiB,KAAOviB,KAAKsN,EAAE9D,IAAIxJ,KAAKuiB,KAC9B,CA/aAZ,EAAOpuB,UAAUsuB,KAAO,WACtB,IAAID,EAAM,IAAIrV,EAAG,MAEjB,OADAqV,EAAI/U,MAAQ,IAAIzU,MAAM7D,KAAK2Z,KAAKlO,KAAKQ,EAAI,KAClCohB,CACT,EAEAD,EAAOpuB,UAAUivB,QAAU,SAAkB/U,GAG3C,IACIgV,EADAnV,EAAIG,EAGR,GACEzN,KAAK/J,MAAMqX,EAAGtN,KAAK4hB,KAGnBa,GADAnV,GADAA,EAAItN,KAAK0iB,MAAMpV,IACTqF,KAAK3S,KAAK4hB,MACP9Q,kBACF2R,EAAOziB,KAAKQ,GAErB,IAAIoN,EAAM6U,EAAOziB,KAAKQ,GAAK,EAAI8M,EAAE4R,KAAKlf,KAAKwZ,GAgB3C,OAfY,IAAR5L,GACFN,EAAET,MAAM,GAAK,EACbS,EAAE9a,OAAS,GACFob,EAAM,EACfN,EAAEsF,KAAK5S,KAAKwZ,QAEIplB,IAAZkZ,EAAEqV,MAEJrV,EAAEqV,QAGFrV,EAAEe,SAICf,CACT,EAEAqU,EAAOpuB,UAAU0C,MAAQ,SAAgBgV,EAAO7E,GAC9C6E,EAAM2Q,OAAO5b,KAAKQ,EAAG,EAAG4F,EAC1B,EAEAub,EAAOpuB,UAAUmvB,MAAQ,SAAgBjV,GACvC,OAAOA,EAAIqJ,KAAK9W,KAAKgQ,EACvB,EAQA9D,EAAS4V,EAAMH,GAEfG,EAAKvuB,UAAU0C,MAAQ,SAAgBgV,EAAO2X,GAK5C,IAHA,IAAI5G,EAAO,QAEP6G,EAAStuB,KAAKsO,IAAIoI,EAAMzY,OAAQ,GAC3BoF,EAAI,EAAGA,EAAIirB,EAAQjrB,IAC1BgrB,EAAO/V,MAAMjV,GAAKqT,EAAM4B,MAAMjV,GAIhC,GAFAgrB,EAAOpwB,OAASqwB,EAEZ5X,EAAMzY,QAAU,EAGlB,OAFAyY,EAAM4B,MAAM,GAAK,OACjB5B,EAAMzY,OAAS,GAKjB,IAAIswB,EAAO7X,EAAM4B,MAAM,GAGvB,IAFA+V,EAAO/V,MAAM+V,EAAOpwB,UAAYswB,EAAO9G,EAElCpkB,EAAI,GAAIA,EAAIqT,EAAMzY,OAAQoF,IAAK,CAClC,IAAImrB,EAAwB,EAAjB9X,EAAM4B,MAAMjV,GACvBqT,EAAM4B,MAAMjV,EAAI,KAAQmrB,EAAO/G,IAAS,EAAM8G,IAAS,GACvDA,EAAOC,CACT,CACAD,KAAU,GACV7X,EAAM4B,MAAMjV,EAAI,IAAMkrB,EACT,IAATA,GAAc7X,EAAMzY,OAAS,GAC/ByY,EAAMzY,QAAU,GAEhByY,EAAMzY,QAAU,CAEpB,EAEAsvB,EAAKvuB,UAAUmvB,MAAQ,SAAgBjV,GAErCA,EAAIZ,MAAMY,EAAIjb,QAAU,EACxBib,EAAIZ,MAAMY,EAAIjb,OAAS,GAAK,EAC5Bib,EAAIjb,QAAU,EAId,IADA,IAAIqB,EAAK,EACA+D,EAAI,EAAGA,EAAI6V,EAAIjb,OAAQoF,IAAK,CACnC,IAAIuW,EAAmB,EAAfV,EAAIZ,MAAMjV,GAClB/D,GAAU,IAAJsa,EACNV,EAAIZ,MAAMjV,GAAU,SAAL/D,EACfA,EAAS,GAAJsa,GAAata,EAAK,SAAa,EACtC,CASA,OANkC,IAA9B4Z,EAAIZ,MAAMY,EAAIjb,OAAS,KACzBib,EAAIjb,SAC8B,IAA9Bib,EAAIZ,MAAMY,EAAIjb,OAAS,IACzBib,EAAIjb,UAGDib,CACT,EAQAvB,EAAS6V,EAAMJ,GAQfzV,EAAS8V,EAAML,GASfzV,EAAS+V,EAAQN,GAEjBM,EAAO1uB,UAAUmvB,MAAQ,SAAgBjV,GAGvC,IADA,IAAI4B,EAAQ,EACHzX,EAAI,EAAGA,EAAI6V,EAAIjb,OAAQoF,IAAK,CACnC,IAAI8K,EAA0B,IAAL,EAAf+K,EAAIZ,MAAMjV,IAAiByX,EACjCxb,EAAU,SAAL6O,EACTA,KAAQ,GAER+K,EAAIZ,MAAMjV,GAAK/D,EACfwb,EAAQ3M,CACV,CAIA,OAHc,IAAV2M,IACF5B,EAAIZ,MAAMY,EAAIjb,UAAY6c,GAErB5B,CACT,EAGAlB,EAAG4V,OAAS,SAAgBvuB,GAE1B,GAAI0tB,EAAO1tB,GAAO,OAAO0tB,EAAO1tB,GAEhC,IAAIsuB,EACJ,GAAa,SAATtuB,EACFsuB,EAAQ,IAAIJ,OACP,GAAa,SAATluB,EACTsuB,EAAQ,IAAIH,OACP,GAAa,SAATnuB,EACTsuB,EAAQ,IAAIF,MACP,IAAa,WAATpuB,EAGT,MAAM,IAAII,MAAM,iBAAmBJ,GAFnCsuB,EAAQ,IAAID,CAGd,CAGA,OAFAX,EAAO1tB,GAAQsuB,EAERA,CACT,EAiBArC,EAAItsB,UAAUwtB,SAAW,SAAmBrc,GAC1CuH,EAAsB,IAAfvH,EAAEkI,SAAgB,iCACzBX,EAAOvH,EAAEoI,IAAK,kCAChB,EAEA+S,EAAItsB,UAAUqtB,SAAW,SAAmBlc,EAAG1S,GAC7Cia,EAAqC,KAA7BvH,EAAEkI,SAAW5a,EAAE4a,UAAiB,iCACxCX,EAAOvH,EAAEoI,KAAOpI,EAAEoI,MAAQ9a,EAAE8a,IAC1B,kCACJ,EAEA+S,EAAItsB,UAAU8uB,KAAO,SAAe3d,GAClC,OAAI1E,KAAKkiB,MAAcliB,KAAKkiB,MAAMM,QAAQ9d,GAAGub,UAAUjgB,OAEvDwN,EAAK9I,EAAGA,EAAE6Y,KAAKvd,KAAKS,GAAGwf,UAAUjgB,OAC1B0E,EACT,EAEAmb,EAAItsB,UAAUke,IAAM,SAAc/M,GAChC,OAAIA,EAAE8K,SACG9K,EAAEmK,QAGJ7O,KAAKS,EAAE+I,IAAI9E,GAAGub,UAAUjgB,KACjC,EAEA6f,EAAItsB,UAAUsf,IAAM,SAAcnO,EAAG1S,GACnCgO,KAAK4gB,SAASlc,EAAG1S,GAEjB,IAAI8Q,EAAM4B,EAAEmO,IAAI7gB,GAIhB,OAHI8Q,EAAI8K,IAAI5N,KAAKS,IAAM,GACrBqC,EAAI8P,KAAK5S,KAAKS,GAETqC,EAAImd,UAAUjgB,KACvB,EAEA6f,EAAItsB,UAAUof,KAAO,SAAejO,EAAG1S,GACrCgO,KAAK4gB,SAASlc,EAAG1S,GAEjB,IAAI8Q,EAAM4B,EAAEiO,KAAK3gB,GAIjB,OAHI8Q,EAAI8K,IAAI5N,KAAKS,IAAM,GACrBqC,EAAI8P,KAAK5S,KAAKS,GAETqC,CACT,EAEA+c,EAAItsB,UAAUiW,IAAM,SAAc9E,EAAG1S,GACnCgO,KAAK4gB,SAASlc,EAAG1S,GAEjB,IAAI8Q,EAAM4B,EAAE8E,IAAIxX,GAIhB,OAHI8Q,EAAIic,KAAK,GAAK,GAChBjc,EAAI6P,KAAK3S,KAAKS,GAETqC,EAAImd,UAAUjgB,KACvB,EAEA6f,EAAItsB,UAAUqf,KAAO,SAAelO,EAAG1S,GACrCgO,KAAK4gB,SAASlc,EAAG1S,GAEjB,IAAI8Q,EAAM4B,EAAEkO,KAAK5gB,GAIjB,OAHI8Q,EAAIic,KAAK,GAAK,GAChBjc,EAAI6P,KAAK3S,KAAKS,GAETqC,CACT,EAEA+c,EAAItsB,UAAUmtB,IAAM,SAAchc,EAAG+I,GAEnC,OADAzN,KAAK+gB,SAASrc,GACP1E,KAAKqiB,KAAK3d,EAAE0X,MAAM3O,GAC3B,EAEAoS,EAAItsB,UAAUujB,KAAO,SAAepS,EAAG1S,GAErC,OADAgO,KAAK4gB,SAASlc,EAAG1S,GACVgO,KAAKqiB,KAAK3d,EAAEoS,KAAK9kB,GAC1B,EAEA6tB,EAAItsB,UAAU+T,IAAM,SAAc5C,EAAG1S,GAEnC,OADAgO,KAAK4gB,SAASlc,EAAG1S,GACVgO,KAAKqiB,KAAK3d,EAAE4C,IAAItV,GACzB,EAEA6tB,EAAItsB,UAAU8nB,KAAO,SAAe3W,GAClC,OAAO1E,KAAK8W,KAAKpS,EAAGA,EAAEmK,QACxB,EAEAgR,EAAItsB,UAAU6nB,IAAM,SAAc1W,GAChC,OAAO1E,KAAKsH,IAAI5C,EAAGA,EACrB,EAEAmb,EAAItsB,UAAU2tB,KAAO,SAAexc,GAClC,GAAIA,EAAE8K,SAAU,OAAO9K,EAAEmK,QAEzB,IAAImU,EAAOhjB,KAAKS,EAAEmd,MAAM,GAIxB,GAHA3R,EAAO+W,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIttB,EAAMsK,KAAKS,EAAEoS,IAAI,IAAItG,EAAG,IAAIqP,OAAO,GACvC,OAAO5b,KAAKtK,IAAIgP,EAAGhP,EACrB,CAOA,IAFA,IAAI6lB,EAAIvb,KAAKS,EAAEkc,KAAK,GAChBzD,EAAI,GACAqC,EAAE/L,UAA2B,IAAf+L,EAAEqC,MAAM,IAC5B1E,IACAqC,EAAEK,OAAO,GAEX3P,GAAQsP,EAAE/L,UAEV,IAAIyT,EAAM,IAAI1W,EAAG,GAAGuT,MAAM9f,MACtBkjB,EAAOD,EAAI7B,SAIX+B,EAAOnjB,KAAKS,EAAEkc,KAAK,GAAGf,OAAO,GAC7BwH,EAAIpjB,KAAKS,EAAEqQ,YAGf,IAFAsS,EAAI,IAAI7W,EAAG,EAAI6W,EAAIA,GAAGtD,MAAM9f,MAEW,IAAhCA,KAAKtK,IAAI0tB,EAAGD,GAAMvV,IAAIsV,IAC3BE,EAAE9C,QAAQ4C,GAOZ,IAJA,IAAIzgB,EAAIzC,KAAKtK,IAAI0tB,EAAG7H,GAChBjO,EAAItN,KAAKtK,IAAIgP,EAAG6W,EAAEmB,KAAK,GAAGd,OAAO,IACjChL,EAAI5Q,KAAKtK,IAAIgP,EAAG6W,GAChB9a,EAAIyY,EACc,IAAftI,EAAEhD,IAAIqV,IAAY,CAEvB,IADA,IAAIrB,EAAMhR,EACDhZ,EAAI,EAAoB,IAAjBgqB,EAAIhU,IAAIqV,GAAYrrB,IAClCgqB,EAAMA,EAAId,SAEZ7U,EAAOrU,EAAI6I,GACX,IAAIzO,EAAIgO,KAAKtK,IAAI+M,EAAG,IAAI8J,EAAG,GAAGiP,OAAO/a,EAAI7I,EAAI,IAE7C0V,EAAIA,EAAEqT,OAAO3uB,GACbyQ,EAAIzQ,EAAE8uB,SACNlQ,EAAIA,EAAE+P,OAAOle,GACbhC,EAAI7I,CACN,CAEA,OAAO0V,CACT,EAEAuS,EAAItsB,UAAUyrB,KAAO,SAAeta,GAClC,IAAI2e,EAAM3e,EAAEia,OAAO3e,KAAKS,GACxB,OAAqB,IAAjB4iB,EAAIzW,UACNyW,EAAIzW,SAAW,EACR5M,KAAKqiB,KAAKgB,GAAKjC,UAEfphB,KAAKqiB,KAAKgB,EAErB,EAEAxD,EAAItsB,UAAUmC,IAAM,SAAcgP,EAAG+I,GACnC,GAAIA,EAAI+B,SAAU,OAAO,IAAIjD,EAAG,GAAGuT,MAAM9f,MACzC,GAAoB,IAAhByN,EAAIsR,KAAK,GAAU,OAAOra,EAAEmK,QAEhC,IACIyU,EAAM,IAAIlrB,MAAM,IACpBkrB,EAAI,GAAK,IAAI/W,EAAG,GAAGuT,MAAM9f,MACzBsjB,EAAI,GAAK5e,EACT,IAAK,IAAI9M,EAAI,EAAGA,EAAI0rB,EAAI9wB,OAAQoF,IAC9B0rB,EAAI1rB,GAAKoI,KAAKsH,IAAIgc,EAAI1rB,EAAI,GAAI8M,GAGhC,IAAI5B,EAAMwgB,EAAI,GACVC,EAAU,EACVC,EAAa,EACbxnB,EAAQyR,EAAIqD,YAAc,GAK9B,IAJc,IAAV9U,IACFA,EAAQ,IAGLpE,EAAI6V,EAAIjb,OAAS,EAAGoF,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAImD,EAAO0S,EAAIZ,MAAMjV,GACZ4J,EAAIxF,EAAQ,EAAGwF,GAAK,EAAGA,IAAK,CACnC,IAAIiR,EAAO1X,GAAQyG,EAAK,EACpBsB,IAAQwgB,EAAI,KACdxgB,EAAM9C,KAAKob,IAAItY,IAGL,IAAR2P,GAAyB,IAAZ8Q,GAKjBA,IAAY,EACZA,GAAW9Q,GA9BE,MA+Bb+Q,GACwC,IAAN5rB,GAAiB,IAAN4J,KAE7CsB,EAAM9C,KAAKsH,IAAIxE,EAAKwgB,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,CAYjB,CACAxnB,EAAQ,EACV,CAEA,OAAO8G,CACT,EAEA+c,EAAItsB,UAAUysB,UAAY,SAAoBvS,GAC5C,IAAIH,EAAIG,EAAI8P,KAAKvd,KAAKS,GAEtB,OAAO6M,IAAMG,EAAMH,EAAEuB,QAAUvB,CACjC,EAEAuS,EAAItsB,UAAU4sB,YAAc,SAAsB1S,GAChD,IAAI3K,EAAM2K,EAAIoB,QAEd,OADA/L,EAAIgK,IAAM,KACHhK,CACT,EAMAyJ,EAAGkX,KAAO,SAAehW,GACvB,OAAO,IAAI2U,EAAK3U,EAClB,EAkBAvB,EAASkW,EAAMvC,GAEfuC,EAAK7uB,UAAUysB,UAAY,SAAoBvS,GAC7C,OAAOzN,KAAKqiB,KAAK5U,EAAI2O,MAAMpc,KAAKjH,OAClC,EAEAqpB,EAAK7uB,UAAU4sB,YAAc,SAAsB1S,GACjD,IAAIH,EAAItN,KAAKqiB,KAAK5U,EAAInG,IAAItH,KAAKsiB,OAE/B,OADAhV,EAAER,IAAM,KACDQ,CACT,EAEA8U,EAAK7uB,UAAUujB,KAAO,SAAepS,EAAG1S,GACtC,GAAI0S,EAAE8K,UAAYxd,EAAEwd,SAGlB,OAFA9K,EAAEmI,MAAM,GAAK,EACbnI,EAAElS,OAAS,EACJkS,EAGT,IAAIkM,EAAIlM,EAAEoS,KAAK9kB,GACXyQ,EAAImO,EAAE4L,MAAMxc,KAAKjH,OAAOuO,IAAItH,KAAKuiB,MAAMhG,OAAOvc,KAAKjH,OAAOuO,IAAItH,KAAKS,GACnEijB,EAAI9S,EAAEgC,KAAKnQ,GAAGmZ,OAAO5b,KAAKjH,OAC1B+J,EAAM4gB,EAQV,OANIA,EAAE9V,IAAI5N,KAAKS,IAAM,EACnBqC,EAAM4gB,EAAE9Q,KAAK5S,KAAKS,GACTijB,EAAE3E,KAAK,GAAK,IACrBjc,EAAM4gB,EAAE/Q,KAAK3S,KAAKS,IAGbqC,EAAImd,UAAUjgB,KACvB,EAEAoiB,EAAK7uB,UAAU+T,IAAM,SAAc5C,EAAG1S,GACpC,GAAI0S,EAAE8K,UAAYxd,EAAEwd,SAAU,OAAO,IAAIjD,EAAG,GAAG0T,UAAUjgB,MAEzD,IAAI4Q,EAAIlM,EAAE4C,IAAItV,GACVyQ,EAAImO,EAAE4L,MAAMxc,KAAKjH,OAAOuO,IAAItH,KAAKuiB,MAAMhG,OAAOvc,KAAKjH,OAAOuO,IAAItH,KAAKS,GACnEijB,EAAI9S,EAAEgC,KAAKnQ,GAAGmZ,OAAO5b,KAAKjH,OAC1B+J,EAAM4gB,EAOV,OANIA,EAAE9V,IAAI5N,KAAKS,IAAM,EACnBqC,EAAM4gB,EAAE9Q,KAAK5S,KAAKS,GACTijB,EAAE3E,KAAK,GAAK,IACrBjc,EAAM4gB,EAAE/Q,KAAK3S,KAAKS,IAGbqC,EAAImd,UAAUjgB,KACvB,EAEAoiB,EAAK7uB,UAAUyrB,KAAO,SAAeta,GAGnC,OADU1E,KAAKqiB,KAAK3d,EAAEia,OAAO3e,KAAKS,GAAG6G,IAAItH,KAAK2d,KACnCsC,UAAUjgB,KACvB,CACD,CA19GD,YA09G4CA,uBC19G5C,IAAIw5E,EAAQ1nF,EAAQ,OAGpBka,EAAOjP,QAAUy8E,EAFF,4FCCf,MAAMC,EAAO3nF,EAAAA,OAAAA,GACP4nF,EAAkB5nF,EAAQ,OAc1B6nF,EAAgB,SAASC,EAAY99C,GACzC,KAAK97B,gBAAgB25E,GACnB,OAAO,IAAIA,EAAcC,EAAY99C,GAGlCA,IACHA,EAAU,CAAC,GAGb97B,KAAK87B,QAAU,CACb+9C,QAAoC,qBAApB/9C,EAAQ+9C,QAA0B/9C,EAAQ+9C,QAAU,KACpEC,SAAsC,qBAArBh+C,EAAQg+C,SAA2Bh+C,EAAQg+C,SAAW,KACvEC,UAAwC,qBAAtBj+C,EAAQi+C,UAA4Bj+C,EAAQi+C,UAAY,WAAa,OAAON,GAAQ,EACtGrmC,QAAoC,qBAApBtX,EAAQsX,QAA0BtX,EAAQsX,QAAU,EACpE4mC,mBAA0D,mBAA/Bl+C,EAAQk+C,oBAAmCl+C,EAAQk+C,oBAGhFh6E,KAAK45E,WAAaA,CACpB,EAEA5tE,EAAOjP,QAAU48E,EAWjBA,EAAcpmF,UAAUw+D,QAAU,SAASE,EAAQ5T,EAAQqG,EAAIsN,GAC7D,MAAMjiD,EAAO/P,KACb,IAAI+xD,EAAU,KAGd,MAAMkoB,EAAU7hF,MAAMC,QAAQ45D,IAA6B,oBAAX5T,EAEhD,GAA6B,IAAzBr+C,KAAK87B,QAAQsX,SAAiB6mC,EAChC,MAAM,IAAI/nF,UAAU,0CAMtB,GAAG+nF,IAFYA,GAAWhoB,GAA4B,kBAAXA,GAAyC,oBAAX5T,EAGvE2T,EAAW3T,EACX0T,EAAUE,MACL,CACY,oBAAPvN,IACRsN,EAAWtN,EAEXA,OAAKtwD,GAGP,MAAM8lF,EAAkC,oBAAbloB,EAE3B,IACED,EAAU2nB,EAAgBznB,EAAQ5T,EAAQqG,EAAI,CAC5Cq1B,UAAW/5E,KAAK87B,QAAQi+C,UACxB3mC,QAASpzC,KAAK87B,QAAQsX,QACtB4mC,mBAAoBh6E,KAAK87B,QAAQk+C,oBAErC,CAAE,MAAM3sC,GACN,GAAG6sC,EACD,OAAOloB,EAAS3kB,GAElB,MAAMA,CACR,CAGA,IAAI6sC,EACF,OAAOnoB,CAGX,CAEA,IAAIrnD,EACJ,IACEA,EAAU0wB,KAAKC,UAAU02B,EAAS/xD,KAAK87B,QAAQg+C,SACjD,CAAE,MAAMzsC,GACN,OAAO2kB,EAAS3kB,EAClB,CAOA,OALArtC,KAAK45E,WAAWlvE,GAAS,SAAS2iC,EAAK2X,GACrCj1C,EAAKoqE,eAAe9sC,EAAK2X,EAAUgN,EACrC,IAGOD,CACT,EASA4nB,EAAcpmF,UAAU4mF,eAAiB,SAAS9sC,EAAK+sC,EAAcpoB,GACnE,GAAG3kB,EAED,YADA2kB,EAAS3kB,GAIX,IAAI+sC,EAGF,OAAOpoB,IAGT,IAAIhN,EACJ,IACEA,EAAW5pB,KAAKo2C,MAAM4I,EAAcp6E,KAAK87B,QAAQ+9C,QACnD,CAAE,MAAMxsC,GACN,OAAO2kB,EAAS3kB,EAClB,CAEA,GAAuB,IAApB2kB,EAASx/D,OAAc,CAIxB,GAAG4F,MAAMC,QAAQ2sD,GAAW,CAG1B,MAAMq1B,EAAU,SAASv3E,GACvB,MAA4B,qBAAdA,EAAImB,KACpB,EAEMq2E,EAAa,SAAUx3E,GAC3B,OAAQu3E,EAAQv3E,EAClB,EAEA,OAAOkvD,EAAS,KAAMhN,EAASlU,OAAOupC,GAAUr1B,EAASlU,OAAOwpC,GAElE,CAGE,OAAOtoB,EAAS,KAAMhN,EAAS/gD,MAAO+gD,EAAS9vB,OAInD,CAEA88B,EAAS,KAAMhN,EACjB,gCChKA,MAAMy0B,EAAO3nF,EAAAA,OAAAA,GA4Dbka,EAAOjP,QA7CiB,SAASk1D,EAAQ5T,EAAQqG,EAAI5oB,GACnD,GAAqB,kBAAXm2B,EACR,MAAM,IAAI//D,UAAU+/D,EAAS,qBAM/B,MAAM7e,EAAqC,kBAH3CtX,EAAUA,GAAW,CAAC,GAGSsX,QAAuBtX,EAAQsX,QAAU,EACxE,GAAgB,IAAZA,GAA6B,IAAZA,EACnB,MAAM,IAAIlhD,UAAUkhD,EAAU,mBAGhC,MAAM2e,EAAU,CACdE,OAAQA,GAOV,GAJe,IAAZ7e,IACD2e,EAAQtN,QAAU,OAGjBpG,EAAQ,CAET,GAAqB,kBAAXA,IAAwBjmD,MAAMC,QAAQgmD,GAC9C,MAAM,IAAInsD,UAAUmsD,EAAS,wCAE/B0T,EAAQ1T,OAASA,CACnB,CAGA,GAAkB,qBAARqG,EAAqB,CAC7B,MAAMq1B,EAAyC,oBAAtBj+C,EAAQi+C,UAA2Bj+C,EAAQi+C,UAAY,WAAa,OAAON,GAAQ,EAC5G1nB,EAAQrN,GAAKq1B,EAAUhoB,EAASj2B,EAClC,MAAuB,IAAZsX,GAAwB,OAAPsR,EAEtB5oB,EAAQk+C,qBACVjoB,EAAQrN,GAAK,MAGfqN,EAAQrN,GAAKA,EAGf,OAAOqN,CACT,sDCrDIwoB,EAAyBzoF,EAAQ,OAKrCiL,EAAAA,OAAqB,EAErB,IAAIy9E,EAAeD,EAAuBzoF,EAAQ,QAE9C2oF,EAAqBF,EAAuBzoF,EAAQ,QAEpD4oF,EAAWH,EAAuBzoF,EAAQ,QAE1C6oF,EAAmBJ,EAAuBzoF,EAAQ,QAElD8oF,EAAgBL,EAAuBzoF,EAAQ,QAE/C+oF,EAAaN,EAAuBzoF,EAAQ,QAE5CgpF,EAA8BP,EAAuBzoF,EAAQ,QAE7DipF,EAAmBR,EAAuBzoF,EAAQ,QAElDkpF,EAAgBlpF,EAAQ,OAE5B,SAASu8E,EAAa4M,GAAW,IAAIC,EAErC,WAAuC,GAAuB,qBAAZtF,UAA4BA,QAAQuF,UAAW,OAAO,EAAO,GAAIvF,QAAQuF,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhF5/E,QAAQlI,UAAUqL,QAAQzE,KAAKy7E,QAAQuF,UAAU1/E,QAAS,IAAI,WAAa,MAAY,CAAM,CAAE,MAAOjD,GAAK,OAAO,CAAO,CAAE,CAFvQ8iF,GAA6B,OAAO,WAAkC,IAAuDpmD,EAAnDqmD,GAAQ,EAAIR,EAA0B,SAAGE,GAAkB,GAAIC,EAA2B,CAAE,IAAIM,GAAY,EAAIT,EAA0B,SAAG/6E,MAAMtN,YAAawiC,EAAS0gD,QAAQuF,UAAUI,EAAOpnF,UAAWqnF,EAAY,MAAStmD,EAASqmD,EAAM93E,MAAMzD,KAAM7L,WAAc,OAAO,EAAI2mF,EAAqC,SAAG96E,KAAMk1B,EAAS,CAAG,CAI3d,IAAIumD,EAAsC,SAAUviE,EAAG1gB,GACrD,IAAIoY,EAAI,CAAC,EAET,IAAK,IAAI4I,KAAKN,EACR7lB,OAAOE,UAAU2G,eAAeC,KAAK+e,EAAGM,IAAMhhB,EAAEsI,QAAQ0Y,GAAK,IAAG5I,EAAE4I,GAAKN,EAAEM,IAG/E,GAAS,MAALN,GAAqD,oBAAjC7lB,OAAOqoF,sBAA2C,KAAI9jF,EAAI,EAAb,IAAgB4hB,EAAInmB,OAAOqoF,sBAAsBxiE,GAAIthB,EAAI4hB,EAAEhnB,OAAQoF,IAClIY,EAAEsI,QAAQ0Y,EAAE5hB,IAAM,GAAKvE,OAAOE,UAAUooF,qBAAqBxhF,KAAK+e,EAAGM,EAAE5hB,MAAKgZ,EAAE4I,EAAE5hB,IAAMshB,EAAEM,EAAE5hB,IADuB,CAGvH,OAAOgZ,CACT,EAGIgrE,EAA4B,SAAUC,IACxC,EAAIhB,EAAoB,SAAGe,EAAcC,GAEzC,IAAItU,EAAS8G,EAAauN,GAW1B,SAASA,EAAaE,GACpB,IAAI3O,EAEAjgC,EAAU/4C,UAAU3B,OAAS,QAAsB4B,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,sBAE9E2/E,EAAK3/E,UAAU3B,OAAS,QAAsB4B,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAE1EkuD,EAAsBluD,UAAU3B,OAAS,EAAI2B,UAAU,QAAKC,GAChE,EAAIumF,EAA0B,SAAG36E,KAAM47E,GAEvC,IAAIG,EAAiBjI,EAAGrxB,YACpBA,OAAiC,IAAnBs5B,GAAmCA,EACjDC,EAAelI,EAAGnxB,UAClBA,OAA6B,IAAjBq5B,GAAiCA,EAC7CC,EAAwBnI,EAAGlxB,mBAC3BA,OAA+C,IAA1Bq5B,EAAmC,IAAOA,EAC/DC,EAAoBpI,EAAGpxB,eACvBA,OAAuC,IAAtBw5B,EAA+B,EAAIA,EACpDC,EAAeV,EAAO3H,EAAI,CAAC,cAAe,YAAa,qBAAsB,mBA0BjF,OAxBA3G,EAAQ5F,EAAOptE,KAAK6F,OACd87E,iBAAmBA,EACzB3O,EAAMiP,MAAQ,CAAC,EACfjP,EAAMkP,OAAS,EACflP,EAAMjgC,QAAUA,EAChBigC,EAAM1qB,YAAcA,EACpB0qB,EAAMmP,OAAQ,EACdnP,EAAMxqB,UAAYA,EAClBwqB,EAAMoP,wBAAqBnoF,EAC3B+4E,EAAMvqB,mBAAqBA,EAC3BuqB,EAAMzqB,eAAiBA,EACvByqB,EAAMgP,aAAeA,EACrBhP,EAAMqP,mBAAqB,EAE3BrP,EAAM9qB,oBAAsBA,GAAuB,WACjD,QAAS8qB,EAAMkP,MACjB,EAEIlP,EAAM1qB,aAAa0qB,EAAMsP,SAAStP,EAAMjgC,QAAS75C,OAAOG,OAAO,CACjEivD,YAAa0qB,EAAM1qB,YACnBE,UAAWwqB,EAAMxqB,UACjBC,mBAAoBuqB,EAAMvqB,mBAC1BF,eAAgByqB,EAAMzqB,gBACrByqB,EAAMgP,eACFhP,CACT,CAiXA,OAzWA,EAAIyN,EAAuB,SAAGgB,EAAc,CAAC,CAC3ClkD,IAAK,UACLz8B,MAAO,WACD+E,KAAK8iD,QAET9iD,KAAKy8E,SAASz8E,KAAKktC,QAAS75C,OAAOG,OAAO,CACxCivD,YAAaziD,KAAKyiD,YAClBE,UAAW3iD,KAAK2iD,UAChBC,mBAAoB5iD,KAAK4iD,mBACzBF,eAAgB1iD,KAAK0iD,gBACpB1iD,KAAKm8E,cACV,GAWC,CACDzkD,IAAK,OACLz8B,MAAO,SAAcg3D,EAAQ5T,EAAQq+B,EAASC,GAC5C,IAAI3M,EAAShwE,KAOb,OALK28E,GAAW,YAAa,EAAIjC,EAAkB,SAAGgC,KACpDC,EAAUD,EACVA,EAAU,MAGL,IAAIvgC,SAAQ,SAAUC,EAAS4G,GACpC,IAAKgtB,EAAOsM,MAAO,OAAOt5B,EAAO,IAAIhvD,MAAM,qBAE3C,IAAIqoF,EAASrM,EAAO3tB,oBAAoB4P,EAAQ5T,GAE5C3zC,EAAU,CACZ+5C,QAAS,MACTwN,OAAQA,EACR5T,OAAQA,GAAU,KAClBqG,GAAI23B,GAGNrM,EAAOltB,OAAO85B,KAAKxhD,KAAKC,UAAU3wB,GAAUiyE,GAAS,SAAU14E,GAC7D,GAAIA,EAAO,OAAO++C,EAAO/+C,GACzB+rE,EAAOoM,MAAMC,GAAU,CACrBQ,QAAS,CAACzgC,EAAS4G,IAGjB05B,IACF1M,EAAOoM,MAAMC,GAAQK,QAAUrgC,YAAW,kBACjC2zB,EAAOoM,MAAMC,GACpBr5B,EAAO,IAAIhvD,MAAM,iBACnB,GAAG0oF,GAEP,GACF,GACF,GAQC,CACDhlD,IAAK,QACLz8B,MAAO,WACL,IAAI6hF,GAAS,EAAIrC,EAA4B,SAAiBD,EAAsB,QAAEuC,MAAK,SAASzX,EAAQjnB,GAC1G,IAAI2+B,EACJ,OAAOxC,EAAsB,QAAEyC,MAAK,SAAkB1X,GACpD,OACE,OAAQA,EAASziD,KAAOyiD,EAASxiD,MAC/B,KAAK,EAEH,OADAwiD,EAASxiD,KAAO,EACT/iB,KAAK7F,KAAK,YAAakkD,GAEhC,KAAK,EAGH,GAFA2+B,EAAOzX,EAASE,KAEN,CACRF,EAASxiD,KAAO,EAChB,KACF,CAEA,MAAM,IAAI/uB,MAAM,yBAElB,KAAK,EACH,OAAOuxE,EAASC,OAAO,SAAUwX,GAEnC,KAAK,EACL,IAAK,MACH,OAAOzX,EAASG,OAGxB,GAAGJ,EAAStlE,KACd,KAMA,OAJA,SAAe0zB,GACb,OAAOopD,EAAOr5E,MAAMzD,KAAM7L,UAC5B,CAGF,CApCO,IA2CN,CACDujC,IAAK,cACLz8B,MAAO,WACL,IAAIiiF,GAAe,EAAIzC,EAA4B,SAAiBD,EAAsB,QAAEuC,MAAK,SAAShX,IACxG,OAAOyU,EAAsB,QAAEyC,MAAK,SAAmBjX,GACrD,OACE,OAAQA,EAAUljD,KAAOkjD,EAAUjjD,MACjC,KAAK,EAEH,OADAijD,EAAUjjD,KAAO,EACV/iB,KAAK7F,KAAK,iBAEnB,KAAK,EACH,OAAO6rE,EAAUR,OAAO,SAAUQ,EAAUP,MAE9C,KAAK,EACL,IAAK,MACH,OAAOO,EAAUN,OAGzB,GAAGK,EAAU/lE,KACf,KAMA,OAJA,WACE,OAAOk9E,EAAaz5E,MAAMzD,KAAM7L,UAClC,CAGF,CAzBO,IAkCN,CACDujC,IAAK,SACLz8B,MAAO,SAAgBg3D,EAAQ5T,GAC7B,IAAI8+B,EAASn9E,KAEb,OAAO,IAAIm8C,SAAQ,SAAUC,EAAS4G,GACpC,IAAKm6B,EAAOb,MAAO,OAAOt5B,EAAO,IAAIhvD,MAAM,qBAC3C,IAAI0W,EAAU,CACZ+5C,QAAS,MACTwN,OAAQA,EACR5T,OAAQA,GAAU,MAGpB8+B,EAAOr6B,OAAO85B,KAAKxhD,KAAKC,UAAU3wB,IAAU,SAAUzG,GACpD,GAAIA,EAAO,OAAO++C,EAAO/+C,GACzBm4C,GACF,GACF,GACF,GASC,CACD1kB,IAAK,YACLz8B,MAAO,WACL,IAAImiF,GAAa,EAAI3C,EAA4B,SAAiBD,EAAsB,QAAEuC,MAAK,SAASxW,EAAS8W,GAC/G,IAAInoD,EACJ,OAAOslD,EAAsB,QAAEyC,MAAK,SAAmBzW,GACrD,OACE,OAAQA,EAAU1jD,KAAO0jD,EAAUzjD,MACjC,KAAK,EAGH,MAFqB,kBAAVs6D,IAAoBA,EAAQ,CAACA,IACxC7W,EAAUzjD,KAAO,EACV/iB,KAAK7F,KAAK,SAAUkjF,GAE7B,KAAK,EAGH,GAFAnoD,EAASsxC,EAAUf,KAEI,kBAAV4X,GAAwC,OAAlBnoD,EAAOmoD,GAAkB,CAC1D7W,EAAUzjD,KAAO,EACjB,KACF,CAEA,MAAM,IAAI/uB,MAAM,mCAAqCqpF,EAAQ,WAAanoD,EAAOmoD,IAEnF,KAAK,EACH,OAAO7W,EAAUhB,OAAO,SAAUtwC,GAEpC,KAAK,EACL,IAAK,MACH,OAAOsxC,EAAUd,OAGzB,GAAGa,EAAUvmE,KACf,KAMA,OAJA,SAAmB2lE,GACjB,OAAOyX,EAAW35E,MAAMzD,KAAM7L,UAChC,CAGF,CArCO,IA8CN,CACDujC,IAAK,cACLz8B,MAAO,WACL,IAAIqiF,GAAe,EAAI7C,EAA4B,SAAiBD,EAAsB,QAAEuC,MAAK,SAAS1T,EAASgU,GACjH,IAAInoD,EACJ,OAAOslD,EAAsB,QAAEyC,MAAK,SAAmB3T,GACrD,OACE,OAAQA,EAAUxmD,KAAOwmD,EAAUvmD,MACjC,KAAK,EAGH,MAFqB,kBAAVs6D,IAAoBA,EAAQ,CAACA,IACxC/T,EAAUvmD,KAAO,EACV/iB,KAAK7F,KAAK,UAAWkjF,GAE9B,KAAK,EAGH,GAFAnoD,EAASo0C,EAAU7D,KAEI,kBAAV4X,GAAwC,OAAlBnoD,EAAOmoD,GAAkB,CAC1D/T,EAAUvmD,KAAO,EACjB,KACF,CAEA,MAAM,IAAI/uB,MAAM,4CAA8CkhC,GAEhE,KAAK,EACH,OAAOo0C,EAAU9D,OAAO,SAAUtwC,GAEpC,KAAK,EACL,IAAK,MACH,OAAOo0C,EAAU5D,OAGzB,GAAG2D,EAAUrpE,KACf,KAMA,OAJA,SAAqB4lE,GACnB,OAAO0X,EAAa75E,MAAMzD,KAAM7L,UAClC,CAGF,CArCO,IA8CN,CACDujC,IAAK,QACLz8B,MAAO,SAAe+O,EAAM7K,GAC1Ba,KAAK8iD,OAAOgZ,MAAM9xD,GAAQ,IAAM7K,EAClC,GAUC,CACDu4B,IAAK,WACLz8B,MAAO,SAAkBiyC,EAASpR,GAChC,IAAIyhD,EAASv9E,KAEb+3D,aAAa/3D,KAAKu8E,oBAClBv8E,KAAK8iD,OAAS9iD,KAAK87E,iBAAiB5uC,EAASpR,GAC7C97B,KAAK8iD,OAAO0S,iBAAiB,QAAQ,WACnC+nB,EAAOjB,OAAQ,EAEfiB,EAAOvQ,KAAK,QAEZuQ,EAAOf,mBAAqB,CAC9B,IACAx8E,KAAK8iD,OAAO0S,iBAAiB,WAAW,SAAUzkB,GAChD,IAAIrmC,EAAUqmC,EAAK5xC,KACfuL,aAAmBtM,cAAasM,EAAUtY,EAAOC,KAAKqY,GAASnO,YAEnE,IACEmO,EAAU0wB,KAAKo2C,MAAM9mE,EACvB,CAAE,MAAOzG,GACP,MACF,CAGA,GAAIyG,EAAQ6xD,cAAgBghB,EAAOC,UAAU9yE,EAAQ6xD,cAAc/pE,OAAQ,CACzE,IAAKa,OAAO2qC,KAAKtzB,EAAQ2zC,QAAQ7rD,OAAQ,OAAO+qF,EAAOvQ,KAAKtiE,EAAQ6xD,cACpE,IAAIxpB,EAAO,CAACroC,EAAQ6xD,cACpB,GAAI7xD,EAAQ2zC,OAAO3rD,cAAgBW,OAAQ0/C,EAAKl7C,KAAK6S,EAAQ2zC,aAC3D,IAAK,IAAIzmD,EAAI,EAAGA,EAAI8S,EAAQ2zC,OAAO7rD,OAAQoF,IACzCm7C,EAAKl7C,KAAK6S,EAAQ2zC,OAAOzmD,IAI7B,OAAOukD,QAAQC,UAAU4X,MAAK,WAC5BupB,EAAOvQ,KAAKvpE,MAAM85E,EAAQxqC,EAC5B,GACF,CAEA,IAAKwqC,EAAOnB,MAAM1xE,EAAQg6C,IAExB,OAAIh6C,EAAQunD,QAAUvnD,EAAQ2zC,OAErBlC,QAAQC,UAAU4X,MAAK,WAC5BupB,EAAOvQ,KAAKtiE,EAAQunD,OAAQvnD,EAAQ2zC,OACtC,SAGF,EAIE,UAAW3zC,IAAY,WAAYA,GAAS6yE,EAAOnB,MAAM1xE,EAAQg6C,IAAIm4B,QAAQ,GAAG,IAAI7oF,MAAM,+FAC1FupF,EAAOnB,MAAM1xE,EAAQg6C,IAAIg4B,SAAS3kB,aAAawlB,EAAOnB,MAAM1xE,EAAQg6C,IAAIg4B,SACxEhyE,EAAQzG,MAAOs5E,EAAOnB,MAAM1xE,EAAQg6C,IAAIm4B,QAAQ,GAAGnyE,EAAQzG,OAAYs5E,EAAOnB,MAAM1xE,EAAQg6C,IAAIm4B,QAAQ,GAAGnyE,EAAQwqB,eAChHqoD,EAAOnB,MAAM1xE,EAAQg6C,GAC9B,IACA1kD,KAAK8iD,OAAO0S,iBAAiB,SAAS,SAAUvxD,GAC9C,OAAOs5E,EAAOvQ,KAAK,QAAS/oE,EAC9B,IACAjE,KAAK8iD,OAAO0S,iBAAiB,SAAS,SAAUvkB,GAC9C,IAAIjnC,EAAOinC,EAAMjnC,KACbkrD,EAASjkB,EAAMikB,OACfqoB,EAAOjB,OACTjgC,YAAW,WACT,OAAOkhC,EAAOvQ,KAAK,QAAShjE,EAAMkrD,EACpC,GAAG,GACLqoB,EAAOjB,OAAQ,EACfiB,EAAOz6B,YAAS1uD,EACH,MAAT4V,IACJuzE,EAAOf,qBACHe,EAAO56B,YAAc46B,EAAO76B,eAAiB66B,EAAOf,oBAAgD,IAA1Be,EAAO76B,kBAAuB66B,EAAOhB,mBAAqBlgC,YAAW,WACjJ,OAAOkhC,EAAOd,SAASvvC,EAASpR,EAClC,GAAGyhD,EAAO36B,qBACZ,GACF,KAEKg5B,CACT,CA7agC,CA6a9BZ,EAAcyC,cAEhB1gF,EAAAA,EAAqB6+E,oCC3djBrB,EAAyBzoF,EAAQ,OAKrCiL,EAAAA,EA4GA,SAAkBmwC,EAASpR,GACzB,OAAO,IAAI4hD,EAAqBxwC,EAASpR,EAC3C,EA5GA,IAAI6+C,EAAmBJ,EAAuBzoF,EAAQ,QAElD8oF,EAAgBL,EAAuBzoF,EAAQ,QAE/C+oF,EAAaN,EAAuBzoF,EAAQ,QAE5CgpF,EAA8BP,EAAuBzoF,EAAQ,QAE7DipF,EAAmBR,EAAuBzoF,EAAQ,QAItD,SAASu8E,EAAa4M,GAAW,IAAIC,EAErC,WAAuC,GAAuB,qBAAZtF,UAA4BA,QAAQuF,UAAW,OAAO,EAAO,GAAIvF,QAAQuF,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhF5/E,QAAQlI,UAAUqL,QAAQzE,KAAKy7E,QAAQuF,UAAU1/E,QAAS,IAAI,WAAa,MAAY,CAAM,CAAE,MAAOjD,GAAK,OAAO,CAAO,CAAE,CAFvQ8iF,GAA6B,OAAO,WAAkC,IAAuDpmD,EAAnDqmD,GAAQ,EAAIR,EAA0B,SAAGE,GAAkB,GAAIC,EAA2B,CAAE,IAAIM,GAAY,EAAIT,EAA0B,SAAG/6E,MAAMtN,YAAawiC,EAAS0gD,QAAQuF,UAAUI,EAAOpnF,UAAWqnF,EAAY,MAAStmD,EAASqmD,EAAM93E,MAAMzD,KAAM7L,WAAc,OAAO,EAAI2mF,EAAqC,SAAG96E,KAAMk1B,EAAS,CAAG,CAI3d,IAAIwoD,EAAoC,SAAU7B,IAChD,EAAIhB,EAAoB,SAAG6C,EAAsB7B,GAEjD,IAAItU,EAAS8G,EAAaqP,GAS1B,SAASA,EAAqBxwC,EAASpR,EAAS6hD,GAC9C,IAAIxQ,EAsBJ,OApBA,EAAIwN,EAA0B,SAAG36E,KAAM09E,IACvCvQ,EAAQ5F,EAAOptE,KAAK6F,OACd8iD,OAAS,IAAI71C,OAAO2wE,UAAU1wC,EAASywC,GAE7CxQ,EAAMrqB,OAAO+6B,OAAS,WACpB,OAAO1Q,EAAMH,KAAK,OACpB,EAEAG,EAAMrqB,OAAOg7B,UAAY,SAAUT,GACjC,OAAOlQ,EAAMH,KAAK,UAAWqQ,EAAMl+E,KACrC,EAEAguE,EAAMrqB,OAAOi7B,QAAU,SAAU95E,GAC/B,OAAOkpE,EAAMH,KAAK,QAAS/oE,EAC7B,EAEAkpE,EAAMrqB,OAAOk7B,QAAU,SAAUX,GAC/BlQ,EAAMH,KAAK,QAASqQ,EAAMrzE,KAAMqzE,EAAMnoB,OACxC,EAEOiY,CACT,CA2CA,OAhCA,EAAIyN,EAAuB,SAAG8C,EAAsB,CAAC,CACnDhmD,IAAK,OACLz8B,MAAO,SAAckE,EAAM8+E,EAAmBjsB,GAC5C,IAAI2J,EAAK3J,GAAYisB,EAErB,IACEj+E,KAAK8iD,OAAO85B,KAAKz9E,GACjBw8D,GACF,CAAE,MAAO13D,GACP03D,EAAG13D,EACL,CACF,GAUC,CACDyzB,IAAK,QACLz8B,MAAO,SAAe+O,EAAMkrD,GAC1Bl1D,KAAK8iD,OAAOgZ,MAAM9xD,EAAMkrD,EAC1B,GACC,CACDx9B,IAAK,mBACLz8B,MAAO,SAA0BiE,EAAMg/E,EAAUpiD,GAC/C97B,KAAK8iD,OAAO0S,iBAAiBt2D,EAAMg/E,EAAUpiD,EAC/C,KAEK4hD,CACT,CAhFwC,CANpB5rF,EAAQ,OAsFZ2rF,4CC1GhB,IAAIjkD,oBACJ,IAAI2kD,EAAQ,IAAIlsF,WAAW,IACZ,SAASmsF,IAEtB,IAAK5kD,KAGHA,EAAoC,qBAAX/U,QAA0BA,OAAO+U,iBAAmB/U,OAAO+U,gBAAgB5/B,KAAK6qB,SAA+B,qBAAb45D,UAAgE,oBAA7BA,SAAS7kD,iBAAkC6kD,SAAS7kD,gBAAgB5/B,KAAKykF,WAGrO,MAAM,IAAIrqF,MAAM,4GAIpB,OAAOwlC,EAAgB2kD,EACzB,CClBA,8HCMA,QAJA,SAAkB1E,GAChB,MAAuB,kBAATA,GAAqB6E,EAAAA,KAAW7E,EAChD,ECIA,IAFA,IAAI8E,EAAY,GAEP3mF,EAAI,EAAGA,EAAI,MAAOA,EACzB2mF,EAAU1mF,MAAMD,EAAI,KAAO2E,SAAS,IAAIuF,OAAO,IAoBjD,QAjBA,SAAmBd,GACjB,IAAI/N,EAASkB,UAAU3B,OAAS,QAAsB4B,IAAjBD,UAAU,GAAmBA,UAAU,GAAK,EAG7EslF,GAAQ8E,EAAUv9E,EAAI/N,EAAS,IAAMsrF,EAAUv9E,EAAI/N,EAAS,IAAMsrF,EAAUv9E,EAAI/N,EAAS,IAAMsrF,EAAUv9E,EAAI/N,EAAS,IAAM,IAAMsrF,EAAUv9E,EAAI/N,EAAS,IAAMsrF,EAAUv9E,EAAI/N,EAAS,IAAM,IAAMsrF,EAAUv9E,EAAI/N,EAAS,IAAMsrF,EAAUv9E,EAAI/N,EAAS,IAAM,IAAMsrF,EAAUv9E,EAAI/N,EAAS,IAAMsrF,EAAUv9E,EAAI/N,EAAS,IAAM,IAAMsrF,EAAUv9E,EAAI/N,EAAS,KAAOsrF,EAAUv9E,EAAI/N,EAAS,KAAOsrF,EAAUv9E,EAAI/N,EAAS,KAAOsrF,EAAUv9E,EAAI/N,EAAS,KAAOsrF,EAAUv9E,EAAI/N,EAAS,KAAOsrF,EAAUv9E,EAAI/N,EAAS,MAAM4M,cAMzf,IAAK88B,EAAS88C,GACZ,MAAMvnF,UAAU,+BAGlB,OAAOunF,CACT,ECJA,QApBA,SAAY39C,EAASr+B,EAAKxK,GAExB,IAAIurF,GADJ1iD,EAAUA,GAAW,CAAC,GACH2iD,SAAW3iD,EAAQsiD,KAAOA,KAK7C,GAHAI,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvB/gF,EAAK,CACPxK,EAASA,GAAU,EAEnB,IAAK,IAAI2E,EAAI,EAAGA,EAAI,KAAMA,EACxB6F,EAAIxK,EAAS2E,GAAK4mF,EAAK5mF,GAGzB,OAAO6F,CACT,CAEA,OAAO49B,EAAUmjD,EACnB,aCfAxyE,EAAOjP,QANP,SAAgCgT,GAC9B,QAAa,IAATA,EACF,MAAM,IAAI2uE,eAAe,6DAE3B,OAAO3uE,CACT,EACyC/D,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,mBCN9G,SAAS4hF,EAAmBx+C,EAAKic,EAAS4G,EAAQynB,EAAOmU,EAAQlnD,EAAK/5B,GACpE,IACE,IAAI8zD,EAAOtxB,EAAIzI,GAAK/5B,GAChB1C,EAAQw2D,EAAKx2D,KACnB,CAAE,MAAOgJ,GAEP,YADA++C,EAAO/+C,EAET,CACIwtD,EAAK10B,KACPqf,EAAQnhD,GAERkhD,QAAQC,QAAQnhD,GAAO+4D,KAAKyW,EAAOmU,EAEvC,CAiBA5yE,EAAOjP,QAhBP,SAA2B+O,GACzB,OAAO,WACL,IAAIiE,EAAO/P,KACT+yC,EAAO5+C,UACT,OAAO,IAAIgoD,SAAQ,SAAUC,EAAS4G,GACpC,IAAI7iB,EAAMr0B,EAAGrI,MAAMsM,EAAMgjC,GACzB,SAAS03B,EAAMxvE,GACb0jF,EAAmBx+C,EAAKic,EAAS4G,EAAQynB,EAAOmU,EAAQ,OAAQ3jF,EAClE,CACA,SAAS2jF,EAAOvxC,GACdsxC,EAAmBx+C,EAAKic,EAAS4G,EAAQynB,EAAOmU,EAAQ,QAASvxC,EACnE,CACAo9B,OAAMr2E,EACR,GACF,CACF,EACoC4X,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,mBCzBzGiP,EAAOjP,QALP,SAAyBqnB,EAAUy6D,GACjC,KAAMz6D,aAAoBy6D,GACxB,MAAM,IAAI3sF,UAAU,oCAExB,EACkC8Z,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,yBCLvG,IAAI+hF,EAAgB,EAAQ,OAC5B,SAASC,EAAkBr5E,EAAQg3B,GACjC,IAAK,IAAI9kC,EAAI,EAAGA,EAAI8kC,EAAMlqC,OAAQoF,IAAK,CACrC,IAAIonF,EAAatiD,EAAM9kC,GACvBonF,EAAW76E,WAAa66E,EAAW76E,aAAc,EACjD66E,EAAWx0E,cAAe,EACtB,UAAWw0E,IAAYA,EAAWz0E,UAAW,GACjDlX,OAAO6Q,eAAewB,EAAQo5E,EAAcE,EAAWtnD,KAAMsnD,EAC/D,CACF,CASAhzE,EAAOjP,QARP,SAAsB8hF,EAAaI,EAAYC,GAM7C,OALID,GAAYF,EAAkBF,EAAYtrF,UAAW0rF,GACrDC,GAAaH,EAAkBF,EAAaK,GAChD7rF,OAAO6Q,eAAe26E,EAAa,YAAa,CAC9Ct0E,UAAU,IAELs0E,CACT,EAC+B7yE,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,mBClBpG,SAASoiF,EAAgBnsE,GAIvB,OAHAhH,EAAOjP,QAAUoiF,EAAkB9rF,OAAOqK,eAAiBrK,OAAOwtC,eAAejnC,OAAS,SAAyBoZ,GACjH,OAAOA,EAAEosE,WAAa/rF,OAAOwtC,eAAe7tB,EAC9C,EAAGhH,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,QACjEoiF,EAAgBnsE,EACzB,CACAhH,EAAOjP,QAAUoiF,EAAiBnzE,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,yBCNvG,IAAIW,EAAiB,EAAQ,MAiB7BsO,EAAOjP,QAhBP,SAAmBsiF,EAAUC,GAC3B,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIptF,UAAU,sDAEtBmtF,EAAS9rF,UAAYF,OAAOC,OAAOgsF,GAAcA,EAAW/rF,UAAW,CACrEb,YAAa,CACXuI,MAAOokF,EACP90E,UAAU,EACVC,cAAc,KAGlBnX,OAAO6Q,eAAem7E,EAAU,YAAa,CAC3C90E,UAAU,IAER+0E,GAAY5hF,EAAe2hF,EAAUC,EAC3C,EAC4BtzE,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,mBCZjGiP,EAAOjP,QALP,SAAgC8B,GAC9B,OAAOA,GAAOA,EAAIk3E,WAAal3E,EAAM,CACnC,QAAWA,EAEf,EACyCmN,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,yBCL9G,IAAIwiF,EAAU,iBACVC,EAAwB,EAAQ,OASpCxzE,EAAOjP,QARP,SAAoCgT,EAAM5V,GACxC,GAAIA,IAA2B,WAAlBolF,EAAQplF,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIjI,UAAU,4DAEtB,OAAOstF,EAAsBzvE,EAC/B,EAC6C/D,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,kBCVlH,SAAS0iF,EAAgBzsE,EAAGwG,GAK1B,OAJAxN,EAAOjP,QAAU0iF,EAAkBpsF,OAAOqK,eAAiBrK,OAAOqK,eAAe9D,OAAS,SAAyBoZ,EAAGwG,GAEpH,OADAxG,EAAEosE,UAAY5lE,EACPxG,CACT,EAAGhH,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,QACjE0iF,EAAgBzsE,EAAGwG,EAC5B,CACAxN,EAAOjP,QAAU0iF,EAAiBzzE,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,yBCPvG,IAAIwiF,EAAU,iBAWdvzE,EAAOjP,QAVP,SAAsBkO,EAAO4Q,GAC3B,GAAuB,WAAnB0jE,EAAQt0E,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIy0E,EAAOz0E,EAAM9N,OAAOkC,aACxB,QAAajL,IAATsrF,EAAoB,CACtB,IAAI58E,EAAM48E,EAAKvlF,KAAK8Q,EAAO4Q,GAAQ,WACnC,GAAqB,WAAjB0jE,EAAQz8E,GAAmB,OAAOA,EACtC,MAAM,IAAI5Q,UAAU,+CACtB,CACA,OAAiB,WAAT2pB,EAAoBpf,OAAS5J,QAAQoY,EAC/C,EAC+Be,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,yBCXpG,IAAIwiF,EAAU,iBACVlgF,EAAc,EAAQ,OAK1B2M,EAAOjP,QAJP,SAAwBY,GACtB,IAAI+5B,EAAMr4B,EAAY1B,EAAK,UAC3B,MAAwB,WAAjB4hF,EAAQ7nD,GAAoBA,EAAMj7B,OAAOi7B,EAClD,EACiC1rB,EAAOjP,QAAQg5E,YAAa,EAAM/pE,EAAOjP,QAAiB,QAAIiP,EAAOjP,qCCStG,SAAS4iF,EAAQj7E,EAAG7B,EAAK0C,GACvB,OAAO1C,GAAO6B,GAAKA,GAAKa,CAC1B,CAMA,SAASq6E,EAAa5sE,GACpB,QAAU5e,IAAN4e,EAAiB,MAAO,CAAC,EAC7B,GAAIA,IAAM3f,OAAO2f,GAAI,OAAOA,EAC5B,MAAM9gB,UAAU,2CAClB,qDAsHI,IAAI2tF,GAAiB,EASzB,SAASC,EAAOC,GAEd//E,KAAK+/E,OAAS,GAAG3jF,MAAMjC,KAAK4lF,EAC9B,CAEAD,EAAOvsF,UAAY,CAIjBysF,YAAa,WACX,OAAQhgF,KAAK+/E,OAAOvtF,MACtB,EAUC4O,KAAM,WACL,OAAKpB,KAAK+/E,OAAOvtF,OAETwN,KAAK+/E,OAAOhnF,QADX8mF,CAEV,EASDI,QAAS,SAASC,GAChB,GAAI9nF,MAAMC,QAAQ6nF,GAEhB,IADA,IAAIH,EAAsCG,EACnCH,EAAOvtF,QACZwN,KAAK+/E,OAAO7mC,QAAQ6mC,EAAOI,YAE7BngF,KAAK+/E,OAAO7mC,QAAQgnC,EAExB,EASAroF,KAAM,SAASqoF,GACb,GAAI9nF,MAAMC,QAAQ6nF,GAEhB,IADA,IAAIH,EAAsCG,EACnCH,EAAOvtF,QACZwN,KAAK+/E,OAAOloF,KAAKkoF,EAAOhnF,cAE1BiH,KAAK+/E,OAAOloF,KAAKqoF,EAErB,GAUF,IAAI37D,GAAY,EAOhB,SAAS67D,EAAa1J,EAAO2J,GAC3B,GAAI3J,EACF,MAAMxkF,UAAU,iBAClB,OAAOmuF,GAAkB,KAC3B,CA8Bc,IAAIC,EAAmB,QAUrC,SAAS7J,EAAY14E,EAAU+9B,GAC7B,KAAM97B,gBAAgBy2E,GACpB,OAAO,IAAIA,EAAY14E,EAAU+9B,GAGnC,IADA/9B,OAAwB3J,IAAb2J,EAAyBtB,OAAOsB,GAAU8B,cAAgBygF,KACpDA,EACf,MAAM,IAAItsF,MAAM,mDAElB8nC,EAAU8jD,EAAa9jD,GAGvB97B,KAAKugF,YAAa,EAElBvgF,KAAKwgF,UAAW,EAEhBxgF,KAAKygF,SAAW,KAEhBzgF,KAAK0gF,OAASjlF,QAAQqgC,EAAe,OAErC97B,KAAK2gF,WAAallF,QAAQqgC,EAAmB,WAE7CzoC,OAAO6Q,eAAelE,KAAM,WAAY,CAAC/E,MAAO,UAChD5H,OAAO6Q,eAAelE,KAAM,QAAS,CAAC/E,MAAO+E,KAAK0gF,SAClDrtF,OAAO6Q,eAAelE,KAAM,YAAa,CAAC/E,MAAO+E,KAAK2gF,YACxD,CA4FA,SAAS57D,EAAYhnB,EAAU+9B,GAC7B,KAAM97B,gBAAgB+kB,GACpB,OAAO,IAAIA,EAAYhnB,EAAU+9B,GAEnC,IADA/9B,OAAwB3J,IAAb2J,EAAyBtB,OAAOsB,GAAU8B,cAAgBygF,KACpDA,EACf,MAAM,IAAItsF,MAAM,mDAElB8nC,EAAU8jD,EAAa9jD,GAGvB97B,KAAKugF,YAAa,EAElBvgF,KAAK4gF,SAAW,KAEhB5gF,KAAK6gF,SAAW,CAACnK,MAAOj7E,QAAQqgC,EAAe,QAE/CzoC,OAAO6Q,eAAelE,KAAM,WAAY,CAAC/E,MAAO,SAClD,CA2DA,SAAS6lF,EAAYhlD,GACnB,IAAI46C,EAAQ56C,EAAQ46C,MAMMqK,EAAkB,EAClBC,EAAkB,EAClBC,EAAoB,EACpBC,EAAsB,IACtBC,EAAsB,IAShDnhF,KAAKsmE,QAAU,SAAS8a,EAAQC,GAG9B,GAAIA,IAASxB,GAAuC,IAAtBoB,EAE5B,OADAA,EAAoB,EACbb,EAAa1J,GAItB,GAAI2K,IAASxB,EACX,OAAOt7D,EAGT,GAA0B,IAAtB08D,EAAyB,CAG3B,GAAItB,EAAQ0B,EAAM,EAAM,KAEtB,OAAOA,EAIT,GAAI1B,EAAQ0B,EAAM,IAAM,KAGtBJ,EAAoB,EACpBF,EAAkBM,EAAO,SAItB,GAAI1B,EAAQ0B,EAAM,IAAM,KAEd,MAATA,IACFH,EAAsB,KAEX,MAATG,IACFF,EAAsB,KAGxBF,EAAoB,EACpBF,EAAkBM,EAAO,QAItB,KAAI1B,EAAQ0B,EAAM,IAAM,KAgB3B,OAAOjB,EAAa1J,GAdP,MAAT2K,IACFH,EAAsB,KAEX,MAATG,IACFF,EAAsB,KAGxBF,EAAoB,EACpBF,EAAkBM,EAAO,GAO3B,CAMA,OADAN,IAAsC,EAAIE,EACnC,IACT,CAIA,IAAKtB,EAAQ0B,EAAMH,EAAqBC,GAatC,OARAJ,EAAkBE,EAAoBD,EAAkB,EACxDE,EAAsB,IACtBC,EAAsB,IAGtBC,EAAOnB,QAAQoB,GAGRjB,EAAa1J,GAgBtB,GAXAwK,EAAsB,IACtBC,EAAsB,IAMtBJ,GAAoBM,EAAO,KAAU,GAAKJ,GAD1CD,GAAmB,IAKfA,IAAoBC,EACtB,OAAO,KAGT,IAAIK,EAAaP,EAOjB,OAHAA,EAAkBE,EAAoBD,EAAkB,EAGjDM,CACT,CACF,CAOA,SAASC,EAAYzlD,GACPA,EAAQ46C,MAMpB12E,KAAKsmE,QAAU,SAAS8a,EAAQE,GAE9B,GAAIA,IAAezB,EACjB,OAAOt7D,EAIT,GAAIo7D,EAAQ2B,EAAY,EAAQ,KAC9B,OAAOA,EAGT,IAAI5pF,EAAOzE,EAEP0sF,EAAQ2B,EAAY,IAAQ,OAC9B5pF,EAAQ,EACRzE,EAAS,KAGF0sF,EAAQ2B,EAAY,KAAQ,QACnC5pF,EAAQ,EACRzE,EAAS,KAGF0sF,EAAQ2B,EAAY,MAAS,WACpC5pF,EAAQ,EACRzE,EAAS,KAQX,IAHA,IAAIqT,EAAQ,EAAEg7E,GAAe,EAAI5pF,GAAUzE,GAGpCyE,EAAQ,GAAG,CAGhB,IAAI8pF,EAAOF,GAAe,GAAK5pF,EAAQ,GAGvC4O,EAAMzO,KAAK,IAAe,GAAP2pF,GAGnB9pF,GAAS,CACX,CAGA,OAAO4O,CACT,CACF,CA1WAmwE,EAAYljF,UAAY,CAMtBc,OAAQ,SAAgB4W,EAAO6wB,GAC7B,IAAIx1B,EAEFA,EADmB,kBAAV2E,GAAsBA,aAAiB7M,YACxC,IAAInM,WAAWgZ,GACG,kBAAVA,GAAsB,WAAYA,GACzCA,EAAM3Y,kBAAkB8L,YACzB,IAAInM,WAAWgZ,EAAM3Y,OACN2Y,EAAM1Y,WACN0Y,EAAMhN,YAErB,IAAIhM,WAAW,GAGzB6pC,EAAU8jD,EAAa9jD,GAElB97B,KAAKugF,aACRvgF,KAAKygF,SAAW,IAAIK,EAAY,CAACpK,MAAO12E,KAAK0gF,SAC7C1gF,KAAKwgF,UAAW,GAElBxgF,KAAKugF,WAAa9kF,QAAQqgC,EAAgB,QAS1C,IAPA,IAKI5G,EALAusD,EAAe,IAAI3B,EAAOx5E,GAE1Bo7E,EAAc,IAKVD,EAAazB,gBACnB9qD,EAASl1B,KAAKygF,SAASna,QAAQmb,EAAcA,EAAargF,WAC3CmjB,GAEA,OAAX2Q,IAEA98B,MAAMC,QAAQ68B,GAChBwsD,EAAY7pF,KAAK4L,MAAMi+E,EAA0CxsD,GAEjEwsD,EAAY7pF,KAAKq9B,IAErB,IAAKl1B,KAAKugF,WAAY,CACpB,EAAG,CAED,IADArrD,EAASl1B,KAAKygF,SAASna,QAAQmb,EAAcA,EAAargF,WAC3CmjB,EACb,MACa,OAAX2Q,IAEA98B,MAAMC,QAAQ68B,GAChBwsD,EAAY7pF,KAAK4L,MAAMi+E,EAA0CxsD,GAEjEwsD,EAAY7pF,KAAKq9B,GACrB,QAAUusD,EAAazB,eACvBhgF,KAAKygF,SAAW,IAClB,CAoBA,OAlBIiB,EAAYlvF,UAI4B,IAAtC,CAAC,SAASsO,QAAQd,KAAKjC,WACtBiC,KAAK2gF,YAAe3gF,KAAKwgF,WAEL,QAAnBkB,EAAY,IACd1hF,KAAKwgF,UAAW,EAChBkB,EAAY3oF,SAIZiH,KAAKwgF,UAAW,IAjQ1B,SAA4BkB,GAE1B,IADA,IAAIxoE,EAAI,GACCthB,EAAI,EAAGA,EAAI8pF,EAAYlvF,SAAUoF,EAAG,CAC3C,IAAI+pF,EAAKD,EAAY9pF,GACjB+pF,GAAM,MACRzoE,GAAKzc,OAAO+G,aAAam+E,IAEzBA,GAAM,MACNzoE,GAAKzc,OAAO+G,aAA0B,OAAZm+E,GAAM,IACQ,OAAT,KAALA,IAE9B,CACA,OAAOzoE,CACT,CAyPW0oE,CAAmBF,EAC5B,GA8BF38D,EAAYxxB,UAAY,CAMtBkB,OAAQ,SAAgBotF,EAAY/lD,GAClC+lD,EAAaA,EAAaplF,OAAOolF,GAAc,GAC/C/lD,EAAU8jD,EAAa9jD,GAKlB97B,KAAKugF,aACRvgF,KAAK4gF,SAAW,IAAIW,EAAYvhF,KAAK6gF,WACvC7gF,KAAKugF,WAAa9kF,QAAQqgC,EAAgB,QAM1C,IAJA,IAGI5G,EAHA5uB,EAAQ,GACRm7E,EAAe,IAAI3B,EA1Y3B,SAA4BhiF,GAgB1B,IAZA,IAAIob,EAAIzc,OAAOqB,GAGX0C,EAAI0Y,EAAE1mB,OAGNoF,EAAI,EAGJ8rB,EAAI,GAGD9rB,EAAI4I,GAAG,CAGZ,IAAIiC,EAAIyW,EAAE9W,WAAWxK,GAKrB,GAAI6K,EAAI,OAAUA,EAAI,MAEpBihB,EAAE7rB,KAAK4K,QAIJ,GAAI,OAAUA,GAAKA,GAAK,MAE3BihB,EAAE7rB,KAAK,YAIJ,GAAI,OAAU4K,GAAKA,GAAK,MAG3B,GAAI7K,IAAM4I,EAAI,EACZkjB,EAAE7rB,KAAK,WAGJ,CAEH,IAAI8zB,EAAI7tB,EAAOsE,WAAWxK,EAAI,GAG9B,GAAI,OAAU+zB,GAAKA,GAAK,MAAQ,CAE9B,IAAIjnB,EAAQ,KAAJjC,EAGJzQ,EAAQ,KAAJ25B,EAIRjI,EAAE7rB,KAAK,OAAW6M,GAAK,IAAM1S,GAG7B4F,GAAK,CACP,MAKE8rB,EAAE7rB,KAAK,MAEX,CAIFD,GAAK,CACP,CAGA,OAAO8rB,CACT,CA6TkCo+D,CAAmBD,KAGzCJ,EAAazB,gBACnB9qD,EAASl1B,KAAK4gF,SAASta,QAAQmb,EAAcA,EAAargF,WAC3CmjB,GAEXnsB,MAAMC,QAAQ68B,GAChB5uB,EAAMzO,KAAK4L,MAAM6C,EAAoC4uB,GAErD5uB,EAAMzO,KAAKq9B,GAEf,IAAKl1B,KAAKugF,WAAY,CACpB,MACErrD,EAASl1B,KAAK4gF,SAASta,QAAQmb,EAAcA,EAAargF,WAC3CmjB,GAEXnsB,MAAMC,QAAQ68B,GAChB5uB,EAAMzO,KAAK4L,MAAM6C,EAAoC4uB,GAErD5uB,EAAMzO,KAAKq9B,GAEfl1B,KAAK4gF,SAAW,IAClB,CACA,OAAO,IAAI3uF,WAAWqU,EACxB","sources":["../../src/Layout.ts","../node_modules/@solana/buffer-layout/node_modules/buffer/index.js","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@solana/web3.js/node_modules/buffer/index.js","../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/@noble/hashes/src/cryptoBrowser.ts","../node_modules/@noble/hashes/src/_sha2.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/sha512.ts","../node_modules/@noble/ed25519/lib/esm/index.js","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/@noble/hashes/src/sha3.ts","../node_modules/@noble/hashes/src/hmac.ts","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@solana/web3.js/src/utils/ed25519.ts","../node_modules/@solana/web3.js/src/utils/to-buffer.ts","../node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/web3.js/src/transaction/constants.ts","../node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../node_modules/@solana/web3.js/src/message/account-keys.ts","../node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../node_modules/@solana/web3.js/src/utils/assert.ts","../node_modules/@solana/web3.js/src/message/compiled-keys.ts","../node_modules/@solana/web3.js/src/message/legacy.ts","../node_modules/@solana/web3.js/src/message/v0.ts","../node_modules/@solana/web3.js/src/transaction/legacy.ts","../node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../node_modules/@solana/web3.js/src/utils/sleep.ts","../node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/web3.js/src/utils/bigint.ts","../node_modules/@solana/web3.js/src/programs/system.ts","../node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","../node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@solana/web3.js/src/rpc-websocket.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../node_modules/@solana/web3.js/src/account-data.ts","../node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../node_modules/@solana/web3.js/src/programs/compute-budget.ts","../node_modules/@solana/web3.js/src/programs/ed25519.ts","../node_modules/@solana/web3.js/src/utils/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/stake.ts","../node_modules/@solana/web3.js/src/programs/vote.ts","../node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../../src/classes.ts","../../src/error-constants.ts","../../src/errors.ts","../../src/index.ts","../../src/utils.ts","../node_modules/base-x/src/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/bs58/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  // Cleanup internal state. Not '.clean' because instance is not usable after that.\n  // Clean usually resets instance to initial state, but it is not possible for keyed hashes if key is consumed into state.\n  // NOTE: if digest is not consumed by user, user need manually call '.destroy' if zeroing is required\n  abstract destroy(): void;\n  // Unsafe because doesn't check if \"to\" is correct. Can be used as clone() if no opts passed.\n  // Why cloneInto instead of clone? Mostly performance (same as _digestInto), but also has nice property: it reuses instance\n  // which means all internal buffers is overwritten, which also causes overwrite buffer which used for digest (in some cases).\n  // We don't provide any guarantees about cleanup (it is impossible to!), so should be enough for now.\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto.web) {\n    return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n  } else if (crypto.node) {\n    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n  } else {\n    throw new Error(\"The environment doesn't have randomBytes function\");\n  }\n}\n","// Global symbol available in browsers only\ndeclare const self: Record<string, any> | undefined;\nexport const crypto: { node?: any; web?: any } = {\n  node: undefined,\n  web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _8n = BigInt(8);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.BASE;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        let p = this.multiplyUnsafe(CURVE.l / _2n).double();\n        if (CURVE.l % _2n)\n            p = p.add(this);\n        return p.equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(ExtendedPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    assert.number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    assert.exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    assert.exists(this, false);\n    assert.bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    assert.number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    assert.output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructorWithOpts<Keccak, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client';\nimport RpcWebSocketBrowserFactory from 'rpc-websockets/dist/lib/client/websocket.browser';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = (\n          rpc as ReturnType<typeof RpcWebSocketBrowserFactory>\n        ).socket;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: false,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: \"utf8\" | \"hex\" }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, Buffer.from(signature));\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, Buffer.from(signature));\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, Buffer.from(signature));\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import { SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<SolflareWallet> {\n  protected getProviderHandlers(injectedProvider: SolflareWallet): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider, SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: SolflareWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolletHandlers } from \"./providerHandlers\";\n\nexport class SolletInjectedProvider extends BaseInjectedProvider<SolletWallet> {\n  protected getProviderHandlers(injectedProvider: SolletWallet): IProviderHandlers {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\nimport { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolletHandlers = (injectedProvider: SolletWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  providerHandlers.signMessage = async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n    const { signature } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n  providerHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return providerHandlers;\n};\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n",null,null,null,null,null,"'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_timer_id = undefined;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      clearTimeout(this.reconnect_timer_id);\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) _this4.reconnect_timer_id = setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["buffer_1","require","checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","Buffer","from","buffer","byteOffset","length","Layout","constructor","span","property","Number","isInteger","makeDestinationObject","getSpan","offset","RangeError","replicate","rv","Object","create","prototype","assign","fromArray","values","nameWithProperty","name","lo","ExternalLayout","isCount","Error","GreedyCount","elementSpan","arguments","undefined","decode","rem","Math","floor","encode","src","OffsetLayout","layout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","idx","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","fd","e","fsp","dest","firstOffset","lastOffset","lastWrote","fv","shift","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","union","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","base64","ieee754","customInspectSymbol","Symbol","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","byteLength","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","obj","isBuffer","len","checked","numberIsNaN","type","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","charCodeAt","asciiToBytes","base64Write","ucs2Write","units","c","hi","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","limit","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","code","errors","E","sym","getMessage","Base","super","writable","configurable","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","module","assert","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","wordSize","window","parseHex4Bits","index","parseHexByte","lowerBound","r","parseBase","move","num","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","ceil","w","off","_strip","limbLen","limbPow","total","mod","imuln","_iaddn","_move","clone","_expand","_normSign","for","zeros","groupSizes","groupBases","padding","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","toBuffer","toArrayLike","smallMulTo","self","k","ncarry","rword","maxJ","ArrayType","reqLength","allocate","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","isSafeInteger","_len","lengths","_key","bool","hash","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","createView","crypto","DataView","rotr","Uint32Array","padStart","toBytes","TextEncoder","Hash","_cloneInto","wrapConstructor","hashConstructor","hashC","update","digest","SHA2","padOffset","isLE","view","take","process","dataView","roundClean","digestInto","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","state","destroy","to","U32_MASK64","fromBig","lst","le","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","u64","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","_0n","_1n","_2n","_8n","CU_O","CURVE","freeze","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","static","Point","ZERO","points","toInv","nums","inverted","invert","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","X2Z1","Y1Z2","Y2Z1","negate","double","x1y1","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","precomputeWindow","W","windows","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","f","windowSize","maxNumber","shiftBy","wbits","offset1","offset2","cond1","cond2","constTimeNegate","multiply","scalar","normalizeScalar","multiplyUnsafe","P0","isSmallOrder","isTorsionFree","invZ","is0","ax","ay","zz","fromRistrettoBytes","legacyRist","toRistrettoBytes","fromRistrettoHash","condition","item","assertRstPoint","RistrettoPoint","ep","r0","Ns","isValid","Ns_D_is_sq","uvRatio","s_","edIsNegative","Nt","s2","W0","W1","W2","W3","hex","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","R2","emsg","equalBytes","numberTo32BytesLE","u1","u2","u1_2","u2_2","I","invertSqrt","Dx","Dy","toRawBytes","u2sq","invsqrt","D1","D2","zInv","_x","_y","toHex","bytesToHex","two","WeakMap","_setWindowSize","delete","strict","normed","bytesToNumberLE","y2","isXOdd","privateKey","getExtendedPublicKey","point","toX25519","Signature","assertValidity","fromHex","u8","concatBytes","arrays","every","result","pad","hexes","uint8a","hexToBytes","hexByte","byte","isNaN","numberTo32BytesBE","reverse","MAX_255B","modulo","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","_sha512Sync","sha512s","async","utils","getExtendedPublicKeySync","prepareVerification","sig","publicKey","SB","pub","finishVerification","kA","sync","getPublicKey","sign","R","verify","node","nodeCrypto","web","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","subtle","createHash","precompute","cached","sha512Sync","defineProperties","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","Chi","SHA224","sha256","StructError","failure","failures","rest","path","join","_cached","isObject","print","JSON","stringify","toFailure","context","struct","branch","refinement","toFailures","iterator","run","options","coerce","coercer","schema","valid","validator","entries","ts","Map","Set","refiner","Struct","props","validate","is","tuples","tuple","done","shiftIterator","define","Element","boolean","Class","literal","constant","description","never","nullable","optional","record","Key","Value","Elements","Never","keys","Structs","S","unknown","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state32","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","keccakP","finish","writeInto","bufferOut","xofInto","xof","gen","keccak_256","genShake","hashCons","opts","wrapConstructorWithOpts","dkLen","HMAC","iHash","oHash","getPrototypeOf","hmac","_3n","beta","divNearest","endo","splitScalar","POW_2_128","c1","c2","k1","k2","k1neg","k2neg","fieldLen","groupLen","hashLen","compressedLen","uncompressedLen","weierstrass","x3","USE_ENDOMORPHISM","ShaError","assertJacPoint","JacobianPoint","scratch","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","hasEvenY","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b11","b22","b44","b88","b176","b220","b223","t1","t2","rt","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","signature","recovery","normalizeSignature","truncateHash","radj","numTo32bStr","Q","multiplyAndAddUnsafe","isCompressed","toHexX","toRawX","aP","bQ","sliceDER","parseDERInt","hexToNumber","sBytes","rBytesLeft","parseDERSignature","fromDER","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toCompactRawBytes","toCompactHex","numTo32b","truncateOnly","bits2int_2","_sha256Sync","_hmacSha256Sync","HmacDrbg","qByteLen","counter","_len2","_key2","hmacSha256","hmacSync","_len3","_key3","checkSync","incr","seed","reseedSync","sl","generateSync","kmdToSig","kBytes","lowS","kinv","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","der","recovered","canonical","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","minLen","_len4","messages","_key4","forEach","_len5","_key5","ckey","importKey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","tagH","_len6","_key6","taggedHashSync","_len7","_key7","_JacobianPoint","ed25519","generateKeypair","privateScalar","secretKey","isOnCurve","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","_Symbol$toStringTag","toStringTag","PublicKey","_bn","isPublicKeyData","decoded","bs58","toBase58","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","err","findProgramAddressSync","pubkeyData","default","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","getAlloc","getItemAlloc","field","decodeLength","elem","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","filter","_ref","readonlySigners","_ref2","writableNonSigners","_ref3","readonlyNonSigners","_ref4","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","_ref5","_ref6","_ref7","_ref8","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","compile","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","numKeys","keyCount","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","_ref9","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","minContextSlot","blockhash","nonceInstruction","signers","_ref10","items","compileMessage","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","_ref11","_compile","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","_ref12","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","objToString","objKeys","isArrayProp","propVal","toStr","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","_ref13","customMessage","fetchImpl","globalThis","fetch","RpcWebSocketClient","RpcWebSocketCommonClient","generate_request_id","url","rpc","createRpc","autoconnect","max_reconnects","reconnect","reconnect_interval","underlyingSocket","socket","readyState","reject","notify","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetInflationRateResult","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","httpAgent","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","makeWebsocketUrl","customFetch","fetchWithMiddleware","info","init","modifiedFetchArgs","modifiedInfo","modifiedInit","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","client","createRpcRequest","requests","batch","methodName","createRpcBatchRequest","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","_buildArgs","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","configWithoutEncoding","strategy","rawSignature","decodedSignature","aborted","reason","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","addEventListener","getTransactionConfirmationPromise","_ref14","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","abortConfirmation","removeSignatureListener","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","_ref15","expiryPromise","checkBlockHeight","getBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","_ref16","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","_ref17","timeoutId","timeoutMs","TIMED_OUT","clearTimeout","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","unsafeRes","transactionDetails","_ref18","extra","block","_ref19","_ref20","endSlot","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","disableCache","expired","Date","now","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_ref21","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","cb","clientSubscriptionId","_this$_subscriptionSt","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","fastStableStringify$1","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","lookupTableAddress","bumpSeed","recentSlot","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","privKey","drbg","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","lockup","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","stakePubkey","maybeLockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","voteInit","voteAuthorizeWithSeedArgs","Voter","VoteProgram","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","createChainIdMiddleware","chainId","req","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","getAccounts","createAsyncMiddleware","_asyncToGenerator","_regeneratorRuntime","_callee","_context","abrupt","sent","stop","_x2","_x3","createRequestAccountsMiddleware","requestAccounts","_callee2","_context2","_x4","_x5","_x6","createGenericJRPCMiddleware","targetMethod","handler","_callee3","_context3","_x7","_x8","_x9","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","_BaseProvider","_inherits","_super","_createSuper$6","_classCallCheck","chainConfig","_objectSpread$3","chainNamespace","CHAIN_NAMESPACES","_createClass","_switchChain","_setupProvider","injectedProvider","engine","solanaMiddleware","configMiddleware","injectedProviderProxy","provider","JRPCEngine","getProviderHandlers","getInjectedProviderProxy","providerFromEngine","updateProviderEngineProxy","lookupNetwork","_lookupNetwork","BaseProvider","getBaseProviderHandlers","_requestAccounts","_getAccounts","_getPrivateKey","ethErrors","_getSecretKey","_callee4","_context4","_signTransaction","_callee5","_context5","_signMessage","_callee6","sigData","_context6","display","_signAllTransactions","_callee7","_req$params","_req$params2","_context7","_signAndSendTransaction","_callee8","txRes","_context8","createInjectedProviderProxyMiddleware","_next","_objectSpread$2","PhantomInjectedProvider","_BaseInjectedProvider","_createSuper$5","SlopeInjectedProxyProvider","_createSuper$4","getProviderEngineProxy","_yield$injectedProvid","_yield$injectedProvid2","txMessage","_yield$injectedProvid3","_yield$injectedProvid4","conn","_data$signatures","allTxns","unsignedTx","_yield$injectedProvid5","getSlopeHandlers","SolflareInjectedProvider","_createSuper$3","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","_createSuper$2","getSolletHandlers","getTorusHandlers","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","_createSuper$1","_objectSpread$1","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","emit","_setupEngine","_handleInjectedProviderUpdate","_this","configure","setupProvider","_getProviderHandlers","_callee9","keyPairGenerator","keyPair","_context9","signedMsg","nacl","_providerEngineProxy","_req$params6","txns","_iterator","_step","tx","_createForOfIteratorHelper","SolanaPrivateKeyProvider","_createSuper","_objectSpread","_enable","_createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","_updateAccount","t0","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","_addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","displayName","blockExplorer","switchSolanaChain","_switchSolanaChain","switchChain","createChainSwitchMiddleware","_this2","accountHandlers","updatePrivatekey","_updatePrivatekey","updateAccount","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","_yield$this$provider$","signedTransaction","signedTransactions","_request","fast_safe_stringify_1","EthereumRpcError","serialized","stringifyReplacer","isValidEthProviderCode","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","parse","invalidRequest","methodNotFound","invalidParams","internal","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","standard","classes_1","utils_1","error_constants_1","getEthJsonRpcError","parseOpts","getMessageFromCode","getEthProviderError","EthereumProviderError","errorCodes","server","custom","errors_1","FALLBACK_ERROR_CODE","FALLBACK_MESSAGE","FALLBACK_ERROR","fallbackMessage","codeString","hasKey","errorValues","isJsonRpcServerError","JSON_RPC_SERVER_ERROR_MESSAGE","isValidCode","assignOriginalError","fallbackError","shouldIncludeStack","_error","originalError","_a","_b","_Buffer","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","reversed","__createBinding","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","fieldName","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","serializeStruct","borshSerialize","structSchema","deserializeField","reader","deserializeStruct","classType","borshDeserialize","basex","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","isError","isNotError","_interopRequireDefault","_regenerator","_asyncToGenerator2","_typeof2","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_eventemitter","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","reconnect_timer_id","current_reconnects","_connect","timeout","ws_opts","send","promise","_login","mark","resp","wrap","_listMethods","_this3","_subscribe","event","_unsubscribe","_this4","listeners","EventEmitter","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","listener","rnds8","rng","msCrypto","REGEX","byteToHex","rnds","random","ReferenceError","asyncGeneratorStep","_throw","Constructor","toPropertyKey","_defineProperties","descriptor","protoProps","staticProps","_getPrototypeOf","__proto__","subClass","superClass","_typeof","assertThisInitialized","_setPrototypeOf","prim","inRange","ToDictionary","end_of_stream","Stream","tokens","endOfStream","prepend","token","pop","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}